import type { CallOptions } from '@connectrpc/connect';
import type { FlatTensors, MLModel } from './ml-model';
import { type Options } from '../../types';
import type { RobotClient } from '../../robot';
export declare class MLModelClient implements MLModel {
    private client;
    private readonly options;
    readonly name: string;
    callOptions: CallOptions;
    constructor(client: RobotClient, name: string, options?: Options);
    metadata(extra?: {}, callOptions?: CallOptions): Promise<import("../../gen/service/mlmodel/v1/mlmodel_pb").MetadataResponse>;
    infer(inputTensors: FlatTensors, extra?: {}, callOptions?: CallOptions): Promise<import("../../gen/service/mlmodel/v1/mlmodel_pb").InferResponse>;
}
