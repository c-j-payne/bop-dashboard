import { type Transport } from '@connectrpc/connect';
import type { GetCurrentMonthUsageResponse as PBGetCurrentMonthUsageResponse } from '../gen/app/v1/billing_pb';
export type GetCurrentMonthUsageResponse = Partial<PBGetCurrentMonthUsageResponse> & {
    start?: Date;
    end?: Date;
};
export declare class BillingClient {
    private client;
    constructor(transport: Transport);
    /**
     * Get the data usage information for the current month for a given
     * organization.
     *
     * @example
     *
     * ```ts
     * const usage = await billing.getCurrentMonthUsage('<organization-id>');
     * ```
     *
     * For more information, see [Billing
     * API](https://docs.viam.com/dev/reference/apis/billing-client/#getcurrentmonthusage).
     *
     * @param orgId - The organization ID.
     */
    getCurrentMonthUsage(orgId: string): Promise<GetCurrentMonthUsageResponse>;
    /**
     * Get the billing information (payment method, billing tier, etc.) for a
     * given org.
     *
     * @example
     *
     * ```ts
     * const billingInfo = await billing.getOrgBillingInformation(
     *   '<organization-id>'
     * );
     * ```
     *
     * For more information, see [Billing
     * API](https://docs.viam.com/dev/reference/apis/billing-client/#getorgbillinginformation).
     *
     * @param orgId - The organization ID.
     */
    getOrgBillingInformation(orgId: string): Promise<import("../gen/app/v1/billing_pb").GetOrgBillingInformationResponse>;
    /**
     * Get total outstanding balance plus invoice summaries for a given org.
     *
     * @example
     *
     * ```ts
     * const invoicesSummary = await billing.getInvoicesSummary(
     *   '<organization-id>'
     * );
     * ```
     *
     * For more information, see [Billing
     * API](https://docs.viam.com/dev/reference/apis/billing-client/#getinvoicesummary).
     *
     * @param orgId - The organization ID.
     */
    getInvoicesSummary(orgId: string): Promise<import("../gen/app/v1/billing_pb").GetInvoicesSummaryResponse>;
    /**
     * Get invoice PDF data.
     *
     * @example
     *
     * ```ts
     * const invoicePdf = await billing.getInvoicePdf(
     *   '<invoice-id>',
     *   '<organization-id>'
     * );
     * ```
     *
     * For more information, see [Billing
     * API](https://docs.viam.com/dev/reference/apis/billing-client/#getinvoicepdf).
     *
     * @param id - The invoice ID.
     * @param orgId - The organization ID.
     */
    getInvoicePdf(id: string, orgId: string): Promise<Uint8Array>;
}
