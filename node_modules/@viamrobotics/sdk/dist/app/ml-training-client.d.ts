import { type Transport } from '@connectrpc/connect';
import { ModelType, TrainingStatus } from '../gen/app/mltraining/v1/ml_training_pb';
export declare class MlTrainingClient {
    private client;
    constructor(transport: Transport);
    /**
     * Submit a training job.
     *
     * @example
     *
     * ```ts
     * await mlTrainingClient.submitTrainingJob(
     *   '<organization-id>',
     *   '<dataset-id>',
     *   '<your-model-name>',
     *   '1.0.0',
     *   ModelType.SINGLE_LABEL_CLASSIFICATION,
     *   ['tag1', 'tag2']
     * );
     * ```
     *
     * For more information, see [ML Training
     * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#submittrainingjob).
     *
     * @param organizationId - The organization ID.
     * @param datasetId - The dataset ID.
     * @param modelName - The model name.
     * @param modelVersion - The model version.
     * @param modelType - The model type.
     * @param tags - The tags.
     */
    submitTrainingJob(organizationId: string, datasetId: string, modelName: string, modelVersion: string, modelType: ModelType, tags: string[]): Promise<string>;
    /**
     * Submit a training job from a custom training script.
     *
     * @example
     *
     * ```ts
     * await mlTrainingClient.submitCustomTrainingJob(
     *   '<organization-id>',
     *   '<dataset-id>',
     *   'viam:classification-tflite',
     *   '1.0.0',
     *   '<your-model-name>',
     *   '1.0.0'
     * );
     * ```
     *
     * For more information, see [ML Training
     * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#submitcustomtrainingjob).
     *
     * @param organizationId - The organization ID.
     * @param datasetId - The dataset ID.
     * @param registryItemId - The registry item ID.
     * @param registryItemVersion - The registry item version.
     * @param modelName - The model name.
     * @param modelVersion - The model version.
     */
    submitCustomTrainingJob(organizationId: string, datasetId: string, registryItemId: string, registryItemVersion: string, modelName: string, modelVersion: string): Promise<string>;
    /**
     * Get a training job metadata.
     *
     * @example
     *
     * ```ts
     * const job = await mlTrainingClient.getTrainingJob('<training-job-id>');
     * ```
     *
     * For more information, see [ML Training
     * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#gettrainingjob).
     *
     * @param id - The training job ID.
     */
    getTrainingJob(id: string): Promise<import("../gen/app/mltraining/v1/ml_training_pb").TrainingJobMetadata | undefined>;
    /**
     * List training jobs.
     *
     * @example
     *
     * ```ts
     * const jobs = await mlTrainingClient.listTrainingJobs(
     *   '<organization-id>',
     *   TrainingStatus.RUNNING
     * );
     * ```
     *
     * For more information, see [ML Training
     * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#listtrainingjobs).
     *
     * @param organizationId - The organization ID.
     * @param status - The training job status.
     */
    listTrainingJobs(organizationId: string, status: TrainingStatus): Promise<import("../gen/app/mltraining/v1/ml_training_pb").TrainingJobMetadata[]>;
    /**
     * Cancel a training job.
     *
     * @example
     *
     * ```ts
     * await mlTrainingClient.cancelTrainingJob('<training-job-id>');
     * ```
     *
     * For more information, see [ML Training
     * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#canceltrainingjob).
     *
     * @param id - The training job ID.
     */
    cancelTrainingJob(id: string): Promise<null>;
    /**
     * Delete a completed training job.
     *
     * @example
     *
     * ```ts
     * await mlTrainingClient.deleteCompletedTrainingJob('<training-job-id>');
     * ```
     *
     * For more information, see [ML Training
     * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#deletecompletedtrainingjob).
     *
     * @param id - The training job ID.
     */
    deleteCompletedTrainingJob(id: string): Promise<null>;
}
export { ModelType, TrainingStatus, } from '../gen/app/mltraining/v1/ml_training_pb';
