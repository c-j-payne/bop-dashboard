{"ast":null,"code":"var _jsxFileName = \"/home/cjp7591/dev/dashboard/src/components/SensorDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useStore, useSensorReadings } from \"../state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorDisplay = ({\n  sensorName,\n  title = sensorName\n}) => {\n  _s();\n  const {\n    client,\n    status\n  } = useStore();\n  const {\n    readings,\n    loading\n  } = useSensorReadings(client, sensorName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-2\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), status === \"connected\" ? loading && !readings ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-500\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: readings ? Object.entries(readings).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: typeof value === \"object\" ? JSON.stringify(value) : value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-500\",\n      children: \"Please connect to robot first\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorDisplay, \"BtAb6fbYWl8vrOWA5pjyyvQXkQE=\", false, function () {\n  return [useStore, useSensorReadings];\n});\n_c = SensorDisplay;\nexport default SensorDisplay;\nvar _c;\n$RefreshReg$(_c, \"SensorDisplay\");","map":{"version":3,"names":["React","useStore","useSensorReadings","jsxDEV","_jsxDEV","SensorDisplay","sensorName","title","_s","client","status","readings","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/cjp7591/dev/dashboard/src/components/SensorDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport { useStore, useSensorReadings } from \"../state\";\n\ninterface SensorDisplayProps {\n  sensorName: string;\n  title?: string;\n}\n\nconst SensorDisplay: React.FC<SensorDisplayProps> = ({ \n  sensorName, \n  title = sensorName \n}) => {\n  const { client, status } = useStore();\n  const { readings, loading } = useSensorReadings(client, sensorName);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4\">\n      <h2 className=\"text-lg font-semibold mb-2\">{title}</h2>\n      {status === \"connected\" ? (\n        loading && !readings ? (\n          <div className=\"text-gray-500\">Loading...</div>\n        ) : (\n          <div className=\"space-y-2\">\n            {readings ? (\n              Object.entries(readings).map(([key, value]) => (\n                <div key={key} className=\"flex justify-between\">\n                  <span className=\"font-medium\">{key}:</span>\n                  <span>{typeof value === \"object\" ? JSON.stringify(value) : value}</span>\n                </div>\n              ))\n            ) : (\n              <div className=\"text-gray-500\">No data available</div>\n            )}\n          </div>\n        )\n      ) : (\n        <div className=\"text-gray-500\">Please connect to robot first</div>\n      )}\n    </div>\n  );\n};\n\nexport default SensorDisplay;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,iBAAiB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvD,MAAMC,aAA2C,GAAGA,CAAC;EACnDC,UAAU;EACVC,KAAK,GAAGD;AACV,CAAC,KAAK;EAAAE,EAAA;EACJ,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACrC,MAAM;IAAEU,QAAQ;IAAEC;EAAQ,CAAC,GAAGV,iBAAiB,CAACO,MAAM,EAAEH,UAAU,CAAC;EAEnE,oBACEF,OAAA;IAAKS,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDV,OAAA;MAAIS,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtDR,MAAM,KAAK,WAAW,GACrBE,OAAO,IAAI,CAACD,QAAQ,gBAClBP,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE/Cd,OAAA;MAAKS,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBH,QAAQ,GACPQ,MAAM,CAACC,OAAO,CAACT,QAAQ,CAAC,CAACU,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACxCnB,OAAA;QAAeS,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBAC7CV,OAAA;UAAMS,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAEQ,GAAG,EAAC,GAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3Cd,OAAA;UAAAU,QAAA,EAAO,OAAOS,KAAK,KAAK,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC,GAAGA;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFhEI,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CACN,CAAC,gBAEFd,OAAA;QAAKS,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACtD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,gBAEDd,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAClE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACV,EAAA,CAhCIH,aAA2C;EAAA,QAIpBJ,QAAQ,EACLC,iBAAiB;AAAA;AAAAwB,EAAA,GAL3CrB,aAA2C;AAkCjD,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}