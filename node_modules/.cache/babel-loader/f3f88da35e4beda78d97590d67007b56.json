{"ast":null,"code":"function L(a, e) {\n  if (!a) throw new Error(e);\n}\nconst _v = 34028234663852886e22,\n  Sv = -34028234663852886e22,\n  Iv = 4294967295,\n  Mv = 2147483647,\n  bv = -2147483648;\nfunction Un(a) {\n  if (typeof a != \"number\") throw new Error(\"invalid int 32: \" + typeof a);\n  if (!Number.isInteger(a) || a > Mv || a < bv) throw new Error(\"invalid int 32: \" + a);\n}\nfunction La(a) {\n  if (typeof a != \"number\") throw new Error(\"invalid uint 32: \" + typeof a);\n  if (!Number.isInteger(a) || a > Iv || a < 0) throw new Error(\"invalid uint 32: \" + a);\n}\nfunction Mi(a) {\n  if (typeof a != \"number\") throw new Error(\"invalid float 32: \" + typeof a);\n  if (Number.isFinite(a) && (a > _v || a < Sv)) throw new Error(\"invalid float 32: \" + a);\n}\nconst bi = Symbol(\"@bufbuild/protobuf/enum-type\");\nfunction wv(a) {\n  const e = a[bi];\n  return L(e, \"missing enum type on enum object\"), e;\n}\nfunction wi(a, e, n, t) {\n  a[bi] = Ei(e, n.map(o => ({\n    no: o.no,\n    name: o.name,\n    localName: a[o.no]\n  })));\n}\nfunction Ei(a, e, n) {\n  const t = /* @__PURE__ */Object.create(null),\n    o = /* @__PURE__ */Object.create(null),\n    i = [];\n  for (const r of e) {\n    const c = Oi(r);\n    i.push(c), t[r.name] = c, o[r.no] = c;\n  }\n  return {\n    typeName: a,\n    values: i,\n    // We do not surface options at this time\n    // options: opt?.options ?? Object.create(null),\n    findName(r) {\n      return t[r];\n    },\n    findNumber(r) {\n      return o[r];\n    }\n  };\n}\nfunction Ev(a, e, n) {\n  const t = {};\n  for (const o of e) {\n    const i = Oi(o);\n    t[i.localName] = i.no, t[i.no] = i.localName;\n  }\n  return wi(t, a, e), t;\n}\nfunction Oi(a) {\n  return \"localName\" in a ? a : Object.assign(Object.assign({}, a), {\n    localName: a.name\n  });\n}\nclass w {\n  /**\n   * Compare with a message of the same type.\n   * Note that this function disregards extensions and unknown fields.\n   */\n  equals(e) {\n    return this.getType().runtime.util.equals(this.getType(), this, e);\n  }\n  /**\n   * Create a deep copy.\n   */\n  clone() {\n    return this.getType().runtime.util.clone(this);\n  }\n  /**\n   * Parse from binary data, merging fields.\n   *\n   * Repeated fields are appended. Map entries are added, overwriting\n   * existing keys.\n   *\n   * If a message field is already present, it will be merged with the\n   * new data.\n   */\n  fromBinary(e, n) {\n    const t = this.getType(),\n      o = t.runtime.bin,\n      i = o.makeReadOptions(n);\n    return o.readMessage(this, i.readerFactory(e), e.byteLength, i), this;\n  }\n  /**\n   * Parse a message from a JSON value.\n   */\n  fromJson(e, n) {\n    const t = this.getType(),\n      o = t.runtime.json,\n      i = o.makeReadOptions(n);\n    return o.readMessage(t, e, i, this), this;\n  }\n  /**\n   * Parse a message from a JSON string.\n   */\n  fromJsonString(e, n) {\n    let t;\n    try {\n      t = JSON.parse(e);\n    } catch (o) {\n      throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${o instanceof Error ? o.message : String(o)}`);\n    }\n    return this.fromJson(t, n);\n  }\n  /**\n   * Serialize the message to binary data.\n   */\n  toBinary(e) {\n    const n = this.getType(),\n      t = n.runtime.bin,\n      o = t.makeWriteOptions(e),\n      i = o.writerFactory();\n    return t.writeMessage(this, i, o), i.finish();\n  }\n  /**\n   * Serialize the message to a JSON value, a JavaScript value that can be\n   * passed to JSON.stringify().\n   */\n  toJson(e) {\n    const n = this.getType(),\n      t = n.runtime.json,\n      o = t.makeWriteOptions(e);\n    return t.writeMessage(this, o);\n  }\n  /**\n   * Serialize the message to a JSON string.\n   */\n  toJsonString(e) {\n    var n;\n    const t = this.toJson(e);\n    return JSON.stringify(t, null, (n = e?.prettySpaces) !== null && n !== void 0 ? n : 0);\n  }\n  /**\n   * Override for serialization behavior. This will be invoked when calling\n   * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n   *\n   * Note that this will not serialize google.protobuf.Any with a packed\n   * message because the protobuf JSON format specifies that it needs to be\n   * unpacked, and this is only possible with a type registry to look up the\n   * message type.  As a result, attempting to serialize a message with this\n   * type will throw an Error.\n   *\n   * This method is protected because you should not need to invoke it\n   * directly -- instead use JSON.stringify or toJsonString for\n   * stringified JSON.  Alternatively, if actual JSON is desired, you should\n   * use toJson.\n   */\n  toJSON() {\n    return this.toJson({\n      emitDefaultValues: !0\n    });\n  }\n  /**\n   * Retrieve the MessageType of this message - a singleton that represents\n   * the protobuf message declaration and provides metadata for reflection-\n   * based operations.\n   */\n  getType() {\n    return Object.getPrototypeOf(this).constructor;\n  }\n}\nfunction Ov(a, e, n, t) {\n  var o;\n  const i = (o = t?.localName) !== null && o !== void 0 ? o : e.substring(e.lastIndexOf(\".\") + 1),\n    r = {\n      [i]: function (c) {\n        a.util.initFields(this), a.util.initPartial(c, this);\n      }\n    }[i];\n  return Object.setPrototypeOf(r.prototype, new w()), Object.assign(r, {\n    runtime: a,\n    typeName: e,\n    fields: a.util.newFieldList(n),\n    fromBinary(c, p) {\n      return new r().fromBinary(c, p);\n    },\n    fromJson(c, p) {\n      return new r().fromJson(c, p);\n    },\n    fromJsonString(c, p) {\n      return new r().fromJsonString(c, p);\n    },\n    equals(c, p) {\n      return a.util.equals(r, c, p);\n    }\n  }), r;\n}\nfunction Cv() {\n  let a = 0,\n    e = 0;\n  for (let t = 0; t < 28; t += 7) {\n    let o = this.buf[this.pos++];\n    if (a |= (o & 127) << t, !(o & 128)) return this.assertBounds(), [a, e];\n  }\n  let n = this.buf[this.pos++];\n  if (a |= (n & 15) << 28, e = (n & 112) >> 4, !(n & 128)) return this.assertBounds(), [a, e];\n  for (let t = 3; t <= 31; t += 7) {\n    let o = this.buf[this.pos++];\n    if (e |= (o & 127) << t, !(o & 128)) return this.assertBounds(), [a, e];\n  }\n  throw new Error(\"invalid varint\");\n}\nfunction Na(a, e, n) {\n  for (let i = 0; i < 28; i = i + 7) {\n    const r = a >>> i,\n      c = !(!(r >>> 7) && e == 0),\n      p = (c ? r | 128 : r) & 255;\n    if (n.push(p), !c) return;\n  }\n  const t = a >>> 28 & 15 | (e & 7) << 4,\n    o = !!(e >> 3);\n  if (n.push((o ? t | 128 : t) & 255), !!o) {\n    for (let i = 3; i < 31; i = i + 7) {\n      const r = e >>> i,\n        c = !!(r >>> 7),\n        p = (c ? r | 128 : r) & 255;\n      if (n.push(p), !c) return;\n    }\n    n.push(e >>> 31 & 1);\n  }\n}\nconst Gn = 4294967296;\nfunction Wo(a) {\n  const e = a[0] === \"-\";\n  e && (a = a.slice(1));\n  const n = 1e6;\n  let t = 0,\n    o = 0;\n  function i(r, c) {\n    const p = Number(a.slice(r, c));\n    o *= n, t = t * n + p, t >= Gn && (o = o + (t / Gn | 0), t = t % Gn);\n  }\n  return i(-24, -18), i(-18, -12), i(-12, -6), i(-6), e ? Ni(t, o) : nt(t, o);\n}\nfunction Nv(a, e) {\n  let n = nt(a, e);\n  const t = n.hi & 2147483648;\n  t && (n = Ni(n.lo, n.hi));\n  const o = Ci(n.lo, n.hi);\n  return t ? \"-\" + o : o;\n}\nfunction Ci(a, e) {\n  if ({\n    lo: a,\n    hi: e\n  } = Pv(a, e), e <= 2097151) return String(Gn * e + a);\n  const n = a & 16777215,\n    t = (a >>> 24 | e << 8) & 16777215,\n    o = e >> 16 & 65535;\n  let i = n + t * 6777216 + o * 6710656,\n    r = t + o * 8147497,\n    c = o * 2;\n  const p = 1e7;\n  return i >= p && (r += Math.floor(i / p), i %= p), r >= p && (c += Math.floor(r / p), r %= p), c.toString() + jo(r) + jo(i);\n}\nfunction Pv(a, e) {\n  return {\n    lo: a >>> 0,\n    hi: e >>> 0\n  };\n}\nfunction nt(a, e) {\n  return {\n    lo: a | 0,\n    hi: e | 0\n  };\n}\nfunction Ni(a, e) {\n  return e = ~e, a ? a = ~a + 1 : e += 1, nt(a, e);\n}\nconst jo = a => {\n  const e = String(a);\n  return \"0000000\".slice(e.length) + e;\n};\nfunction Ho(a, e) {\n  if (a >= 0) {\n    for (; a > 127;) e.push(a & 127 | 128), a = a >>> 7;\n    e.push(a);\n  } else {\n    for (let n = 0; n < 9; n++) e.push(a & 127 | 128), a = a >> 7;\n    e.push(1);\n  }\n}\nfunction Av() {\n  let a = this.buf[this.pos++],\n    e = a & 127;\n  if (!(a & 128)) return this.assertBounds(), e;\n  if (a = this.buf[this.pos++], e |= (a & 127) << 7, !(a & 128)) return this.assertBounds(), e;\n  if (a = this.buf[this.pos++], e |= (a & 127) << 14, !(a & 128)) return this.assertBounds(), e;\n  if (a = this.buf[this.pos++], e |= (a & 127) << 21, !(a & 128)) return this.assertBounds(), e;\n  a = this.buf[this.pos++], e |= (a & 15) << 28;\n  for (let n = 5; a & 128 && n < 10; n++) a = this.buf[this.pos++];\n  if (a & 128) throw new Error(\"invalid varint\");\n  return this.assertBounds(), e >>> 0;\n}\nfunction Dv() {\n  const a = new DataView(new ArrayBuffer(8));\n  if (typeof BigInt == \"function\" && typeof a.getBigInt64 == \"function\" && typeof a.getBigUint64 == \"function\" && typeof a.setBigInt64 == \"function\" && typeof a.setBigUint64 == \"function\" && (typeof process != \"object\" || typeof process.env != \"object\" || process.env.BUF_BIGINT_DISABLE !== \"1\")) {\n    const o = BigInt(\"-9223372036854775808\"),\n      i = BigInt(\"9223372036854775807\"),\n      r = BigInt(\"0\"),\n      c = BigInt(\"18446744073709551615\");\n    return {\n      zero: BigInt(0),\n      supported: !0,\n      parse(p) {\n        const d = typeof p == \"bigint\" ? p : BigInt(p);\n        if (d > i || d < o) throw new Error(`int64 invalid: ${p}`);\n        return d;\n      },\n      uParse(p) {\n        const d = typeof p == \"bigint\" ? p : BigInt(p);\n        if (d > c || d < r) throw new Error(`uint64 invalid: ${p}`);\n        return d;\n      },\n      enc(p) {\n        return a.setBigInt64(0, this.parse(p), !0), {\n          lo: a.getInt32(0, !0),\n          hi: a.getInt32(4, !0)\n        };\n      },\n      uEnc(p) {\n        return a.setBigInt64(0, this.uParse(p), !0), {\n          lo: a.getInt32(0, !0),\n          hi: a.getInt32(4, !0)\n        };\n      },\n      dec(p, d) {\n        return a.setInt32(0, p, !0), a.setInt32(4, d, !0), a.getBigInt64(0, !0);\n      },\n      uDec(p, d) {\n        return a.setInt32(0, p, !0), a.setInt32(4, d, !0), a.getBigUint64(0, !0);\n      }\n    };\n  }\n  const n = o => L(/^-?[0-9]+$/.test(o), `int64 invalid: ${o}`),\n    t = o => L(/^[0-9]+$/.test(o), `uint64 invalid: ${o}`);\n  return {\n    zero: \"0\",\n    supported: !1,\n    parse(o) {\n      return typeof o != \"string\" && (o = o.toString()), n(o), o;\n    },\n    uParse(o) {\n      return typeof o != \"string\" && (o = o.toString()), t(o), o;\n    },\n    enc(o) {\n      return typeof o != \"string\" && (o = o.toString()), n(o), Wo(o);\n    },\n    uEnc(o) {\n      return typeof o != \"string\" && (o = o.toString()), t(o), Wo(o);\n    },\n    dec(o, i) {\n      return Nv(o, i);\n    },\n    uDec(o, i) {\n      return Ci(o, i);\n    }\n  };\n}\nconst V = Dv();\nvar h;\n(function (a) {\n  a[a.DOUBLE = 1] = \"DOUBLE\", a[a.FLOAT = 2] = \"FLOAT\", a[a.INT64 = 3] = \"INT64\", a[a.UINT64 = 4] = \"UINT64\", a[a.INT32 = 5] = \"INT32\", a[a.FIXED64 = 6] = \"FIXED64\", a[a.FIXED32 = 7] = \"FIXED32\", a[a.BOOL = 8] = \"BOOL\", a[a.STRING = 9] = \"STRING\", a[a.BYTES = 12] = \"BYTES\", a[a.UINT32 = 13] = \"UINT32\", a[a.SFIXED32 = 15] = \"SFIXED32\", a[a.SFIXED64 = 16] = \"SFIXED64\", a[a.SINT32 = 17] = \"SINT32\", a[a.SINT64 = 18] = \"SINT64\";\n})(h || (h = {}));\nvar Je;\n(function (a) {\n  a[a.BIGINT = 0] = \"BIGINT\", a[a.STRING = 1] = \"STRING\";\n})(Je || (Je = {}));\nfunction Ge(a, e, n) {\n  if (e === n) return !0;\n  if (a == h.BYTES) {\n    if (!(e instanceof Uint8Array) || !(n instanceof Uint8Array) || e.length !== n.length) return !1;\n    for (let t = 0; t < e.length; t++) if (e[t] !== n[t]) return !1;\n    return !0;\n  }\n  switch (a) {\n    case h.UINT64:\n    case h.FIXED64:\n    case h.INT64:\n    case h.SFIXED64:\n    case h.SINT64:\n      return e == n;\n  }\n  return !1;\n}\nfunction nn(a, e) {\n  switch (a) {\n    case h.BOOL:\n      return !1;\n    case h.UINT64:\n    case h.FIXED64:\n    case h.INT64:\n    case h.SFIXED64:\n    case h.SINT64:\n      return e == 0 ? V.zero : \"0\";\n    case h.DOUBLE:\n    case h.FLOAT:\n      return 0;\n    case h.BYTES:\n      return new Uint8Array(0);\n    case h.STRING:\n      return \"\";\n    default:\n      return 0;\n  }\n}\nfunction Pi(a, e) {\n  switch (a) {\n    case h.BOOL:\n      return e === !1;\n    case h.STRING:\n      return e === \"\";\n    case h.BYTES:\n      return e instanceof Uint8Array && !e.byteLength;\n    default:\n      return e == 0;\n  }\n}\nvar B;\n(function (a) {\n  a[a.Varint = 0] = \"Varint\", a[a.Bit64 = 1] = \"Bit64\", a[a.LengthDelimited = 2] = \"LengthDelimited\", a[a.StartGroup = 3] = \"StartGroup\", a[a.EndGroup = 4] = \"EndGroup\", a[a.Bit32 = 5] = \"Bit32\";\n})(B || (B = {}));\nclass qv {\n  constructor(e) {\n    this.stack = [], this.textEncoder = e ?? new TextEncoder(), this.chunks = [], this.buf = [];\n  }\n  /**\n   * Return all bytes written and reset this writer.\n   */\n  finish() {\n    this.chunks.push(new Uint8Array(this.buf));\n    let e = 0;\n    for (let o = 0; o < this.chunks.length; o++) e += this.chunks[o].length;\n    let n = new Uint8Array(e),\n      t = 0;\n    for (let o = 0; o < this.chunks.length; o++) n.set(this.chunks[o], t), t += this.chunks[o].length;\n    return this.chunks = [], n;\n  }\n  /**\n   * Start a new fork for length-delimited data like a message\n   * or a packed repeated field.\n   *\n   * Must be joined later with `join()`.\n   */\n  fork() {\n    return this.stack.push({\n      chunks: this.chunks,\n      buf: this.buf\n    }), this.chunks = [], this.buf = [], this;\n  }\n  /**\n   * Join the last fork. Write its length and bytes, then\n   * return to the previous state.\n   */\n  join() {\n    let e = this.finish(),\n      n = this.stack.pop();\n    if (!n) throw new Error(\"invalid state, fork stack empty\");\n    return this.chunks = n.chunks, this.buf = n.buf, this.uint32(e.byteLength), this.raw(e);\n  }\n  /**\n   * Writes a tag (field number and wire type).\n   *\n   * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n   *\n   * Generated code should compute the tag ahead of time and call `uint32()`.\n   */\n  tag(e, n) {\n    return this.uint32((e << 3 | n) >>> 0);\n  }\n  /**\n   * Write a chunk of raw bytes.\n   */\n  raw(e) {\n    return this.buf.length && (this.chunks.push(new Uint8Array(this.buf)), this.buf = []), this.chunks.push(e), this;\n  }\n  /**\n   * Write a `uint32` value, an unsigned 32 bit varint.\n   */\n  uint32(e) {\n    for (La(e); e > 127;) this.buf.push(e & 127 | 128), e = e >>> 7;\n    return this.buf.push(e), this;\n  }\n  /**\n   * Write a `int32` value, a signed 32 bit varint.\n   */\n  int32(e) {\n    return Un(e), Ho(e, this.buf), this;\n  }\n  /**\n   * Write a `bool` value, a variant.\n   */\n  bool(e) {\n    return this.buf.push(e ? 1 : 0), this;\n  }\n  /**\n   * Write a `bytes` value, length-delimited arbitrary data.\n   */\n  bytes(e) {\n    return this.uint32(e.byteLength), this.raw(e);\n  }\n  /**\n   * Write a `string` value, length-delimited data converted to UTF-8 text.\n   */\n  string(e) {\n    let n = this.textEncoder.encode(e);\n    return this.uint32(n.byteLength), this.raw(n);\n  }\n  /**\n   * Write a `float` value, 32-bit floating point number.\n   */\n  float(e) {\n    Mi(e);\n    let n = new Uint8Array(4);\n    return new DataView(n.buffer).setFloat32(0, e, !0), this.raw(n);\n  }\n  /**\n   * Write a `double` value, a 64-bit floating point number.\n   */\n  double(e) {\n    let n = new Uint8Array(8);\n    return new DataView(n.buffer).setFloat64(0, e, !0), this.raw(n);\n  }\n  /**\n   * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n   */\n  fixed32(e) {\n    La(e);\n    let n = new Uint8Array(4);\n    return new DataView(n.buffer).setUint32(0, e, !0), this.raw(n);\n  }\n  /**\n   * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n   */\n  sfixed32(e) {\n    Un(e);\n    let n = new Uint8Array(4);\n    return new DataView(n.buffer).setInt32(0, e, !0), this.raw(n);\n  }\n  /**\n   * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n   */\n  sint32(e) {\n    return Un(e), e = (e << 1 ^ e >> 31) >>> 0, Ho(e, this.buf), this;\n  }\n  /**\n   * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n   */\n  sfixed64(e) {\n    let n = new Uint8Array(8),\n      t = new DataView(n.buffer),\n      o = V.enc(e);\n    return t.setInt32(0, o.lo, !0), t.setInt32(4, o.hi, !0), this.raw(n);\n  }\n  /**\n   * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n   */\n  fixed64(e) {\n    let n = new Uint8Array(8),\n      t = new DataView(n.buffer),\n      o = V.uEnc(e);\n    return t.setInt32(0, o.lo, !0), t.setInt32(4, o.hi, !0), this.raw(n);\n  }\n  /**\n   * Write a `int64` value, a signed 64-bit varint.\n   */\n  int64(e) {\n    let n = V.enc(e);\n    return Na(n.lo, n.hi, this.buf), this;\n  }\n  /**\n   * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n   */\n  sint64(e) {\n    let n = V.enc(e),\n      t = n.hi >> 31,\n      o = n.lo << 1 ^ t,\n      i = (n.hi << 1 | n.lo >>> 31) ^ t;\n    return Na(o, i, this.buf), this;\n  }\n  /**\n   * Write a `uint64` value, an unsigned 64-bit varint.\n   */\n  uint64(e) {\n    let n = V.uEnc(e);\n    return Na(n.lo, n.hi, this.buf), this;\n  }\n}\nclass Ai {\n  constructor(e, n) {\n    this.varint64 = Cv, this.uint32 = Av, this.buf = e, this.len = e.length, this.pos = 0, this.view = new DataView(e.buffer, e.byteOffset, e.byteLength), this.textDecoder = n ?? new TextDecoder();\n  }\n  /**\n   * Reads a tag - field number and wire type.\n   */\n  tag() {\n    let e = this.uint32(),\n      n = e >>> 3,\n      t = e & 7;\n    if (n <= 0 || t < 0 || t > 5) throw new Error(\"illegal tag: field no \" + n + \" wire type \" + t);\n    return [n, t];\n  }\n  /**\n   * Skip one element and return the skipped data.\n   *\n   * When skipping StartGroup, provide the tags field number to check for\n   * matching field number in the EndGroup tag.\n   */\n  skip(e, n) {\n    let t = this.pos;\n    switch (e) {\n      case B.Varint:\n        for (; this.buf[this.pos++] & 128;);\n        break;\n      case B.Bit64:\n        this.pos += 4;\n      case B.Bit32:\n        this.pos += 4;\n        break;\n      case B.LengthDelimited:\n        let o = this.uint32();\n        this.pos += o;\n        break;\n      case B.StartGroup:\n        for (;;) {\n          const [i, r] = this.tag();\n          if (r === B.EndGroup) {\n            if (n !== void 0 && i !== n) throw new Error(\"invalid end group tag\");\n            break;\n          }\n          this.skip(r, i);\n        }\n        break;\n      default:\n        throw new Error(\"cant skip wire type \" + e);\n    }\n    return this.assertBounds(), this.buf.subarray(t, this.pos);\n  }\n  /**\n   * Throws error if position in byte array is out of range.\n   */\n  assertBounds() {\n    if (this.pos > this.len) throw new RangeError(\"premature EOF\");\n  }\n  /**\n   * Read a `int32` field, a signed 32 bit varint.\n   */\n  int32() {\n    return this.uint32() | 0;\n  }\n  /**\n   * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n   */\n  sint32() {\n    let e = this.uint32();\n    return e >>> 1 ^ -(e & 1);\n  }\n  /**\n   * Read a `int64` field, a signed 64-bit varint.\n   */\n  int64() {\n    return V.dec(...this.varint64());\n  }\n  /**\n   * Read a `uint64` field, an unsigned 64-bit varint.\n   */\n  uint64() {\n    return V.uDec(...this.varint64());\n  }\n  /**\n   * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n   */\n  sint64() {\n    let [e, n] = this.varint64(),\n      t = -(e & 1);\n    return e = (e >>> 1 | (n & 1) << 31) ^ t, n = n >>> 1 ^ t, V.dec(e, n);\n  }\n  /**\n   * Read a `bool` field, a variant.\n   */\n  bool() {\n    let [e, n] = this.varint64();\n    return e !== 0 || n !== 0;\n  }\n  /**\n   * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n   */\n  fixed32() {\n    return this.view.getUint32((this.pos += 4) - 4, !0);\n  }\n  /**\n   * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n   */\n  sfixed32() {\n    return this.view.getInt32((this.pos += 4) - 4, !0);\n  }\n  /**\n   * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n   */\n  fixed64() {\n    return V.uDec(this.sfixed32(), this.sfixed32());\n  }\n  /**\n   * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n   */\n  sfixed64() {\n    return V.dec(this.sfixed32(), this.sfixed32());\n  }\n  /**\n   * Read a `float` field, 32-bit floating point number.\n   */\n  float() {\n    return this.view.getFloat32((this.pos += 4) - 4, !0);\n  }\n  /**\n   * Read a `double` field, a 64-bit floating point number.\n   */\n  double() {\n    return this.view.getFloat64((this.pos += 8) - 8, !0);\n  }\n  /**\n   * Read a `bytes` field, length-delimited arbitrary data.\n   */\n  bytes() {\n    let e = this.uint32(),\n      n = this.pos;\n    return this.pos += e, this.assertBounds(), this.buf.subarray(n, n + e);\n  }\n  /**\n   * Read a `string` field, length-delimited data converted to UTF-8 text.\n   */\n  string() {\n    return this.textDecoder.decode(this.bytes());\n  }\n}\nfunction Uv(a, e, n, t) {\n  let o;\n  return {\n    typeName: e,\n    extendee: n,\n    get field() {\n      if (!o) {\n        const i = typeof t == \"function\" ? t() : t;\n        i.name = e.split(\".\").pop(), i.jsonName = `[${e}]`, o = a.util.newFieldList([i]).list()[0];\n      }\n      return o;\n    },\n    runtime: a\n  };\n}\nfunction Di(a) {\n  const e = a.field.localName,\n    n = /* @__PURE__ */Object.create(null);\n  return n[e] = Gv(a), [n, () => n[e]];\n}\nfunction Gv(a) {\n  const e = a.field;\n  if (e.repeated) return [];\n  if (e.default !== void 0) return e.default;\n  switch (e.kind) {\n    case \"enum\":\n      return e.T.values[0].no;\n    case \"scalar\":\n      return nn(e.T, e.L);\n    case \"message\":\n      const n = e.T,\n        t = new n();\n      return n.fieldWrapper ? n.fieldWrapper.unwrapField(t) : t;\n    case \"map\":\n      throw \"map fields are not allowed to be extensions\";\n  }\n}\nfunction Lv(a, e) {\n  if (!e.repeated && (e.kind == \"enum\" || e.kind == \"scalar\")) {\n    for (let n = a.length - 1; n >= 0; --n) if (a[n].no == e.no) return [a[n]];\n    return [];\n  }\n  return a.filter(n => n.no === e.no);\n}\nlet de = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\"),\n  la = [];\nfor (let a = 0; a < de.length; a++) la[de[a].charCodeAt(0)] = a;\nla[45] = de.indexOf(\"+\");\nla[95] = de.indexOf(\"/\");\nconst at = {\n  /**\n   * Decodes a base64 string to a byte array.\n   *\n   * - ignores white-space, including line breaks and tabs\n   * - allows inner padding (can decode concatenated base64 strings)\n   * - does not require padding\n   * - understands base64url encoding:\n   *   \"-\" instead of \"+\",\n   *   \"_\" instead of \"/\",\n   *   no padding\n   */\n  dec(a) {\n    let e = a.length * 3 / 4;\n    a[a.length - 2] == \"=\" ? e -= 2 : a[a.length - 1] == \"=\" && (e -= 1);\n    let n = new Uint8Array(e),\n      t = 0,\n      o = 0,\n      i,\n      r = 0;\n    for (let c = 0; c < a.length; c++) {\n      if (i = la[a.charCodeAt(c)], i === void 0) switch (a[c]) {\n        case \"=\":\n          o = 0;\n        case `\n`:\n        case \"\\r\":\n        case \"\t\":\n        case \" \":\n          continue;\n        default:\n          throw Error(\"invalid base64 string.\");\n      }\n      switch (o) {\n        case 0:\n          r = i, o = 1;\n          break;\n        case 1:\n          n[t++] = r << 2 | (i & 48) >> 4, r = i, o = 2;\n          break;\n        case 2:\n          n[t++] = (r & 15) << 4 | (i & 60) >> 2, r = i, o = 3;\n          break;\n        case 3:\n          n[t++] = (r & 3) << 6 | i, o = 0;\n          break;\n      }\n    }\n    if (o == 1) throw Error(\"invalid base64 string.\");\n    return n.subarray(0, t);\n  },\n  /**\n   * Encode a byte array to a base64 string.\n   */\n  enc(a) {\n    let e = \"\",\n      n = 0,\n      t,\n      o = 0;\n    for (let i = 0; i < a.length; i++) switch (t = a[i], n) {\n      case 0:\n        e += de[t >> 2], o = (t & 3) << 4, n = 1;\n        break;\n      case 1:\n        e += de[o | t >> 4], o = (t & 15) << 2, n = 2;\n        break;\n      case 2:\n        e += de[o | t >> 6], e += de[t & 63], n = 0;\n        break;\n    }\n    return n && (e += de[o], e += \"=\", n == 1 && (e += \"=\")), e;\n  }\n};\nfunction Bv(a, e, n) {\n  Ui(e, a);\n  const t = e.runtime.bin.makeReadOptions(n),\n    o = Lv(a.getType().runtime.bin.listUnknownFields(a), e.field),\n    [i, r] = Di(e);\n  for (const c of o) e.runtime.bin.readField(i, t.readerFactory(c.data), e.field, c.wireType, t);\n  return r();\n}\nfunction xv(a, e, n, t) {\n  Ui(e, a);\n  const o = e.runtime.bin.makeReadOptions(t),\n    i = e.runtime.bin.makeWriteOptions(t);\n  if (qi(a, e)) {\n    const d = a.getType().runtime.bin.listUnknownFields(a).filter(T => T.no != e.field.no);\n    a.getType().runtime.bin.discardUnknownFields(a);\n    for (const T of d) a.getType().runtime.bin.onUnknownField(a, T.no, T.wireType, T.data);\n  }\n  const r = i.writerFactory();\n  let c = e.field;\n  !c.opt && !c.repeated && (c.kind == \"enum\" || c.kind == \"scalar\") && (c = Object.assign(Object.assign({}, e.field), {\n    opt: !0\n  })), e.runtime.bin.writeField(c, n, r, i);\n  const p = o.readerFactory(r.finish());\n  for (; p.pos < p.len;) {\n    const [d, T] = p.tag(),\n      f = p.skip(T, d);\n    a.getType().runtime.bin.onUnknownField(a, d, T, f);\n  }\n}\nfunction qi(a, e) {\n  const n = a.getType();\n  return e.extendee.typeName === n.typeName && !!n.runtime.bin.listUnknownFields(a).find(t => t.no == e.field.no);\n}\nfunction Ui(a, e) {\n  L(a.extendee.typeName == e.getType().typeName, `extension ${a.typeName} can only be applied to message ${a.extendee.typeName}`);\n}\nfunction Gi(a, e) {\n  const n = a.localName;\n  if (a.repeated) return e[n].length > 0;\n  if (a.oneof) return e[a.oneof.localName].case === n;\n  switch (a.kind) {\n    case \"enum\":\n    case \"scalar\":\n      return a.opt || a.req ? e[n] !== void 0 : a.kind == \"enum\" ? e[n] !== a.T.values[0].no : !Pi(a.T, e[n]);\n    case \"message\":\n      return e[n] !== void 0;\n    case \"map\":\n      return Object.keys(e[n]).length > 0;\n  }\n}\nfunction Ko(a, e) {\n  const n = a.localName,\n    t = !a.opt && !a.req;\n  if (a.repeated) e[n] = [];else if (a.oneof) e[a.oneof.localName] = {\n    case: void 0\n  };else switch (a.kind) {\n    case \"map\":\n      e[n] = {};\n      break;\n    case \"enum\":\n      e[n] = t ? a.T.values[0].no : void 0;\n      break;\n    case \"scalar\":\n      e[n] = t ? nn(a.T, a.L) : void 0;\n      break;\n    case \"message\":\n      e[n] = void 0;\n      break;\n  }\n}\nfunction We(a, e) {\n  if (a === null || typeof a != \"object\" || !Object.getOwnPropertyNames(w.prototype).every(t => t in a && typeof a[t] == \"function\")) return !1;\n  const n = a.getType();\n  return n === null || typeof n != \"function\" || !(\"typeName\" in n) || typeof n.typeName != \"string\" ? !1 : e === void 0 ? !0 : n.typeName == e.typeName;\n}\nfunction Li(a, e) {\n  return We(e) || !a.fieldWrapper ? e : a.fieldWrapper.wrapField(e);\n}\nh.DOUBLE, h.FLOAT, h.INT64, h.UINT64, h.INT32, h.UINT32, h.BOOL, h.STRING, h.BYTES;\nconst Xo = {\n    ignoreUnknownFields: !1\n  },\n  Qo = {\n    emitDefaultValues: !1,\n    enumAsInteger: !1,\n    useProtoFieldName: !1,\n    prettySpaces: 0\n  };\nfunction Fv(a) {\n  return a ? Object.assign(Object.assign({}, Xo), a) : Xo;\n}\nfunction Jv(a) {\n  return a ? Object.assign(Object.assign({}, Qo), a) : Qo;\n}\nconst Jn = Symbol(),\n  Ln = Symbol();\nfunction zv() {\n  return {\n    makeReadOptions: Fv,\n    makeWriteOptions: Jv,\n    readMessage(a, e, n, t) {\n      if (e == null || Array.isArray(e) || typeof e != \"object\") throw new Error(`cannot decode message ${a.typeName} from JSON: ${te(e)}`);\n      t = t ?? new a();\n      const o = /* @__PURE__ */new Map(),\n        i = n.typeRegistry;\n      for (const [r, c] of Object.entries(e)) {\n        const p = a.fields.findJsonName(r);\n        if (p) {\n          if (p.oneof) {\n            if (c === null && p.kind == \"scalar\") continue;\n            const d = o.get(p.oneof);\n            if (d !== void 0) throw new Error(`cannot decode message ${a.typeName} from JSON: multiple keys for oneof \"${p.oneof.name}\" present: \"${d}\", \"${r}\"`);\n            o.set(p.oneof, r);\n          }\n          Zo(t, c, p, n, a);\n        } else {\n          let d = !1;\n          if (i?.findExtension && r.startsWith(\"[\") && r.endsWith(\"]\")) {\n            const T = i.findExtension(r.substring(1, r.length - 1));\n            if (T && T.extendee.typeName == a.typeName) {\n              d = !0;\n              const [f, S] = Di(T);\n              Zo(f, c, T.field, n, T), xv(t, T, S(), n);\n            }\n          }\n          if (!d && !n.ignoreUnknownFields) throw new Error(`cannot decode message ${a.typeName} from JSON: key \"${r}\" is unknown`);\n        }\n      }\n      return t;\n    },\n    writeMessage(a, e) {\n      const n = a.getType(),\n        t = {};\n      let o;\n      try {\n        for (o of n.fields.byNumber()) {\n          if (!Gi(o, a)) {\n            if (o.req) throw \"required field not set\";\n            if (!e.emitDefaultValues || !$v(o)) continue;\n          }\n          const r = o.oneof ? a[o.oneof.localName].value : a[o.localName],\n            c = ei(o, r, e);\n          c !== void 0 && (t[e.useProtoFieldName ? o.name : o.jsonName] = c);\n        }\n        const i = e.typeRegistry;\n        if (i?.findExtensionFor) for (const r of n.runtime.bin.listUnknownFields(a)) {\n          const c = i.findExtensionFor(n.typeName, r.no);\n          if (c && qi(a, c)) {\n            const p = Bv(a, c, e),\n              d = ei(c.field, p, e);\n            d !== void 0 && (t[c.field.jsonName] = d);\n          }\n        }\n      } catch (i) {\n        const r = o ? `cannot encode field ${n.typeName}.${o.name} to JSON` : `cannot encode message ${n.typeName} to JSON`,\n          c = i instanceof Error ? i.message : String(i);\n        throw new Error(r + (c.length > 0 ? `: ${c}` : \"\"));\n      }\n      return t;\n    },\n    readScalar(a, e, n) {\n      return Tn(a, e, n ?? Je.BIGINT, !0);\n    },\n    writeScalar(a, e, n) {\n      if (e !== void 0 && (n || Pi(a, e))) return Bn(a, e);\n    },\n    debug: te\n  };\n}\nfunction te(a) {\n  if (a === null) return \"null\";\n  switch (typeof a) {\n    case \"object\":\n      return Array.isArray(a) ? \"array\" : \"object\";\n    case \"string\":\n      return a.length > 100 ? \"string\" : `\"${a.split('\"').join('\\\\\"')}\"`;\n    default:\n      return String(a);\n  }\n}\nfunction Zo(a, e, n, t, o) {\n  let i = n.localName;\n  if (n.repeated) {\n    if (L(n.kind != \"map\"), e === null) return;\n    if (!Array.isArray(e)) throw new Error(`cannot decode field ${o.typeName}.${n.name} from JSON: ${te(e)}`);\n    const r = a[i];\n    for (const c of e) {\n      if (c === null) throw new Error(`cannot decode field ${o.typeName}.${n.name} from JSON: ${te(c)}`);\n      switch (n.kind) {\n        case \"message\":\n          r.push(n.T.fromJson(c, t));\n          break;\n        case \"enum\":\n          const p = Pa(n.T, c, t.ignoreUnknownFields, !0);\n          p !== Ln && r.push(p);\n          break;\n        case \"scalar\":\n          try {\n            r.push(Tn(n.T, c, n.L, !0));\n          } catch (d) {\n            let T = `cannot decode field ${o.typeName}.${n.name} from JSON: ${te(c)}`;\n            throw d instanceof Error && d.message.length > 0 && (T += `: ${d.message}`), new Error(T);\n          }\n          break;\n      }\n    }\n  } else if (n.kind == \"map\") {\n    if (e === null) return;\n    if (typeof e != \"object\" || Array.isArray(e)) throw new Error(`cannot decode field ${o.typeName}.${n.name} from JSON: ${te(e)}`);\n    const r = a[i];\n    for (const [c, p] of Object.entries(e)) {\n      if (p === null) throw new Error(`cannot decode field ${o.typeName}.${n.name} from JSON: map value null`);\n      let d;\n      try {\n        d = Yv(n.K, c);\n      } catch (T) {\n        let f = `cannot decode map key for field ${o.typeName}.${n.name} from JSON: ${te(e)}`;\n        throw T instanceof Error && T.message.length > 0 && (f += `: ${T.message}`), new Error(f);\n      }\n      switch (n.V.kind) {\n        case \"message\":\n          r[d] = n.V.T.fromJson(p, t);\n          break;\n        case \"enum\":\n          const T = Pa(n.V.T, p, t.ignoreUnknownFields, !0);\n          T !== Ln && (r[d] = T);\n          break;\n        case \"scalar\":\n          try {\n            r[d] = Tn(n.V.T, p, Je.BIGINT, !0);\n          } catch (f) {\n            let S = `cannot decode map value for field ${o.typeName}.${n.name} from JSON: ${te(e)}`;\n            throw f instanceof Error && f.message.length > 0 && (S += `: ${f.message}`), new Error(S);\n          }\n          break;\n      }\n    }\n  } else switch (n.oneof && (a = a[n.oneof.localName] = {\n    case: i\n  }, i = \"value\"), n.kind) {\n    case \"message\":\n      const r = n.T;\n      if (e === null && r.typeName != \"google.protobuf.Value\") return;\n      let c = a[i];\n      We(c) ? c.fromJson(e, t) : (a[i] = c = r.fromJson(e, t), r.fieldWrapper && !n.oneof && (a[i] = r.fieldWrapper.unwrapField(c)));\n      break;\n    case \"enum\":\n      const p = Pa(n.T, e, t.ignoreUnknownFields, !1);\n      switch (p) {\n        case Jn:\n          Ko(n, a);\n          break;\n        case Ln:\n          break;\n        default:\n          a[i] = p;\n          break;\n      }\n      break;\n    case \"scalar\":\n      try {\n        const d = Tn(n.T, e, n.L, !1);\n        switch (d) {\n          case Jn:\n            Ko(n, a);\n            break;\n          default:\n            a[i] = d;\n            break;\n        }\n      } catch (d) {\n        let T = `cannot decode field ${o.typeName}.${n.name} from JSON: ${te(e)}`;\n        throw d instanceof Error && d.message.length > 0 && (T += `: ${d.message}`), new Error(T);\n      }\n      break;\n  }\n}\nfunction Yv(a, e) {\n  if (a === h.BOOL) switch (e) {\n    case \"true\":\n      e = !0;\n      break;\n    case \"false\":\n      e = !1;\n      break;\n  }\n  return Tn(a, e, Je.BIGINT, !0).toString();\n}\nfunction Tn(a, e, n, t) {\n  if (e === null) return t ? nn(a, n) : Jn;\n  switch (a) {\n    case h.DOUBLE:\n    case h.FLOAT:\n      if (e === \"NaN\") return Number.NaN;\n      if (e === \"Infinity\") return Number.POSITIVE_INFINITY;\n      if (e === \"-Infinity\") return Number.NEGATIVE_INFINITY;\n      if (e === \"\" || typeof e == \"string\" && e.trim().length !== e.length || typeof e != \"string\" && typeof e != \"number\") break;\n      const o = Number(e);\n      if (Number.isNaN(o) || !Number.isFinite(o)) break;\n      return a == h.FLOAT && Mi(o), o;\n    case h.INT32:\n    case h.FIXED32:\n    case h.SFIXED32:\n    case h.SINT32:\n    case h.UINT32:\n      let i;\n      if (typeof e == \"number\" ? i = e : typeof e == \"string\" && e.length > 0 && e.trim().length === e.length && (i = Number(e)), i === void 0) break;\n      return a == h.UINT32 || a == h.FIXED32 ? La(i) : Un(i), i;\n    case h.INT64:\n    case h.SFIXED64:\n    case h.SINT64:\n      if (typeof e != \"number\" && typeof e != \"string\") break;\n      const r = V.parse(e);\n      return n ? r.toString() : r;\n    case h.FIXED64:\n    case h.UINT64:\n      if (typeof e != \"number\" && typeof e != \"string\") break;\n      const c = V.uParse(e);\n      return n ? c.toString() : c;\n    case h.BOOL:\n      if (typeof e != \"boolean\") break;\n      return e;\n    case h.STRING:\n      if (typeof e != \"string\") break;\n      try {\n        encodeURIComponent(e);\n      } catch {\n        throw new Error(\"invalid UTF8\");\n      }\n      return e;\n    case h.BYTES:\n      if (e === \"\") return new Uint8Array(0);\n      if (typeof e != \"string\") break;\n      return at.dec(e);\n  }\n  throw new Error();\n}\nfunction Pa(a, e, n, t) {\n  if (e === null) return a.typeName == \"google.protobuf.NullValue\" ? 0 : t ? a.values[0].no : Jn;\n  switch (typeof e) {\n    case \"number\":\n      if (Number.isInteger(e)) return e;\n      break;\n    case \"string\":\n      const o = a.findName(e);\n      if (o !== void 0) return o.no;\n      if (n) return Ln;\n      break;\n  }\n  throw new Error(`cannot decode enum ${a.typeName} from JSON: ${te(e)}`);\n}\nfunction $v(a) {\n  return a.repeated || a.kind == \"map\" ? !0 : !(a.oneof || a.kind == \"message\" || a.opt || a.req);\n}\nfunction ei(a, e, n) {\n  if (a.kind == \"map\") {\n    L(typeof e == \"object\" && e != null);\n    const t = {},\n      o = Object.entries(e);\n    switch (a.V.kind) {\n      case \"scalar\":\n        for (const [r, c] of o) t[r.toString()] = Bn(a.V.T, c);\n        break;\n      case \"message\":\n        for (const [r, c] of o) t[r.toString()] = c.toJson(n);\n        break;\n      case \"enum\":\n        const i = a.V.T;\n        for (const [r, c] of o) t[r.toString()] = Aa(i, c, n.enumAsInteger);\n        break;\n    }\n    return n.emitDefaultValues || o.length > 0 ? t : void 0;\n  }\n  if (a.repeated) {\n    L(Array.isArray(e));\n    const t = [];\n    switch (a.kind) {\n      case \"scalar\":\n        for (let o = 0; o < e.length; o++) t.push(Bn(a.T, e[o]));\n        break;\n      case \"enum\":\n        for (let o = 0; o < e.length; o++) t.push(Aa(a.T, e[o], n.enumAsInteger));\n        break;\n      case \"message\":\n        for (let o = 0; o < e.length; o++) t.push(e[o].toJson(n));\n        break;\n    }\n    return n.emitDefaultValues || t.length > 0 ? t : void 0;\n  }\n  switch (a.kind) {\n    case \"scalar\":\n      return Bn(a.T, e);\n    case \"enum\":\n      return Aa(a.T, e, n.enumAsInteger);\n    case \"message\":\n      return Li(a.T, e).toJson(n);\n  }\n}\nfunction Aa(a, e, n) {\n  var t;\n  if (L(typeof e == \"number\"), a.typeName == \"google.protobuf.NullValue\") return null;\n  if (n) return e;\n  const o = a.findNumber(e);\n  return (t = o?.name) !== null && t !== void 0 ? t : e;\n}\nfunction Bn(a, e) {\n  switch (a) {\n    case h.INT32:\n    case h.SFIXED32:\n    case h.SINT32:\n    case h.FIXED32:\n    case h.UINT32:\n      return L(typeof e == \"number\"), e;\n    case h.FLOAT:\n    case h.DOUBLE:\n      return L(typeof e == \"number\"), Number.isNaN(e) ? \"NaN\" : e === Number.POSITIVE_INFINITY ? \"Infinity\" : e === Number.NEGATIVE_INFINITY ? \"-Infinity\" : e;\n    case h.STRING:\n      return L(typeof e == \"string\"), e;\n    case h.BOOL:\n      return L(typeof e == \"boolean\"), e;\n    case h.UINT64:\n    case h.FIXED64:\n    case h.INT64:\n    case h.SFIXED64:\n    case h.SINT64:\n      return L(typeof e == \"bigint\" || typeof e == \"string\" || typeof e == \"number\"), e.toString();\n    case h.BYTES:\n      return L(e instanceof Uint8Array), at.enc(e);\n  }\n}\nconst en = Symbol(\"@bufbuild/protobuf/unknown-fields\"),\n  ni = {\n    readUnknownFields: !0,\n    readerFactory: a => new Ai(a)\n  },\n  ai = {\n    writeUnknownFields: !0,\n    writerFactory: () => new qv()\n  };\nfunction Vv(a) {\n  return a ? Object.assign(Object.assign({}, ni), a) : ni;\n}\nfunction Wv(a) {\n  return a ? Object.assign(Object.assign({}, ai), a) : ai;\n}\nfunction jv() {\n  return {\n    makeReadOptions: Vv,\n    makeWriteOptions: Wv,\n    listUnknownFields(a) {\n      var e;\n      return (e = a[en]) !== null && e !== void 0 ? e : [];\n    },\n    discardUnknownFields(a) {\n      delete a[en];\n    },\n    writeUnknownFields(a, e) {\n      const t = a[en];\n      if (t) for (const o of t) e.tag(o.no, o.wireType).raw(o.data);\n    },\n    onUnknownField(a, e, n, t) {\n      const o = a;\n      Array.isArray(o[en]) || (o[en] = []), o[en].push({\n        no: e,\n        wireType: n,\n        data: t\n      });\n    },\n    readMessage(a, e, n, t, o) {\n      const i = a.getType(),\n        r = o ? e.len : e.pos + n;\n      let c, p;\n      for (; e.pos < r && ([c, p] = e.tag(), !(o === !0 && p == B.EndGroup));) {\n        const d = i.fields.find(c);\n        if (!d) {\n          const T = e.skip(p, c);\n          t.readUnknownFields && this.onUnknownField(a, c, p, T);\n          continue;\n        }\n        ti(a, e, d, p, t);\n      }\n      if (o && (\n      // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n      p != B.EndGroup || c !== n)) throw new Error(\"invalid end group tag\");\n    },\n    readField: ti,\n    writeMessage(a, e, n) {\n      const t = a.getType();\n      for (const o of t.fields.byNumber()) {\n        if (!Gi(o, a)) {\n          if (o.req) throw new Error(`cannot encode field ${t.typeName}.${o.name} to binary: required field not set`);\n          continue;\n        }\n        const i = o.oneof ? a[o.oneof.localName].value : a[o.localName];\n        si(o, i, e, n);\n      }\n      return n.writeUnknownFields && this.writeUnknownFields(a, e), e;\n    },\n    writeField(a, e, n, t) {\n      e !== void 0 && si(a, e, n, t);\n    }\n  };\n}\nfunction ti(a, e, n, t, o) {\n  let {\n    repeated: i,\n    localName: r\n  } = n;\n  switch (n.oneof && (a = a[n.oneof.localName], a.case != r && delete a.value, a.case = r, r = \"value\"), n.kind) {\n    case \"scalar\":\n    case \"enum\":\n      const c = n.kind == \"enum\" ? h.INT32 : n.T;\n      let p = zn;\n      if (n.kind == \"scalar\" && n.L > 0 && (p = Kv), i) {\n        let S = a[r];\n        if (t == B.LengthDelimited && c != h.STRING && c != h.BYTES) {\n          let I = e.uint32() + e.pos;\n          for (; e.pos < I;) S.push(p(e, c));\n        } else S.push(p(e, c));\n      } else a[r] = p(e, c);\n      break;\n    case \"message\":\n      const d = n.T;\n      i ? a[r].push(xn(e, new d(), o, n)) : We(a[r]) ? xn(e, a[r], o, n) : (a[r] = xn(e, new d(), o, n), d.fieldWrapper && !n.oneof && !n.repeated && (a[r] = d.fieldWrapper.unwrapField(a[r])));\n      break;\n    case \"map\":\n      let [T, f] = Hv(n, e, o);\n      a[r][T] = f;\n      break;\n  }\n}\nfunction xn(a, e, n, t) {\n  const o = e.getType().runtime.bin,\n    i = t?.delimited;\n  return o.readMessage(e, a, i ? t.no : a.uint32(),\n  // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n  n, i), e;\n}\nfunction Hv(a, e, n) {\n  const t = e.uint32(),\n    o = e.pos + t;\n  let i, r;\n  for (; e.pos < o;) {\n    const [c] = e.tag();\n    switch (c) {\n      case 1:\n        i = zn(e, a.K);\n        break;\n      case 2:\n        switch (a.V.kind) {\n          case \"scalar\":\n            r = zn(e, a.V.T);\n            break;\n          case \"enum\":\n            r = e.int32();\n            break;\n          case \"message\":\n            r = xn(e, new a.V.T(), n, void 0);\n            break;\n        }\n        break;\n    }\n  }\n  if (i === void 0 && (i = nn(a.K, Je.BIGINT)), typeof i != \"string\" && typeof i != \"number\" && (i = i.toString()), r === void 0) switch (a.V.kind) {\n    case \"scalar\":\n      r = nn(a.V.T, Je.BIGINT);\n      break;\n    case \"enum\":\n      r = a.V.T.values[0].no;\n      break;\n    case \"message\":\n      r = new a.V.T();\n      break;\n  }\n  return [i, r];\n}\nfunction Kv(a, e) {\n  const n = zn(a, e);\n  return typeof n == \"bigint\" ? n.toString() : n;\n}\nfunction zn(a, e) {\n  switch (e) {\n    case h.STRING:\n      return a.string();\n    case h.BOOL:\n      return a.bool();\n    case h.DOUBLE:\n      return a.double();\n    case h.FLOAT:\n      return a.float();\n    case h.INT32:\n      return a.int32();\n    case h.INT64:\n      return a.int64();\n    case h.UINT64:\n      return a.uint64();\n    case h.FIXED64:\n      return a.fixed64();\n    case h.BYTES:\n      return a.bytes();\n    case h.FIXED32:\n      return a.fixed32();\n    case h.SFIXED32:\n      return a.sfixed32();\n    case h.SFIXED64:\n      return a.sfixed64();\n    case h.SINT64:\n      return a.sint64();\n    case h.UINT32:\n      return a.uint32();\n    case h.SINT32:\n      return a.sint32();\n  }\n}\nfunction si(a, e, n, t) {\n  L(e !== void 0);\n  const o = a.repeated;\n  switch (a.kind) {\n    case \"scalar\":\n    case \"enum\":\n      let i = a.kind == \"enum\" ? h.INT32 : a.T;\n      if (o) {\n        if (L(Array.isArray(e)), a.packed) Qv(n, i, a.no, e);else for (const r of e) kn(n, i, a.no, r);\n      } else kn(n, i, a.no, e);\n      break;\n    case \"message\":\n      if (o) {\n        L(Array.isArray(e));\n        for (const r of e) oi(n, t, a, r);\n      } else oi(n, t, a, e);\n      break;\n    case \"map\":\n      L(typeof e == \"object\" && e != null);\n      for (const [r, c] of Object.entries(e)) Xv(n, t, a, r, c);\n      break;\n  }\n}\nfunction Xv(a, e, n, t, o) {\n  a.tag(n.no, B.LengthDelimited), a.fork();\n  let i = t;\n  switch (n.K) {\n    case h.INT32:\n    case h.FIXED32:\n    case h.UINT32:\n    case h.SFIXED32:\n    case h.SINT32:\n      i = Number.parseInt(t);\n      break;\n    case h.BOOL:\n      L(t == \"true\" || t == \"false\"), i = t == \"true\";\n      break;\n  }\n  switch (kn(a, n.K, 1, i), n.V.kind) {\n    case \"scalar\":\n      kn(a, n.V.T, 2, o);\n      break;\n    case \"enum\":\n      kn(a, h.INT32, 2, o);\n      break;\n    case \"message\":\n      L(o !== void 0), a.tag(2, B.LengthDelimited).bytes(o.toBinary(e));\n      break;\n  }\n  a.join();\n}\nfunction oi(a, e, n, t) {\n  const o = Li(n.T, t);\n  n.delimited ? a.tag(n.no, B.StartGroup).raw(o.toBinary(e)).tag(n.no, B.EndGroup) : a.tag(n.no, B.LengthDelimited).bytes(o.toBinary(e));\n}\nfunction kn(a, e, n, t) {\n  L(t !== void 0);\n  let [o, i] = Bi(e);\n  a.tag(n, o)[i](t);\n}\nfunction Qv(a, e, n, t) {\n  if (!t.length) return;\n  a.tag(n, B.LengthDelimited).fork();\n  let [, o] = Bi(e);\n  for (let i = 0; i < t.length; i++) a[o](t[i]);\n  a.join();\n}\nfunction Bi(a) {\n  let e = B.Varint;\n  switch (a) {\n    case h.BYTES:\n    case h.STRING:\n      e = B.LengthDelimited;\n      break;\n    case h.DOUBLE:\n    case h.FIXED64:\n    case h.SFIXED64:\n      e = B.Bit64;\n      break;\n    case h.FIXED32:\n    case h.SFIXED32:\n    case h.FLOAT:\n      e = B.Bit32;\n      break;\n  }\n  const n = h[a].toLowerCase();\n  return [e, n];\n}\nfunction Zv() {\n  return {\n    setEnumType: wi,\n    initPartial(a, e) {\n      if (a === void 0) return;\n      const n = e.getType();\n      for (const t of n.fields.byMember()) {\n        const o = t.localName,\n          i = e,\n          r = a;\n        if (r[o] != null) switch (t.kind) {\n          case \"oneof\":\n            const c = r[o].case;\n            if (c === void 0) continue;\n            const p = t.findField(c);\n            let d = r[o].value;\n            p && p.kind == \"message\" && !We(d, p.T) ? d = new p.T(d) : p && p.kind === \"scalar\" && p.T === h.BYTES && (d = pn(d)), i[o] = {\n              case: c,\n              value: d\n            };\n            break;\n          case \"scalar\":\n          case \"enum\":\n            let T = r[o];\n            t.T === h.BYTES && (T = t.repeated ? T.map(pn) : pn(T)), i[o] = T;\n            break;\n          case \"map\":\n            switch (t.V.kind) {\n              case \"scalar\":\n              case \"enum\":\n                if (t.V.T === h.BYTES) for (const [R, I] of Object.entries(r[o])) i[o][R] = pn(I);else Object.assign(i[o], r[o]);\n                break;\n              case \"message\":\n                const S = t.V.T;\n                for (const R of Object.keys(r[o])) {\n                  let I = r[o][R];\n                  S.fieldWrapper || (I = new S(I)), i[o][R] = I;\n                }\n                break;\n            }\n            break;\n          case \"message\":\n            const f = t.T;\n            if (t.repeated) i[o] = r[o].map(S => We(S, f) ? S : new f(S));else {\n              const S = r[o];\n              f.fieldWrapper ? /* We can't use BytesValue.typeName as that will create a circular import */f.typeName === \"google.protobuf.BytesValue\" ? i[o] = pn(S) : i[o] = S : i[o] = We(S, f) ? S : new f(S);\n            }\n            break;\n        }\n      }\n    },\n    // TODO use isFieldSet() here to support future field presence\n    equals(a, e, n) {\n      return e === n ? !0 : !e || !n ? !1 : a.fields.byMember().every(t => {\n        const o = e[t.localName],\n          i = n[t.localName];\n        if (t.repeated) {\n          if (o.length !== i.length) return !1;\n          switch (t.kind) {\n            case \"message\":\n              return o.every((r, c) => t.T.equals(r, i[c]));\n            case \"scalar\":\n              return o.every((r, c) => Ge(t.T, r, i[c]));\n            case \"enum\":\n              return o.every((r, c) => Ge(h.INT32, r, i[c]));\n          }\n          throw new Error(`repeated cannot contain ${t.kind}`);\n        }\n        switch (t.kind) {\n          case \"message\":\n            return t.T.equals(o, i);\n          case \"enum\":\n            return Ge(h.INT32, o, i);\n          case \"scalar\":\n            return Ge(t.T, o, i);\n          case \"oneof\":\n            if (o.case !== i.case) return !1;\n            const r = t.findField(o.case);\n            if (r === void 0) return !0;\n            switch (r.kind) {\n              case \"message\":\n                return r.T.equals(o.value, i.value);\n              case \"enum\":\n                return Ge(h.INT32, o.value, i.value);\n              case \"scalar\":\n                return Ge(r.T, o.value, i.value);\n            }\n            throw new Error(`oneof cannot contain ${r.kind}`);\n          case \"map\":\n            const c = Object.keys(o).concat(Object.keys(i));\n            switch (t.V.kind) {\n              case \"message\":\n                const p = t.V.T;\n                return c.every(T => p.equals(o[T], i[T]));\n              case \"enum\":\n                return c.every(T => Ge(h.INT32, o[T], i[T]));\n              case \"scalar\":\n                const d = t.V.T;\n                return c.every(T => Ge(d, o[T], i[T]));\n            }\n            break;\n        }\n      });\n    },\n    // TODO use isFieldSet() here to support future field presence\n    clone(a) {\n      const e = a.getType(),\n        n = new e(),\n        t = n;\n      for (const o of e.fields.byMember()) {\n        const i = a[o.localName];\n        let r;\n        if (o.repeated) r = i.map(qn);else if (o.kind == \"map\") {\n          r = t[o.localName];\n          for (const [c, p] of Object.entries(i)) r[c] = qn(p);\n        } else o.kind == \"oneof\" ? r = o.findField(i.case) ? {\n          case: i.case,\n          value: qn(i.value)\n        } : {\n          case: void 0\n        } : r = qn(i);\n        t[o.localName] = r;\n      }\n      for (const o of e.runtime.bin.listUnknownFields(a)) e.runtime.bin.onUnknownField(t, o.no, o.wireType, o.data);\n      return n;\n    }\n  };\n}\nfunction qn(a) {\n  if (a === void 0) return a;\n  if (We(a)) return a.clone();\n  if (a instanceof Uint8Array) {\n    const e = new Uint8Array(a.byteLength);\n    return e.set(a), e;\n  }\n  return a;\n}\nfunction pn(a) {\n  return a instanceof Uint8Array ? a : new Uint8Array(a);\n}\nfunction xi(a, e, n) {\n  return {\n    syntax: a,\n    json: zv(),\n    bin: jv(),\n    util: Object.assign(Object.assign({}, Zv()), {\n      newFieldList: e,\n      initFields: n\n    }),\n    makeMessageType(t, o, i) {\n      return Ov(this, t, o, i);\n    },\n    makeEnum: Ev,\n    makeEnumType: Ei,\n    getEnumType: wv,\n    makeExtension(t, o, i) {\n      return Uv(this, t, o, i);\n    }\n  };\n}\nclass Fi {\n  constructor(e, n) {\n    this._fields = e, this._normalizer = n;\n  }\n  findJsonName(e) {\n    if (!this.jsonNames) {\n      const n = {};\n      for (const t of this.list()) n[t.jsonName] = n[t.name] = t;\n      this.jsonNames = n;\n    }\n    return this.jsonNames[e];\n  }\n  find(e) {\n    if (!this.numbers) {\n      const n = {};\n      for (const t of this.list()) n[t.no] = t;\n      this.numbers = n;\n    }\n    return this.numbers[e];\n  }\n  list() {\n    return this.all || (this.all = this._normalizer(this._fields)), this.all;\n  }\n  byNumber() {\n    return this.numbersAsc || (this.numbersAsc = this.list().concat().sort((e, n) => e.no - n.no)), this.numbersAsc;\n  }\n  byMember() {\n    if (!this.members) {\n      this.members = [];\n      const e = this.members;\n      let n;\n      for (const t of this.list()) t.oneof ? t.oneof !== n && (n = t.oneof, e.push(n)) : e.push(t);\n    }\n    return this.members;\n  }\n}\nfunction Ji(a, e) {\n  const n = zi(a);\n  return e ? n : oh(sh(n));\n}\nfunction eh(a) {\n  return Ji(a, !1);\n}\nconst nh = zi;\nfunction zi(a) {\n  let e = !1;\n  const n = [];\n  for (let t = 0; t < a.length; t++) {\n    let o = a.charAt(t);\n    switch (o) {\n      case \"_\":\n        e = !0;\n        break;\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        n.push(o), e = !1;\n        break;\n      default:\n        e && (e = !1, o = o.toUpperCase()), n.push(o);\n        break;\n    }\n  }\n  return n.join(\"\");\n}\nconst ah = /* @__PURE__ */new Set([\n  // names reserved by JavaScript\n  \"constructor\", \"toString\", \"toJSON\", \"valueOf\"]),\n  th = /* @__PURE__ */new Set([\n  // names reserved by the runtime\n  \"getType\", \"clone\", \"equals\", \"fromBinary\", \"fromJson\", \"fromJsonString\", \"toBinary\", \"toJson\", \"toJsonString\",\n  // names reserved by the runtime for the future\n  \"toObject\"]),\n  Yi = a => `${a}$`,\n  sh = a => th.has(a) ? Yi(a) : a,\n  oh = a => ah.has(a) ? Yi(a) : a;\nclass ih {\n  constructor(e) {\n    this.kind = \"oneof\", this.repeated = !1, this.packed = !1, this.opt = !1, this.req = !1, this.default = void 0, this.fields = [], this.name = e, this.localName = eh(e);\n  }\n  addField(e) {\n    L(e.oneof === this, `field ${e.name} not one of ${this.name}`), this.fields.push(e);\n  }\n  findField(e) {\n    if (!this._lookup) {\n      this._lookup = /* @__PURE__ */Object.create(null);\n      for (let n = 0; n < this.fields.length; n++) this._lookup[this.fields[n].localName] = this.fields[n];\n    }\n    return this._lookup[e];\n  }\n}\nfunction $i(a, e) {\n  var n, t, o, i, r, c;\n  const p = [];\n  let d;\n  for (const T of typeof a == \"function\" ? a() : a) {\n    const f = T;\n    if (f.localName = Ji(T.name, T.oneof !== void 0), f.jsonName = (n = T.jsonName) !== null && n !== void 0 ? n : nh(T.name), f.repeated = (t = T.repeated) !== null && t !== void 0 ? t : !1, T.kind == \"scalar\" && (f.L = (o = T.L) !== null && o !== void 0 ? o : Je.BIGINT), f.delimited = (i = T.delimited) !== null && i !== void 0 ? i : !1, f.req = (r = T.req) !== null && r !== void 0 ? r : !1, f.opt = (c = T.opt) !== null && c !== void 0 ? c : !1, T.packed === void 0 && (e ? f.packed = T.kind == \"enum\" || T.kind == \"scalar\" && T.T != h.BYTES && T.T != h.STRING : f.packed = !1), T.oneof !== void 0) {\n      const S = typeof T.oneof == \"string\" ? T.oneof : T.oneof.name;\n      (!d || d.name != S) && (d = new ih(S)), f.oneof = d, d.addField(f);\n    }\n    p.push(f);\n  }\n  return p;\n}\nconst s = xi(\"proto3\", a => new Fi(a, e => $i(e, !0)),\n  // TODO merge with proto2 and initExtensionField, also see initPartial, equals, clone\n  a => {\n    for (const e of a.getType().fields.byMember()) {\n      if (e.opt) continue;\n      const n = e.localName,\n        t = a;\n      if (e.repeated) {\n        t[n] = [];\n        continue;\n      }\n      switch (e.kind) {\n        case \"oneof\":\n          t[n] = {\n            case: void 0\n          };\n          break;\n        case \"enum\":\n          t[n] = 0;\n          break;\n        case \"map\":\n          t[n] = {};\n          break;\n        case \"scalar\":\n          t[n] = nn(e.T, e.L);\n          break;\n      }\n    }\n  }),\n  u = xi(\"proto2\", a => new Fi(a, e => $i(e, !1)),\n  // TODO merge with proto3 and initExtensionField, also see initPartial, equals, clone\n  a => {\n    for (const e of a.getType().fields.byMember()) {\n      const n = e.localName,\n        t = a;\n      if (e.repeated) {\n        t[n] = [];\n        continue;\n      }\n      switch (e.kind) {\n        case \"oneof\":\n          t[n] = {\n            case: void 0\n          };\n          break;\n        case \"map\":\n          t[n] = {};\n          break;\n      }\n    }\n  });\nvar m;\n(function (a) {\n  a[a.Unary = 0] = \"Unary\", a[a.ServerStreaming = 1] = \"ServerStreaming\", a[a.ClientStreaming = 2] = \"ClientStreaming\", a[a.BiDiStreaming = 3] = \"BiDiStreaming\";\n})(m || (m = {}));\nvar ii;\n(function (a) {\n  a[a.NoSideEffects = 1] = \"NoSideEffects\", a[a.Idempotent = 2] = \"Idempotent\";\n})(ii || (ii = {}));\nvar ne;\n(function (a) {\n  a[a.EDITION_UNKNOWN = 0] = \"EDITION_UNKNOWN\", a[a.EDITION_LEGACY = 900] = \"EDITION_LEGACY\", a[a.EDITION_PROTO2 = 998] = \"EDITION_PROTO2\", a[a.EDITION_PROTO3 = 999] = \"EDITION_PROTO3\", a[a.EDITION_2023 = 1e3] = \"EDITION_2023\", a[a.EDITION_2024 = 1001] = \"EDITION_2024\", a[a.EDITION_1_TEST_ONLY = 1] = \"EDITION_1_TEST_ONLY\", a[a.EDITION_2_TEST_ONLY = 2] = \"EDITION_2_TEST_ONLY\", a[a.EDITION_99997_TEST_ONLY = 99997] = \"EDITION_99997_TEST_ONLY\", a[a.EDITION_99998_TEST_ONLY = 99998] = \"EDITION_99998_TEST_ONLY\", a[a.EDITION_99999_TEST_ONLY = 99999] = \"EDITION_99999_TEST_ONLY\", a[a.EDITION_MAX = 2147483647] = \"EDITION_MAX\";\n})(ne || (ne = {}));\nu.util.setEnumType(ne, \"google.protobuf.Edition\", [{\n  no: 0,\n  name: \"EDITION_UNKNOWN\"\n}, {\n  no: 900,\n  name: \"EDITION_LEGACY\"\n}, {\n  no: 998,\n  name: \"EDITION_PROTO2\"\n}, {\n  no: 999,\n  name: \"EDITION_PROTO3\"\n}, {\n  no: 1e3,\n  name: \"EDITION_2023\"\n}, {\n  no: 1001,\n  name: \"EDITION_2024\"\n}, {\n  no: 1,\n  name: \"EDITION_1_TEST_ONLY\"\n}, {\n  no: 2,\n  name: \"EDITION_2_TEST_ONLY\"\n}, {\n  no: 99997,\n  name: \"EDITION_99997_TEST_ONLY\"\n}, {\n  no: 99998,\n  name: \"EDITION_99998_TEST_ONLY\"\n}, {\n  no: 99999,\n  name: \"EDITION_99999_TEST_ONLY\"\n}, {\n  no: 2147483647,\n  name: \"EDITION_MAX\"\n}]);\nclass Be extends w {\n  constructor(e) {\n    super(), this.file = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Be().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Be().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Be().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Be, e, n);\n  }\n}\nBe.runtime = u;\nBe.typeName = \"google.protobuf.FileDescriptorSet\";\nBe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"file\",\n  kind: \"message\",\n  T: se,\n  repeated: !0\n}]);\nclass se extends w {\n  constructor(e) {\n    super(), this.dependency = [], this.publicDependency = [], this.weakDependency = [], this.messageType = [], this.enumType = [], this.service = [], this.extension = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new se().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new se().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new se().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(se, e, n);\n  }\n}\nse.runtime = u;\nse.typeName = \"google.protobuf.FileDescriptorProto\";\nse.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 2,\n  name: \"package\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 3,\n  name: \"dependency\",\n  kind: \"scalar\",\n  T: 9,\n  repeated: !0\n}, {\n  no: 10,\n  name: \"public_dependency\",\n  kind: \"scalar\",\n  T: 5,\n  repeated: !0\n}, {\n  no: 11,\n  name: \"weak_dependency\",\n  kind: \"scalar\",\n  T: 5,\n  repeated: !0\n}, {\n  no: 4,\n  name: \"message_type\",\n  kind: \"message\",\n  T: oe,\n  repeated: !0\n}, {\n  no: 5,\n  name: \"enum_type\",\n  kind: \"message\",\n  T: ie,\n  repeated: !0\n}, {\n  no: 6,\n  name: \"service\",\n  kind: \"message\",\n  T: he,\n  repeated: !0\n}, {\n  no: 7,\n  name: \"extension\",\n  kind: \"message\",\n  T: ee,\n  repeated: !0\n}, {\n  no: 8,\n  name: \"options\",\n  kind: \"message\",\n  T: Re,\n  opt: !0\n}, {\n  no: 9,\n  name: \"source_code_info\",\n  kind: \"message\",\n  T: Ne,\n  opt: !0\n}, {\n  no: 12,\n  name: \"syntax\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 14,\n  name: \"edition\",\n  kind: \"enum\",\n  T: u.getEnumType(ne),\n  opt: !0\n}]);\nclass oe extends w {\n  constructor(e) {\n    super(), this.field = [], this.extension = [], this.nestedType = [], this.enumType = [], this.extensionRange = [], this.oneofDecl = [], this.reservedRange = [], this.reservedName = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new oe().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new oe().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new oe().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(oe, e, n);\n  }\n}\noe.runtime = u;\noe.typeName = \"google.protobuf.DescriptorProto\";\noe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 2,\n  name: \"field\",\n  kind: \"message\",\n  T: ee,\n  repeated: !0\n}, {\n  no: 6,\n  name: \"extension\",\n  kind: \"message\",\n  T: ee,\n  repeated: !0\n}, {\n  no: 3,\n  name: \"nested_type\",\n  kind: \"message\",\n  T: oe,\n  repeated: !0\n}, {\n  no: 4,\n  name: \"enum_type\",\n  kind: \"message\",\n  T: ie,\n  repeated: !0\n}, {\n  no: 5,\n  name: \"extension_range\",\n  kind: \"message\",\n  T: pe,\n  repeated: !0\n}, {\n  no: 8,\n  name: \"oneof_decl\",\n  kind: \"message\",\n  T: ke,\n  repeated: !0\n}, {\n  no: 7,\n  name: \"options\",\n  kind: \"message\",\n  T: _e,\n  opt: !0\n}, {\n  no: 9,\n  name: \"reserved_range\",\n  kind: \"message\",\n  T: ue,\n  repeated: !0\n}, {\n  no: 10,\n  name: \"reserved_name\",\n  kind: \"scalar\",\n  T: 9,\n  repeated: !0\n}]);\nclass pe extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new pe().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new pe().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new pe().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(pe, e, n);\n  }\n}\npe.runtime = u;\npe.typeName = \"google.protobuf.DescriptorProto.ExtensionRange\";\npe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"start\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 2,\n  name: \"end\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 3,\n  name: \"options\",\n  kind: \"message\",\n  T: ge,\n  opt: !0\n}]);\nclass ue extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new ue().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new ue().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new ue().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(ue, e, n);\n  }\n}\nue.runtime = u;\nue.typeName = \"google.protobuf.DescriptorProto.ReservedRange\";\nue.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"start\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 2,\n  name: \"end\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}]);\nclass ge extends w {\n  constructor(e) {\n    super(), this.uninterpretedOption = [], this.declaration = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new ge().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new ge().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new ge().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(ge, e, n);\n  }\n}\nge.runtime = u;\nge.typeName = \"google.protobuf.ExtensionRangeOptions\";\nge.fields = u.util.newFieldList(() => [{\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}, {\n  no: 2,\n  name: \"declaration\",\n  kind: \"message\",\n  T: Te,\n  repeated: !0\n}, {\n  no: 50,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 3,\n  name: \"verification\",\n  kind: \"enum\",\n  T: u.getEnumType(yn),\n  opt: !0,\n  default: yn.UNVERIFIED\n}]);\nvar yn;\n(function (a) {\n  a[a.DECLARATION = 0] = \"DECLARATION\", a[a.UNVERIFIED = 1] = \"UNVERIFIED\";\n})(yn || (yn = {}));\nu.util.setEnumType(yn, \"google.protobuf.ExtensionRangeOptions.VerificationState\", [{\n  no: 0,\n  name: \"DECLARATION\"\n}, {\n  no: 1,\n  name: \"UNVERIFIED\"\n}]);\nclass Te extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Te().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Te().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Te().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Te, e, n);\n  }\n}\nTe.runtime = u;\nTe.typeName = \"google.protobuf.ExtensionRangeOptions.Declaration\";\nTe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"number\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 2,\n  name: \"full_name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 3,\n  name: \"type\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 5,\n  name: \"reserved\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}, {\n  no: 6,\n  name: \"repeated\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}]);\nclass ee extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new ee().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new ee().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new ee().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(ee, e, n);\n  }\n}\nee.runtime = u;\nee.typeName = \"google.protobuf.FieldDescriptorProto\";\nee.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 3,\n  name: \"number\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 4,\n  name: \"label\",\n  kind: \"enum\",\n  T: u.getEnumType($n),\n  opt: !0\n}, {\n  no: 5,\n  name: \"type\",\n  kind: \"enum\",\n  T: u.getEnumType(Yn),\n  opt: !0\n}, {\n  no: 6,\n  name: \"type_name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 2,\n  name: \"extendee\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 7,\n  name: \"default_value\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 9,\n  name: \"oneof_index\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 10,\n  name: \"json_name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 8,\n  name: \"options\",\n  kind: \"message\",\n  T: Se,\n  opt: !0\n}, {\n  no: 17,\n  name: \"proto3_optional\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}]);\nvar Yn;\n(function (a) {\n  a[a.DOUBLE = 1] = \"DOUBLE\", a[a.FLOAT = 2] = \"FLOAT\", a[a.INT64 = 3] = \"INT64\", a[a.UINT64 = 4] = \"UINT64\", a[a.INT32 = 5] = \"INT32\", a[a.FIXED64 = 6] = \"FIXED64\", a[a.FIXED32 = 7] = \"FIXED32\", a[a.BOOL = 8] = \"BOOL\", a[a.STRING = 9] = \"STRING\", a[a.GROUP = 10] = \"GROUP\", a[a.MESSAGE = 11] = \"MESSAGE\", a[a.BYTES = 12] = \"BYTES\", a[a.UINT32 = 13] = \"UINT32\", a[a.ENUM = 14] = \"ENUM\", a[a.SFIXED32 = 15] = \"SFIXED32\", a[a.SFIXED64 = 16] = \"SFIXED64\", a[a.SINT32 = 17] = \"SINT32\", a[a.SINT64 = 18] = \"SINT64\";\n})(Yn || (Yn = {}));\nu.util.setEnumType(Yn, \"google.protobuf.FieldDescriptorProto.Type\", [{\n  no: 1,\n  name: \"TYPE_DOUBLE\"\n}, {\n  no: 2,\n  name: \"TYPE_FLOAT\"\n}, {\n  no: 3,\n  name: \"TYPE_INT64\"\n}, {\n  no: 4,\n  name: \"TYPE_UINT64\"\n}, {\n  no: 5,\n  name: \"TYPE_INT32\"\n}, {\n  no: 6,\n  name: \"TYPE_FIXED64\"\n}, {\n  no: 7,\n  name: \"TYPE_FIXED32\"\n}, {\n  no: 8,\n  name: \"TYPE_BOOL\"\n}, {\n  no: 9,\n  name: \"TYPE_STRING\"\n}, {\n  no: 10,\n  name: \"TYPE_GROUP\"\n}, {\n  no: 11,\n  name: \"TYPE_MESSAGE\"\n}, {\n  no: 12,\n  name: \"TYPE_BYTES\"\n}, {\n  no: 13,\n  name: \"TYPE_UINT32\"\n}, {\n  no: 14,\n  name: \"TYPE_ENUM\"\n}, {\n  no: 15,\n  name: \"TYPE_SFIXED32\"\n}, {\n  no: 16,\n  name: \"TYPE_SFIXED64\"\n}, {\n  no: 17,\n  name: \"TYPE_SINT32\"\n}, {\n  no: 18,\n  name: \"TYPE_SINT64\"\n}]);\nvar $n;\n(function (a) {\n  a[a.OPTIONAL = 1] = \"OPTIONAL\", a[a.REPEATED = 3] = \"REPEATED\", a[a.REQUIRED = 2] = \"REQUIRED\";\n})($n || ($n = {}));\nu.util.setEnumType($n, \"google.protobuf.FieldDescriptorProto.Label\", [{\n  no: 1,\n  name: \"LABEL_OPTIONAL\"\n}, {\n  no: 3,\n  name: \"LABEL_REPEATED\"\n}, {\n  no: 2,\n  name: \"LABEL_REQUIRED\"\n}]);\nclass ke extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new ke().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new ke().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new ke().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(ke, e, n);\n  }\n}\nke.runtime = u;\nke.typeName = \"google.protobuf.OneofDescriptorProto\";\nke.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 2,\n  name: \"options\",\n  kind: \"message\",\n  T: Me,\n  opt: !0\n}]);\nclass ie extends w {\n  constructor(e) {\n    super(), this.value = [], this.reservedRange = [], this.reservedName = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new ie().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new ie().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new ie().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(ie, e, n);\n  }\n}\nie.runtime = u;\nie.typeName = \"google.protobuf.EnumDescriptorProto\";\nie.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 2,\n  name: \"value\",\n  kind: \"message\",\n  T: ve,\n  repeated: !0\n}, {\n  no: 3,\n  name: \"options\",\n  kind: \"message\",\n  T: be,\n  opt: !0\n}, {\n  no: 4,\n  name: \"reserved_range\",\n  kind: \"message\",\n  T: ye,\n  repeated: !0\n}, {\n  no: 5,\n  name: \"reserved_name\",\n  kind: \"scalar\",\n  T: 9,\n  repeated: !0\n}]);\nclass ye extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new ye().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new ye().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new ye().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(ye, e, n);\n  }\n}\nye.runtime = u;\nye.typeName = \"google.protobuf.EnumDescriptorProto.EnumReservedRange\";\nye.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"start\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 2,\n  name: \"end\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}]);\nclass ve extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new ve().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new ve().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new ve().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(ve, e, n);\n  }\n}\nve.runtime = u;\nve.typeName = \"google.protobuf.EnumValueDescriptorProto\";\nve.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 2,\n  name: \"number\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 3,\n  name: \"options\",\n  kind: \"message\",\n  T: we,\n  opt: !0\n}]);\nclass he extends w {\n  constructor(e) {\n    super(), this.method = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new he().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new he().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new he().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(he, e, n);\n  }\n}\nhe.runtime = u;\nhe.typeName = \"google.protobuf.ServiceDescriptorProto\";\nhe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 2,\n  name: \"method\",\n  kind: \"message\",\n  T: fe,\n  repeated: !0\n}, {\n  no: 3,\n  name: \"options\",\n  kind: \"message\",\n  T: Ee,\n  opt: !0\n}]);\nclass fe extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new fe().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new fe().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new fe().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(fe, e, n);\n  }\n}\nfe.runtime = u;\nfe.typeName = \"google.protobuf.MethodDescriptorProto\";\nfe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 2,\n  name: \"input_type\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 3,\n  name: \"output_type\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 4,\n  name: \"options\",\n  kind: \"message\",\n  T: me,\n  opt: !0\n}, {\n  no: 5,\n  name: \"client_streaming\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 6,\n  name: \"server_streaming\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}]);\nclass Re extends w {\n  constructor(e) {\n    super(), this.uninterpretedOption = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Re().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Re().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Re().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Re, e, n);\n  }\n}\nRe.runtime = u;\nRe.typeName = \"google.protobuf.FileOptions\";\nRe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"java_package\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 8,\n  name: \"java_outer_classname\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 10,\n  name: \"java_multiple_files\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 20,\n  name: \"java_generate_equals_and_hash\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}, {\n  no: 27,\n  name: \"java_string_check_utf8\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 9,\n  name: \"optimize_for\",\n  kind: \"enum\",\n  T: u.getEnumType(vn),\n  opt: !0,\n  default: vn.SPEED\n}, {\n  no: 11,\n  name: \"go_package\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 16,\n  name: \"cc_generic_services\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 17,\n  name: \"java_generic_services\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 18,\n  name: \"py_generic_services\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 23,\n  name: \"deprecated\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 31,\n  name: \"cc_enable_arenas\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !0\n}, {\n  no: 36,\n  name: \"objc_class_prefix\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 37,\n  name: \"csharp_namespace\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 39,\n  name: \"swift_prefix\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 40,\n  name: \"php_class_prefix\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 41,\n  name: \"php_namespace\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 44,\n  name: \"php_metadata_namespace\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 45,\n  name: \"ruby_package\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 50,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}]);\nvar vn;\n(function (a) {\n  a[a.SPEED = 1] = \"SPEED\", a[a.CODE_SIZE = 2] = \"CODE_SIZE\", a[a.LITE_RUNTIME = 3] = \"LITE_RUNTIME\";\n})(vn || (vn = {}));\nu.util.setEnumType(vn, \"google.protobuf.FileOptions.OptimizeMode\", [{\n  no: 1,\n  name: \"SPEED\"\n}, {\n  no: 2,\n  name: \"CODE_SIZE\"\n}, {\n  no: 3,\n  name: \"LITE_RUNTIME\"\n}]);\nclass _e extends w {\n  constructor(e) {\n    super(), this.uninterpretedOption = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new _e().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new _e().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new _e().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(_e, e, n);\n  }\n}\n_e.runtime = u;\n_e.typeName = \"google.protobuf.MessageOptions\";\n_e.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"message_set_wire_format\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 2,\n  name: \"no_standard_descriptor_accessor\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 3,\n  name: \"deprecated\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 7,\n  name: \"map_entry\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}, {\n  no: 11,\n  name: \"deprecated_legacy_json_field_conflicts\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}, {\n  no: 12,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}]);\nclass Se extends w {\n  constructor(e) {\n    super(), this.targets = [], this.editionDefaults = [], this.uninterpretedOption = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Se().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Se().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Se().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Se, e, n);\n  }\n}\nSe.runtime = u;\nSe.typeName = \"google.protobuf.FieldOptions\";\nSe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"ctype\",\n  kind: \"enum\",\n  T: u.getEnumType(hn),\n  opt: !0,\n  default: hn.STRING\n}, {\n  no: 2,\n  name: \"packed\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}, {\n  no: 6,\n  name: \"jstype\",\n  kind: \"enum\",\n  T: u.getEnumType(fn),\n  opt: !0,\n  default: fn.JS_NORMAL\n}, {\n  no: 5,\n  name: \"lazy\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 15,\n  name: \"unverified_lazy\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 3,\n  name: \"deprecated\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 10,\n  name: \"weak\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 16,\n  name: \"debug_redact\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 17,\n  name: \"retention\",\n  kind: \"enum\",\n  T: u.getEnumType(Vn),\n  opt: !0\n}, {\n  no: 19,\n  name: \"targets\",\n  kind: \"enum\",\n  T: u.getEnumType(Wn),\n  repeated: !0\n}, {\n  no: 20,\n  name: \"edition_defaults\",\n  kind: \"message\",\n  T: Ie,\n  repeated: !0\n}, {\n  no: 21,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 22,\n  name: \"feature_support\",\n  kind: \"message\",\n  T: re,\n  opt: !0\n}, {\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}]);\nvar hn;\n(function (a) {\n  a[a.STRING = 0] = \"STRING\", a[a.CORD = 1] = \"CORD\", a[a.STRING_PIECE = 2] = \"STRING_PIECE\";\n})(hn || (hn = {}));\nu.util.setEnumType(hn, \"google.protobuf.FieldOptions.CType\", [{\n  no: 0,\n  name: \"STRING\"\n}, {\n  no: 1,\n  name: \"CORD\"\n}, {\n  no: 2,\n  name: \"STRING_PIECE\"\n}]);\nvar fn;\n(function (a) {\n  a[a.JS_NORMAL = 0] = \"JS_NORMAL\", a[a.JS_STRING = 1] = \"JS_STRING\", a[a.JS_NUMBER = 2] = \"JS_NUMBER\";\n})(fn || (fn = {}));\nu.util.setEnumType(fn, \"google.protobuf.FieldOptions.JSType\", [{\n  no: 0,\n  name: \"JS_NORMAL\"\n}, {\n  no: 1,\n  name: \"JS_STRING\"\n}, {\n  no: 2,\n  name: \"JS_NUMBER\"\n}]);\nvar Vn;\n(function (a) {\n  a[a.RETENTION_UNKNOWN = 0] = \"RETENTION_UNKNOWN\", a[a.RETENTION_RUNTIME = 1] = \"RETENTION_RUNTIME\", a[a.RETENTION_SOURCE = 2] = \"RETENTION_SOURCE\";\n})(Vn || (Vn = {}));\nu.util.setEnumType(Vn, \"google.protobuf.FieldOptions.OptionRetention\", [{\n  no: 0,\n  name: \"RETENTION_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"RETENTION_RUNTIME\"\n}, {\n  no: 2,\n  name: \"RETENTION_SOURCE\"\n}]);\nvar Wn;\n(function (a) {\n  a[a.TARGET_TYPE_UNKNOWN = 0] = \"TARGET_TYPE_UNKNOWN\", a[a.TARGET_TYPE_FILE = 1] = \"TARGET_TYPE_FILE\", a[a.TARGET_TYPE_EXTENSION_RANGE = 2] = \"TARGET_TYPE_EXTENSION_RANGE\", a[a.TARGET_TYPE_MESSAGE = 3] = \"TARGET_TYPE_MESSAGE\", a[a.TARGET_TYPE_FIELD = 4] = \"TARGET_TYPE_FIELD\", a[a.TARGET_TYPE_ONEOF = 5] = \"TARGET_TYPE_ONEOF\", a[a.TARGET_TYPE_ENUM = 6] = \"TARGET_TYPE_ENUM\", a[a.TARGET_TYPE_ENUM_ENTRY = 7] = \"TARGET_TYPE_ENUM_ENTRY\", a[a.TARGET_TYPE_SERVICE = 8] = \"TARGET_TYPE_SERVICE\", a[a.TARGET_TYPE_METHOD = 9] = \"TARGET_TYPE_METHOD\";\n})(Wn || (Wn = {}));\nu.util.setEnumType(Wn, \"google.protobuf.FieldOptions.OptionTargetType\", [{\n  no: 0,\n  name: \"TARGET_TYPE_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"TARGET_TYPE_FILE\"\n}, {\n  no: 2,\n  name: \"TARGET_TYPE_EXTENSION_RANGE\"\n}, {\n  no: 3,\n  name: \"TARGET_TYPE_MESSAGE\"\n}, {\n  no: 4,\n  name: \"TARGET_TYPE_FIELD\"\n}, {\n  no: 5,\n  name: \"TARGET_TYPE_ONEOF\"\n}, {\n  no: 6,\n  name: \"TARGET_TYPE_ENUM\"\n}, {\n  no: 7,\n  name: \"TARGET_TYPE_ENUM_ENTRY\"\n}, {\n  no: 8,\n  name: \"TARGET_TYPE_SERVICE\"\n}, {\n  no: 9,\n  name: \"TARGET_TYPE_METHOD\"\n}]);\nclass Ie extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Ie().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Ie().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Ie().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Ie, e, n);\n  }\n}\nIe.runtime = u;\nIe.typeName = \"google.protobuf.FieldOptions.EditionDefault\";\nIe.fields = u.util.newFieldList(() => [{\n  no: 3,\n  name: \"edition\",\n  kind: \"enum\",\n  T: u.getEnumType(ne),\n  opt: !0\n}, {\n  no: 2,\n  name: \"value\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}]);\nclass re extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new re().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new re().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new re().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(re, e, n);\n  }\n}\nre.runtime = u;\nre.typeName = \"google.protobuf.FieldOptions.FeatureSupport\";\nre.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"edition_introduced\",\n  kind: \"enum\",\n  T: u.getEnumType(ne),\n  opt: !0\n}, {\n  no: 2,\n  name: \"edition_deprecated\",\n  kind: \"enum\",\n  T: u.getEnumType(ne),\n  opt: !0\n}, {\n  no: 3,\n  name: \"deprecation_warning\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 4,\n  name: \"edition_removed\",\n  kind: \"enum\",\n  T: u.getEnumType(ne),\n  opt: !0\n}]);\nclass Me extends w {\n  constructor(e) {\n    super(), this.uninterpretedOption = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Me().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Me().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Me().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Me, e, n);\n  }\n}\nMe.runtime = u;\nMe.typeName = \"google.protobuf.OneofOptions\";\nMe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}]);\nclass be extends w {\n  constructor(e) {\n    super(), this.uninterpretedOption = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new be().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new be().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new be().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(be, e, n);\n  }\n}\nbe.runtime = u;\nbe.typeName = \"google.protobuf.EnumOptions\";\nbe.fields = u.util.newFieldList(() => [{\n  no: 2,\n  name: \"allow_alias\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}, {\n  no: 3,\n  name: \"deprecated\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 6,\n  name: \"deprecated_legacy_json_field_conflicts\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0\n}, {\n  no: 7,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}]);\nclass we extends w {\n  constructor(e) {\n    super(), this.uninterpretedOption = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new we().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new we().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new we().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(we, e, n);\n  }\n}\nwe.runtime = u;\nwe.typeName = \"google.protobuf.EnumValueOptions\";\nwe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"deprecated\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 2,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 3,\n  name: \"debug_redact\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 4,\n  name: \"feature_support\",\n  kind: \"message\",\n  T: re,\n  opt: !0\n}, {\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}]);\nclass Ee extends w {\n  constructor(e) {\n    super(), this.uninterpretedOption = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Ee().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Ee().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Ee().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Ee, e, n);\n  }\n}\nEe.runtime = u;\nEe.typeName = \"google.protobuf.ServiceOptions\";\nEe.fields = u.util.newFieldList(() => [{\n  no: 34,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 33,\n  name: \"deprecated\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}]);\nclass me extends w {\n  constructor(e) {\n    super(), this.uninterpretedOption = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new me().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new me().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new me().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(me, e, n);\n  }\n}\nme.runtime = u;\nme.typeName = \"google.protobuf.MethodOptions\";\nme.fields = u.util.newFieldList(() => [{\n  no: 33,\n  name: \"deprecated\",\n  kind: \"scalar\",\n  T: 8,\n  opt: !0,\n  default: !1\n}, {\n  no: 34,\n  name: \"idempotency_level\",\n  kind: \"enum\",\n  T: u.getEnumType(Rn),\n  opt: !0,\n  default: Rn.IDEMPOTENCY_UNKNOWN\n}, {\n  no: 35,\n  name: \"features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 999,\n  name: \"uninterpreted_option\",\n  kind: \"message\",\n  T: W,\n  repeated: !0\n}]);\nvar Rn;\n(function (a) {\n  a[a.IDEMPOTENCY_UNKNOWN = 0] = \"IDEMPOTENCY_UNKNOWN\", a[a.NO_SIDE_EFFECTS = 1] = \"NO_SIDE_EFFECTS\", a[a.IDEMPOTENT = 2] = \"IDEMPOTENT\";\n})(Rn || (Rn = {}));\nu.util.setEnumType(Rn, \"google.protobuf.MethodOptions.IdempotencyLevel\", [{\n  no: 0,\n  name: \"IDEMPOTENCY_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"NO_SIDE_EFFECTS\"\n}, {\n  no: 2,\n  name: \"IDEMPOTENT\"\n}]);\nclass W extends w {\n  constructor(e) {\n    super(), this.name = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new W().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new W().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new W().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(W, e, n);\n  }\n}\nW.runtime = u;\nW.typeName = \"google.protobuf.UninterpretedOption\";\nW.fields = u.util.newFieldList(() => [{\n  no: 2,\n  name: \"name\",\n  kind: \"message\",\n  T: Oe,\n  repeated: !0\n}, {\n  no: 3,\n  name: \"identifier_value\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 4,\n  name: \"positive_int_value\",\n  kind: \"scalar\",\n  T: 4,\n  opt: !0\n}, {\n  no: 5,\n  name: \"negative_int_value\",\n  kind: \"scalar\",\n  T: 3,\n  opt: !0\n}, {\n  no: 6,\n  name: \"double_value\",\n  kind: \"scalar\",\n  T: 1,\n  opt: !0\n}, {\n  no: 7,\n  name: \"string_value\",\n  kind: \"scalar\",\n  T: 12,\n  opt: !0\n}, {\n  no: 8,\n  name: \"aggregate_value\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}]);\nclass Oe extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Oe().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Oe().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Oe().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Oe, e, n);\n  }\n}\nOe.runtime = u;\nOe.typeName = \"google.protobuf.UninterpretedOption.NamePart\";\nOe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"name_part\",\n  kind: \"scalar\",\n  T: 9,\n  req: !0\n}, {\n  no: 2,\n  name: \"is_extension\",\n  kind: \"scalar\",\n  T: 8,\n  req: !0\n}]);\nclass $ extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new $().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new $().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new $().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals($, e, n);\n  }\n}\n$.runtime = u;\n$.typeName = \"google.protobuf.FeatureSet\";\n$.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"field_presence\",\n  kind: \"enum\",\n  T: u.getEnumType(jn),\n  opt: !0\n}, {\n  no: 2,\n  name: \"enum_type\",\n  kind: \"enum\",\n  T: u.getEnumType(Hn),\n  opt: !0\n}, {\n  no: 3,\n  name: \"repeated_field_encoding\",\n  kind: \"enum\",\n  T: u.getEnumType(Kn),\n  opt: !0\n}, {\n  no: 4,\n  name: \"utf8_validation\",\n  kind: \"enum\",\n  T: u.getEnumType(Xn),\n  opt: !0\n}, {\n  no: 5,\n  name: \"message_encoding\",\n  kind: \"enum\",\n  T: u.getEnumType(Qn),\n  opt: !0\n}, {\n  no: 6,\n  name: \"json_format\",\n  kind: \"enum\",\n  T: u.getEnumType(Zn),\n  opt: !0\n}]);\nvar jn;\n(function (a) {\n  a[a.FIELD_PRESENCE_UNKNOWN = 0] = \"FIELD_PRESENCE_UNKNOWN\", a[a.EXPLICIT = 1] = \"EXPLICIT\", a[a.IMPLICIT = 2] = \"IMPLICIT\", a[a.LEGACY_REQUIRED = 3] = \"LEGACY_REQUIRED\";\n})(jn || (jn = {}));\nu.util.setEnumType(jn, \"google.protobuf.FeatureSet.FieldPresence\", [{\n  no: 0,\n  name: \"FIELD_PRESENCE_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"EXPLICIT\"\n}, {\n  no: 2,\n  name: \"IMPLICIT\"\n}, {\n  no: 3,\n  name: \"LEGACY_REQUIRED\"\n}]);\nvar Hn;\n(function (a) {\n  a[a.ENUM_TYPE_UNKNOWN = 0] = \"ENUM_TYPE_UNKNOWN\", a[a.OPEN = 1] = \"OPEN\", a[a.CLOSED = 2] = \"CLOSED\";\n})(Hn || (Hn = {}));\nu.util.setEnumType(Hn, \"google.protobuf.FeatureSet.EnumType\", [{\n  no: 0,\n  name: \"ENUM_TYPE_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"OPEN\"\n}, {\n  no: 2,\n  name: \"CLOSED\"\n}]);\nvar Kn;\n(function (a) {\n  a[a.REPEATED_FIELD_ENCODING_UNKNOWN = 0] = \"REPEATED_FIELD_ENCODING_UNKNOWN\", a[a.PACKED = 1] = \"PACKED\", a[a.EXPANDED = 2] = \"EXPANDED\";\n})(Kn || (Kn = {}));\nu.util.setEnumType(Kn, \"google.protobuf.FeatureSet.RepeatedFieldEncoding\", [{\n  no: 0,\n  name: \"REPEATED_FIELD_ENCODING_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"PACKED\"\n}, {\n  no: 2,\n  name: \"EXPANDED\"\n}]);\nvar Xn;\n(function (a) {\n  a[a.UTF8_VALIDATION_UNKNOWN = 0] = \"UTF8_VALIDATION_UNKNOWN\", a[a.VERIFY = 2] = \"VERIFY\", a[a.NONE = 3] = \"NONE\";\n})(Xn || (Xn = {}));\nu.util.setEnumType(Xn, \"google.protobuf.FeatureSet.Utf8Validation\", [{\n  no: 0,\n  name: \"UTF8_VALIDATION_UNKNOWN\"\n}, {\n  no: 2,\n  name: \"VERIFY\"\n}, {\n  no: 3,\n  name: \"NONE\"\n}]);\nvar Qn;\n(function (a) {\n  a[a.MESSAGE_ENCODING_UNKNOWN = 0] = \"MESSAGE_ENCODING_UNKNOWN\", a[a.LENGTH_PREFIXED = 1] = \"LENGTH_PREFIXED\", a[a.DELIMITED = 2] = \"DELIMITED\";\n})(Qn || (Qn = {}));\nu.util.setEnumType(Qn, \"google.protobuf.FeatureSet.MessageEncoding\", [{\n  no: 0,\n  name: \"MESSAGE_ENCODING_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"LENGTH_PREFIXED\"\n}, {\n  no: 2,\n  name: \"DELIMITED\"\n}]);\nvar Zn;\n(function (a) {\n  a[a.JSON_FORMAT_UNKNOWN = 0] = \"JSON_FORMAT_UNKNOWN\", a[a.ALLOW = 1] = \"ALLOW\", a[a.LEGACY_BEST_EFFORT = 2] = \"LEGACY_BEST_EFFORT\";\n})(Zn || (Zn = {}));\nu.util.setEnumType(Zn, \"google.protobuf.FeatureSet.JsonFormat\", [{\n  no: 0,\n  name: \"JSON_FORMAT_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"ALLOW\"\n}, {\n  no: 2,\n  name: \"LEGACY_BEST_EFFORT\"\n}]);\nclass xe extends w {\n  constructor(e) {\n    super(), this.defaults = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new xe().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new xe().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new xe().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(xe, e, n);\n  }\n}\nxe.runtime = u;\nxe.typeName = \"google.protobuf.FeatureSetDefaults\";\nxe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"defaults\",\n  kind: \"message\",\n  T: Ce,\n  repeated: !0\n}, {\n  no: 4,\n  name: \"minimum_edition\",\n  kind: \"enum\",\n  T: u.getEnumType(ne),\n  opt: !0\n}, {\n  no: 5,\n  name: \"maximum_edition\",\n  kind: \"enum\",\n  T: u.getEnumType(ne),\n  opt: !0\n}]);\nclass Ce extends w {\n  constructor(e) {\n    super(), u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Ce().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Ce().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Ce().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Ce, e, n);\n  }\n}\nCe.runtime = u;\nCe.typeName = \"google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault\";\nCe.fields = u.util.newFieldList(() => [{\n  no: 3,\n  name: \"edition\",\n  kind: \"enum\",\n  T: u.getEnumType(ne),\n  opt: !0\n}, {\n  no: 4,\n  name: \"overridable_features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}, {\n  no: 5,\n  name: \"fixed_features\",\n  kind: \"message\",\n  T: $,\n  opt: !0\n}]);\nclass Ne extends w {\n  constructor(e) {\n    super(), this.location = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Ne().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Ne().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Ne().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Ne, e, n);\n  }\n}\nNe.runtime = u;\nNe.typeName = \"google.protobuf.SourceCodeInfo\";\nNe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"location\",\n  kind: \"message\",\n  T: Pe,\n  repeated: !0\n}]);\nclass Pe extends w {\n  constructor(e) {\n    super(), this.path = [], this.span = [], this.leadingDetachedComments = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Pe().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Pe().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Pe().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Pe, e, n);\n  }\n}\nPe.runtime = u;\nPe.typeName = \"google.protobuf.SourceCodeInfo.Location\";\nPe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"path\",\n  kind: \"scalar\",\n  T: 5,\n  repeated: !0,\n  packed: !0\n}, {\n  no: 2,\n  name: \"span\",\n  kind: \"scalar\",\n  T: 5,\n  repeated: !0,\n  packed: !0\n}, {\n  no: 3,\n  name: \"leading_comments\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 4,\n  name: \"trailing_comments\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 6,\n  name: \"leading_detached_comments\",\n  kind: \"scalar\",\n  T: 9,\n  repeated: !0\n}]);\nclass Fe extends w {\n  constructor(e) {\n    super(), this.annotation = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Fe().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Fe().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Fe().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Fe, e, n);\n  }\n}\nFe.runtime = u;\nFe.typeName = \"google.protobuf.GeneratedCodeInfo\";\nFe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"annotation\",\n  kind: \"message\",\n  T: Ae,\n  repeated: !0\n}]);\nclass Ae extends w {\n  constructor(e) {\n    super(), this.path = [], u.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new Ae().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new Ae().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new Ae().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return u.util.equals(Ae, e, n);\n  }\n}\nAe.runtime = u;\nAe.typeName = \"google.protobuf.GeneratedCodeInfo.Annotation\";\nAe.fields = u.util.newFieldList(() => [{\n  no: 1,\n  name: \"path\",\n  kind: \"scalar\",\n  T: 5,\n  repeated: !0,\n  packed: !0\n}, {\n  no: 2,\n  name: \"source_file\",\n  kind: \"scalar\",\n  T: 9,\n  opt: !0\n}, {\n  no: 3,\n  name: \"begin\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 4,\n  name: \"end\",\n  kind: \"scalar\",\n  T: 5,\n  opt: !0\n}, {\n  no: 5,\n  name: \"semantic\",\n  kind: \"enum\",\n  T: u.getEnumType(ea),\n  opt: !0\n}]);\nvar ea;\n(function (a) {\n  a[a.NONE = 0] = \"NONE\", a[a.SET = 1] = \"SET\", a[a.ALIAS = 2] = \"ALIAS\";\n})(ea || (ea = {}));\nu.util.setEnumType(ea, \"google.protobuf.GeneratedCodeInfo.Annotation.Semantic\", [{\n  no: 0,\n  name: \"NONE\"\n}, {\n  no: 1,\n  name: \"SET\"\n}, {\n  no: 2,\n  name: \"ALIAS\"\n}]);\nclass _ extends w {\n  constructor(e) {\n    super(), this.seconds = V.zero, this.nanos = 0, s.util.initPartial(e, this);\n  }\n  fromJson(e, n) {\n    if (typeof e != \"string\") throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${s.json.debug(e)}`);\n    const t = e.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n    if (!t) throw new Error(\"cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string\");\n    const o = Date.parse(t[1] + \"-\" + t[2] + \"-\" + t[3] + \"T\" + t[4] + \":\" + t[5] + \":\" + t[6] + (t[8] ? t[8] : \"Z\"));\n    if (Number.isNaN(o)) throw new Error(\"cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string\");\n    if (o < Date.parse(\"0001-01-01T00:00:00Z\") || o > Date.parse(\"9999-12-31T23:59:59Z\")) throw new Error(\"cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive\");\n    return this.seconds = V.parse(o / 1e3), this.nanos = 0, t[7] && (this.nanos = parseInt(\"1\" + t[7] + \"0\".repeat(9 - t[7].length)) - 1e9), this;\n  }\n  toJson(e) {\n    const n = Number(this.seconds) * 1e3;\n    if (n < Date.parse(\"0001-01-01T00:00:00Z\") || n > Date.parse(\"9999-12-31T23:59:59Z\")) throw new Error(\"cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive\");\n    if (this.nanos < 0) throw new Error(\"cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative\");\n    let t = \"Z\";\n    if (this.nanos > 0) {\n      const o = (this.nanos + 1e9).toString().substring(1);\n      o.substring(3) === \"000000\" ? t = \".\" + o.substring(0, 3) + \"Z\" : o.substring(6) === \"000\" ? t = \".\" + o.substring(0, 6) + \"Z\" : t = \".\" + o + \"Z\";\n    }\n    return new Date(n).toISOString().replace(\".000Z\", t);\n  }\n  toDate() {\n    return new Date(Number(this.seconds) * 1e3 + Math.ceil(this.nanos / 1e6));\n  }\n  static now() {\n    return _.fromDate(/* @__PURE__ */new Date());\n  }\n  static fromDate(e) {\n    const n = e.getTime();\n    return new _({\n      seconds: V.parse(Math.floor(n / 1e3)),\n      nanos: n % 1e3 * 1e6\n    });\n  }\n  static fromBinary(e, n) {\n    return new _().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new _().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new _().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return s.util.equals(_, e, n);\n  }\n}\n_.runtime = s;\n_.typeName = \"google.protobuf.Timestamp\";\n_.fields = s.util.newFieldList(() => [{\n  no: 1,\n  name: \"seconds\",\n  kind: \"scalar\",\n  T: 3\n  /* ScalarType.INT64 */\n}, {\n  no: 2,\n  name: \"nanos\",\n  kind: \"scalar\",\n  T: 5\n  /* ScalarType.INT32 */\n}]);\nclass F extends w {\n  constructor(e) {\n    super(), this.seconds = V.zero, this.nanos = 0, s.util.initPartial(e, this);\n  }\n  fromJson(e, n) {\n    if (typeof e != \"string\") throw new Error(`cannot decode google.protobuf.Duration from JSON: ${s.json.debug(e)}`);\n    const t = e.match(/^(-?[0-9]+)(?:\\.([0-9]+))?s/);\n    if (t === null) throw new Error(`cannot decode google.protobuf.Duration from JSON: ${s.json.debug(e)}`);\n    const o = Number(t[1]);\n    if (o > 315576e6 || o < -315576e6) throw new Error(`cannot decode google.protobuf.Duration from JSON: ${s.json.debug(e)}`);\n    if (this.seconds = V.parse(o), typeof t[2] == \"string\") {\n      const i = t[2] + \"0\".repeat(9 - t[2].length);\n      this.nanos = parseInt(i), (o < 0 || Object.is(o, -0)) && (this.nanos = -this.nanos);\n    }\n    return this;\n  }\n  toJson(e) {\n    if (Number(this.seconds) > 315576e6 || Number(this.seconds) < -315576e6) throw new Error(\"cannot encode google.protobuf.Duration to JSON: value out of range\");\n    let n = this.seconds.toString();\n    if (this.nanos !== 0) {\n      let t = Math.abs(this.nanos).toString();\n      t = \"0\".repeat(9 - t.length) + t, t.substring(3) === \"000000\" ? t = t.substring(0, 3) : t.substring(6) === \"000\" && (t = t.substring(0, 6)), n += \".\" + t, this.nanos < 0 && Number(this.seconds) == 0 && (n = \"-\" + n);\n    }\n    return n + \"s\";\n  }\n  static fromBinary(e, n) {\n    return new F().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new F().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new F().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return s.util.equals(F, e, n);\n  }\n}\nF.runtime = s;\nF.typeName = \"google.protobuf.Duration\";\nF.fields = s.util.newFieldList(() => [{\n  no: 1,\n  name: \"seconds\",\n  kind: \"scalar\",\n  T: 3\n  /* ScalarType.INT64 */\n}, {\n  no: 2,\n  name: \"nanos\",\n  kind: \"scalar\",\n  T: 5\n  /* ScalarType.INT32 */\n}]);\nclass j extends w {\n  constructor(e) {\n    super(), this.typeUrl = \"\", this.value = new Uint8Array(0), s.util.initPartial(e, this);\n  }\n  toJson(e) {\n    var n;\n    if (this.typeUrl === \"\") return {};\n    const t = this.typeUrlToName(this.typeUrl),\n      o = (n = e?.typeRegistry) === null || n === void 0 ? void 0 : n.findMessage(t);\n    if (!o) throw new Error(`cannot encode message google.protobuf.Any to JSON: \"${this.typeUrl}\" is not in the type registry`);\n    let r = o.fromBinary(this.value).toJson(e);\n    return (t.startsWith(\"google.protobuf.\") || r === null || Array.isArray(r) || typeof r != \"object\") && (r = {\n      value: r\n    }), r[\"@type\"] = this.typeUrl, r;\n  }\n  fromJson(e, n) {\n    var t;\n    if (e === null || Array.isArray(e) || typeof e != \"object\") throw new Error(`cannot decode message google.protobuf.Any from JSON: expected object but got ${e === null ? \"null\" : Array.isArray(e) ? \"array\" : typeof e}`);\n    if (Object.keys(e).length == 0) return this;\n    const o = e[\"@type\"];\n    if (typeof o != \"string\" || o == \"\") throw new Error('cannot decode message google.protobuf.Any from JSON: \"@type\" is empty');\n    const i = this.typeUrlToName(o),\n      r = (t = n?.typeRegistry) === null || t === void 0 ? void 0 : t.findMessage(i);\n    if (!r) throw new Error(`cannot decode message google.protobuf.Any from JSON: ${o} is not in the type registry`);\n    let c;\n    if (i.startsWith(\"google.protobuf.\") && Object.prototype.hasOwnProperty.call(e, \"value\")) c = r.fromJson(e.value, n);else {\n      const p = Object.assign({}, e);\n      delete p[\"@type\"], c = r.fromJson(p, n);\n    }\n    return this.packFrom(c), this;\n  }\n  packFrom(e) {\n    this.value = e.toBinary(), this.typeUrl = this.typeNameToUrl(e.getType().typeName);\n  }\n  unpackTo(e) {\n    return this.is(e.getType()) ? (e.fromBinary(this.value), !0) : !1;\n  }\n  unpack(e) {\n    if (this.typeUrl === \"\") return;\n    const n = e.findMessage(this.typeUrlToName(this.typeUrl));\n    if (n) return n.fromBinary(this.value);\n  }\n  is(e) {\n    if (this.typeUrl === \"\") return !1;\n    const n = this.typeUrlToName(this.typeUrl);\n    let t = \"\";\n    return typeof e == \"string\" ? t = e : t = e.typeName, n === t;\n  }\n  typeNameToUrl(e) {\n    return `type.googleapis.com/${e}`;\n  }\n  typeUrlToName(e) {\n    if (!e.length) throw new Error(`invalid type url: ${e}`);\n    const n = e.lastIndexOf(\"/\"),\n      t = n >= 0 ? e.substring(n + 1) : e;\n    if (!t.length) throw new Error(`invalid type url: ${e}`);\n    return t;\n  }\n  static pack(e) {\n    const n = new j();\n    return n.packFrom(e), n;\n  }\n  static fromBinary(e, n) {\n    return new j().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new j().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new j().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return s.util.equals(j, e, n);\n  }\n}\nj.runtime = s;\nj.typeName = \"google.protobuf.Any\";\nj.fields = s.util.newFieldList(() => [{\n  no: 1,\n  name: \"type_url\",\n  kind: \"scalar\",\n  T: 9\n  /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"value\",\n  kind: \"scalar\",\n  T: 12\n  /* ScalarType.BYTES */\n}]);\nvar _n;\n(function (a) {\n  a[a.NULL_VALUE = 0] = \"NULL_VALUE\";\n})(_n || (_n = {}));\ns.util.setEnumType(_n, \"google.protobuf.NullValue\", [{\n  no: 0,\n  name: \"NULL_VALUE\"\n}]);\nclass l extends w {\n  constructor(e) {\n    super(), this.fields = {}, s.util.initPartial(e, this);\n  }\n  toJson(e) {\n    const n = {};\n    for (const [t, o] of Object.entries(this.fields)) n[t] = o.toJson(e);\n    return n;\n  }\n  fromJson(e, n) {\n    if (typeof e != \"object\" || e == null || Array.isArray(e)) throw new Error(\"cannot decode google.protobuf.Struct from JSON \" + s.json.debug(e));\n    for (const [t, o] of Object.entries(e)) this.fields[t] = X.fromJson(o);\n    return this;\n  }\n  static fromBinary(e, n) {\n    return new l().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new l().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new l().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return s.util.equals(l, e, n);\n  }\n}\nl.runtime = s;\nl.typeName = \"google.protobuf.Struct\";\nl.fields = s.util.newFieldList(() => [{\n  no: 1,\n  name: \"fields\",\n  kind: \"map\",\n  K: 9,\n  V: {\n    kind: \"message\",\n    T: X\n  }\n}]);\nclass X extends w {\n  constructor(e) {\n    super(), this.kind = {\n      case: void 0\n    }, s.util.initPartial(e, this);\n  }\n  toJson(e) {\n    switch (this.kind.case) {\n      case \"nullValue\":\n        return null;\n      case \"numberValue\":\n        if (!Number.isFinite(this.kind.value)) throw new Error(\"google.protobuf.Value cannot be NaN or Infinity\");\n        return this.kind.value;\n      case \"boolValue\":\n        return this.kind.value;\n      case \"stringValue\":\n        return this.kind.value;\n      case \"structValue\":\n      case \"listValue\":\n        return this.kind.value.toJson(Object.assign(Object.assign({}, e), {\n          emitDefaultValues: !0\n        }));\n    }\n    throw new Error(\"google.protobuf.Value must have a value\");\n  }\n  fromJson(e, n) {\n    switch (typeof e) {\n      case \"number\":\n        this.kind = {\n          case: \"numberValue\",\n          value: e\n        };\n        break;\n      case \"string\":\n        this.kind = {\n          case: \"stringValue\",\n          value: e\n        };\n        break;\n      case \"boolean\":\n        this.kind = {\n          case: \"boolValue\",\n          value: e\n        };\n        break;\n      case \"object\":\n        e === null ? this.kind = {\n          case: \"nullValue\",\n          value: _n.NULL_VALUE\n        } : Array.isArray(e) ? this.kind = {\n          case: \"listValue\",\n          value: ce.fromJson(e)\n        } : this.kind = {\n          case: \"structValue\",\n          value: l.fromJson(e)\n        };\n        break;\n      default:\n        throw new Error(\"cannot decode google.protobuf.Value from JSON \" + s.json.debug(e));\n    }\n    return this;\n  }\n  static fromBinary(e, n) {\n    return new X().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new X().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new X().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return s.util.equals(X, e, n);\n  }\n}\nX.runtime = s;\nX.typeName = \"google.protobuf.Value\";\nX.fields = s.util.newFieldList(() => [{\n  no: 1,\n  name: \"null_value\",\n  kind: \"enum\",\n  T: s.getEnumType(_n),\n  oneof: \"kind\"\n}, {\n  no: 2,\n  name: \"number_value\",\n  kind: \"scalar\",\n  T: 1,\n  oneof: \"kind\"\n}, {\n  no: 3,\n  name: \"string_value\",\n  kind: \"scalar\",\n  T: 9,\n  oneof: \"kind\"\n}, {\n  no: 4,\n  name: \"bool_value\",\n  kind: \"scalar\",\n  T: 8,\n  oneof: \"kind\"\n}, {\n  no: 5,\n  name: \"struct_value\",\n  kind: \"message\",\n  T: l,\n  oneof: \"kind\"\n}, {\n  no: 6,\n  name: \"list_value\",\n  kind: \"message\",\n  T: ce,\n  oneof: \"kind\"\n}]);\nclass ce extends w {\n  constructor(e) {\n    super(), this.values = [], s.util.initPartial(e, this);\n  }\n  toJson(e) {\n    return this.values.map(n => n.toJson());\n  }\n  fromJson(e, n) {\n    if (!Array.isArray(e)) throw new Error(\"cannot decode google.protobuf.ListValue from JSON \" + s.json.debug(e));\n    for (let t of e) this.values.push(X.fromJson(t));\n    return this;\n  }\n  static fromBinary(e, n) {\n    return new ce().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new ce().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new ce().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return s.util.equals(ce, e, n);\n  }\n}\nce.runtime = s;\nce.typeName = \"google.protobuf.ListValue\";\nce.fields = s.util.newFieldList(() => [{\n  no: 1,\n  name: \"values\",\n  kind: \"message\",\n  T: X,\n  repeated: !0\n}]);\nvar E;\n(function (a) {\n  a[a.Canceled = 1] = \"Canceled\", a[a.Unknown = 2] = \"Unknown\", a[a.InvalidArgument = 3] = \"InvalidArgument\", a[a.DeadlineExceeded = 4] = \"DeadlineExceeded\", a[a.NotFound = 5] = \"NotFound\", a[a.AlreadyExists = 6] = \"AlreadyExists\", a[a.PermissionDenied = 7] = \"PermissionDenied\", a[a.ResourceExhausted = 8] = \"ResourceExhausted\", a[a.FailedPrecondition = 9] = \"FailedPrecondition\", a[a.Aborted = 10] = \"Aborted\", a[a.OutOfRange = 11] = \"OutOfRange\", a[a.Unimplemented = 12] = \"Unimplemented\", a[a.Internal = 13] = \"Internal\", a[a.Unavailable = 14] = \"Unavailable\", a[a.DataLoss = 15] = \"DataLoss\", a[a.Unauthenticated = 16] = \"Unauthenticated\";\n})(E || (E = {}));\nfunction ri(a) {\n  const e = E[a];\n  return typeof e != \"string\" ? a.toString() : e[0].toLowerCase() + e.substring(1).replace(/[A-Z]/g, n => \"_\" + n.toLowerCase());\n}\nclass C extends Error {\n  /**\n   * Create a new ConnectError.\n   * If no code is provided, code \"unknown\" is used.\n   * Outgoing details are only relevant for the server side - a service may\n   * raise an error with details, and it is up to the protocol implementation\n   * to encode and send the details along with error.\n   */\n  constructor(e, n = E.Unknown, t, o, i) {\n    super(rh(e, n)), this.name = \"ConnectError\", Object.setPrototypeOf(this, new.target.prototype), this.rawMessage = e, this.code = n, this.metadata = new Headers(t ?? {}), this.details = o ?? [], this.cause = i;\n  }\n  /**\n   * Convert any value - typically a caught error into a ConnectError,\n   * following these rules:\n   * - If the value is already a ConnectError, return it as is.\n   * - If the value is an AbortError from the fetch API, return the message\n   *   of the AbortError with code Canceled.\n   * - For other Errors, return the error message with code Unknown by default.\n   * - For other values, return the values String representation as a message,\n   *   with the code Unknown by default.\n   * The original value will be used for the \"cause\" property for the new\n   * ConnectError.\n   */\n  static from(e, n = E.Unknown) {\n    return e instanceof C ? e : e instanceof Error ? e.name == \"AbortError\" ? new C(e.message, E.Canceled) : new C(e.message, n, void 0, void 0, e) : new C(String(e), n, void 0, void 0, e);\n  }\n  static [Symbol.hasInstance](e) {\n    return e instanceof Error ? Object.getPrototypeOf(e) === C.prototype ? !0 : e.name === \"ConnectError\" && \"code\" in e && typeof e.code == \"number\" && \"metadata\" in e && \"details\" in e && Array.isArray(e.details) && \"rawMessage\" in e && typeof e.rawMessage == \"string\" && \"cause\" in e : !1;\n  }\n  findDetails(e) {\n    const n = \"typeName\" in e ? {\n        findMessage: o => o === e.typeName ? e : void 0\n      } : e,\n      t = [];\n    for (const o of this.details) {\n      if (\"getType\" in o) {\n        n.findMessage(o.getType().typeName) && t.push(o);\n        continue;\n      }\n      const i = n.findMessage(o.type);\n      if (i) try {\n        t.push(i.fromBinary(o.value));\n      } catch {}\n    }\n    return t;\n  }\n}\nfunction rh(a, e) {\n  return a.length ? `[${ri(e)}] ${a}` : `[${ri(e)}]`;\n}\nfunction mh(a, e, n) {\n  try {\n    const t = at.dec(a);\n    return e ? e.fromBinary(t, n) : t;\n  } catch (t) {\n    throw C.from(t, E.DataLoss);\n  }\n}\nfunction ch(a, e) {\n  const n = {};\n  for (const [t, o] of Object.entries(a.methods)) {\n    const i = e(Object.assign(Object.assign({}, o), {\n      localName: t,\n      service: a\n    }));\n    i != null && (n[t] = i);\n  }\n  return n;\n}\nconst mi = 1;\nfunction ci(a) {\n  let e,\n    n = new Uint8Array(0);\n  function t(o) {\n    const i = new Uint8Array(n.length + o.length);\n    i.set(n), i.set(o, n.length), n = i;\n  }\n  return new ReadableStream({\n    start() {\n      e = a.getReader();\n    },\n    async pull(o) {\n      let i;\n      for (;;) {\n        if (i === void 0 && n.byteLength >= 5) {\n          let p = 0;\n          for (let d = 1; d < 5; d++) p = (p << 8) + n[d];\n          i = {\n            flags: n[0],\n            length: p\n          };\n        }\n        if (i !== void 0 && n.byteLength >= i.length + 5) break;\n        const c = await e.read();\n        if (c.done) break;\n        t(c.value);\n      }\n      if (i === void 0) {\n        if (n.byteLength == 0) {\n          o.close();\n          return;\n        }\n        o.error(new C(\"premature end of stream\", E.DataLoss));\n        return;\n      }\n      const r = n.subarray(5, 5 + i.length);\n      n = n.subarray(5 + i.length), o.enqueue({\n        flags: i.flags,\n        data: r\n      });\n    }\n  });\n}\nfunction li(a, e) {\n  const n = new Uint8Array(e.length + 5);\n  n.set(e, 5);\n  const t = new DataView(n.buffer, n.byteOffset, n.byteLength);\n  return t.setUint8(0, a), t.setUint32(1, e.length), n;\n}\nvar lh = function (a) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var e = a[Symbol.asyncIterator],\n      n;\n    return e ? e.call(a) : (a = typeof __values == \"function\" ? __values(a) : a[Symbol.iterator](), n = {}, t(\"next\"), t(\"throw\"), t(\"return\"), n[Symbol.asyncIterator] = function () {\n      return this;\n    }, n);\n    function t(i) {\n      n[i] = a[i] && function (r) {\n        return new Promise(function (c, p) {\n          r = a[i](r), o(c, p, r.done, r.value);\n        });\n      };\n    }\n    function o(i, r, c, p) {\n      Promise.resolve(p).then(function (d) {\n        i({\n          value: d,\n          done: c\n        });\n      }, r);\n    }\n  },\n  Sn = function (a) {\n    return this instanceof Sn ? (this.v = a, this) : new Sn(a);\n  },\n  dh = function (a, e, n) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var t = n.apply(a, e || []),\n      o,\n      i = [];\n    return o = {}, c(\"next\"), c(\"throw\"), c(\"return\", r), o[Symbol.asyncIterator] = function () {\n      return this;\n    }, o;\n    function r(R) {\n      return function (I) {\n        return Promise.resolve(I).then(R, f);\n      };\n    }\n    function c(R, I) {\n      t[R] && (o[R] = function (O) {\n        return new Promise(function (N, z) {\n          i.push([R, O, N, z]) > 1 || p(R, O);\n        });\n      }, I && (o[R] = I(o[R])));\n    }\n    function p(R, I) {\n      try {\n        d(t[R](I));\n      } catch (O) {\n        S(i[0][3], O);\n      }\n    }\n    function d(R) {\n      R.value instanceof Sn ? Promise.resolve(R.value.v).then(T, f) : S(i[0][2], R);\n    }\n    function T(R) {\n      p(\"next\", R);\n    }\n    function f(R) {\n      p(\"throw\", R);\n    }\n    function S(R, I) {\n      R(I), i.shift(), i.length && p(i[0][0], i[0][1]);\n    }\n  },\n  ph = function (a) {\n    var e, n;\n    return e = {}, t(\"next\"), t(\"throw\", function (o) {\n      throw o;\n    }), t(\"return\"), e[Symbol.iterator] = function () {\n      return this;\n    }, e;\n    function t(o, i) {\n      e[o] = a[o] ? function (r) {\n        return (n = !n) ? {\n          value: Sn(a[o](r)),\n          done: !1\n        } : i ? i(r) : r;\n      } : i;\n    }\n  };\nfunction uh() {\n  const a = [],\n    e = [];\n  let n,\n    t,\n    o,\n    i = new Promise((p, d) => {\n      t = p, o = d;\n    }),\n    r = !1;\n  function c() {\n    for (const p of a.splice(0, a.length)) p({\n      done: !0,\n      value: void 0\n    });\n  }\n  return {\n    close() {\n      r = !0, c();\n    },\n    async write(p) {\n      if (r) throw n ?? new Error(\"cannot write, WritableIterable already closed\");\n      const d = a.shift();\n      if (d === void 0) e.push(p);else if (d({\n        done: !1,\n        value: p\n      }), a.length > 0) return;\n      const T = e.length + 1;\n      for (let f = 0; f < T; f++) await i;\n    },\n    [Symbol.asyncIterator]() {\n      return {\n        next() {\n          t(), i = new Promise((f, S) => {\n            t = f, o = S;\n          });\n          const p = e.shift();\n          if (p !== void 0) return Promise.resolve({\n            done: !1,\n            value: p\n          });\n          if (r) return Promise.resolve({\n            done: !0,\n            value: void 0\n          });\n          let d;\n          const T = new Promise(f => d = f);\n          return a.push(d), T;\n        },\n        throw(p) {\n          return n = p, r = !0, e.splice(0, e.length), i.catch(() => {}), o(n), c(), Promise.resolve({\n            done: !0,\n            value: void 0\n          });\n        },\n        return() {\n          return r = !0, e.splice(0, e.length), t(), i = Promise.reject(new Error(\"cannot write, consumer called return\")), i.catch(() => {}), c(), Promise.resolve({\n            done: !0,\n            value: void 0\n          });\n        }\n      };\n    }\n  };\n}\nfunction Ba(a) {\n  return dh(this, arguments, function* () {\n    yield Sn(yield* ph(lh(a)));\n  });\n}\nvar Vi = function (a) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var e = a[Symbol.asyncIterator],\n      n;\n    return e ? e.call(a) : (a = typeof __values == \"function\" ? __values(a) : a[Symbol.iterator](), n = {}, t(\"next\"), t(\"throw\"), t(\"return\"), n[Symbol.asyncIterator] = function () {\n      return this;\n    }, n);\n    function t(i) {\n      n[i] = a[i] && function (r) {\n        return new Promise(function (c, p) {\n          r = a[i](r), o(c, p, r.done, r.value);\n        });\n      };\n    }\n    function o(i, r, c, p) {\n      Promise.resolve(p).then(function (d) {\n        i({\n          value: d,\n          done: c\n        });\n      }, r);\n    }\n  },\n  an = function (a) {\n    return this instanceof an ? (this.v = a, this) : new an(a);\n  },\n  gh = function (a) {\n    var e, n;\n    return e = {}, t(\"next\"), t(\"throw\", function (o) {\n      throw o;\n    }), t(\"return\"), e[Symbol.iterator] = function () {\n      return this;\n    }, e;\n    function t(o, i) {\n      e[o] = a[o] ? function (r) {\n        return (n = !n) ? {\n          value: an(a[o](r)),\n          done: !1\n        } : i ? i(r) : r;\n      } : i;\n    }\n  },\n  Th = function (a, e, n) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var t = n.apply(a, e || []),\n      o,\n      i = [];\n    return o = {}, c(\"next\"), c(\"throw\"), c(\"return\", r), o[Symbol.asyncIterator] = function () {\n      return this;\n    }, o;\n    function r(R) {\n      return function (I) {\n        return Promise.resolve(I).then(R, f);\n      };\n    }\n    function c(R, I) {\n      t[R] && (o[R] = function (O) {\n        return new Promise(function (N, z) {\n          i.push([R, O, N, z]) > 1 || p(R, O);\n        });\n      }, I && (o[R] = I(o[R])));\n    }\n    function p(R, I) {\n      try {\n        d(t[R](I));\n      } catch (O) {\n        S(i[0][3], O);\n      }\n    }\n    function d(R) {\n      R.value instanceof an ? Promise.resolve(R.value.v).then(T, f) : S(i[0][2], R);\n    }\n    function T(R) {\n      p(\"next\", R);\n    }\n    function f(R) {\n      p(\"throw\", R);\n    }\n    function S(R, I) {\n      R(I), i.shift(), i.length && p(i[0][0], i[0][1]);\n    }\n  };\nfunction na(a, e) {\n  return ch(a, n => {\n    switch (n.kind) {\n      case m.Unary:\n        return kh(e, a, n);\n      case m.ServerStreaming:\n        return yh(e, a, n);\n      case m.ClientStreaming:\n        return vh(e, a, n);\n      case m.BiDiStreaming:\n        return hh(e, a, n);\n      default:\n        return null;\n    }\n  });\n}\nfunction P(a, e) {\n  return na(a, e);\n}\nfunction kh(a, e, n) {\n  return async function (t, o) {\n    var i, r;\n    const c = await a.unary(e, n, o?.signal, o?.timeoutMs, o?.headers, t, o?.contextValues);\n    return (i = o?.onHeader) === null || i === void 0 || i.call(o, c.header), (r = o?.onTrailer) === null || r === void 0 || r.call(o, c.trailer), c.message;\n  };\n}\nfunction yh(a, e, n) {\n  return function (t, o) {\n    return Wi(a.stream(e, n, o?.signal, o?.timeoutMs, o?.headers, Ba([t]), o?.contextValues), o);\n  };\n}\nfunction vh(a, e, n) {\n  return async function (t, o) {\n    var i, r, c, p, d, T;\n    const f = await a.stream(e, n, o?.signal, o?.timeoutMs, o?.headers, t, o?.contextValues);\n    (d = o?.onHeader) === null || d === void 0 || d.call(o, f.header);\n    let S,\n      R = 0;\n    try {\n      for (var I = !0, O = Vi(f.message), N; N = await O.next(), i = N.done, !i; I = !0) p = N.value, I = !1, S = p, R++;\n    } catch (z) {\n      r = {\n        error: z\n      };\n    } finally {\n      try {\n        !I && !i && (c = O.return) && (await c.call(O));\n      } finally {\n        if (r) throw r.error;\n      }\n    }\n    if (!S) throw new C(\"protocol error: missing response message\", E.Unimplemented);\n    if (R > 1) throw new C(\"protocol error: received extra messages for client streaming method\", E.Unimplemented);\n    return (T = o?.onTrailer) === null || T === void 0 || T.call(o, f.trailer), S;\n  };\n}\nfunction hh(a, e, n) {\n  return function (t, o) {\n    return Wi(a.stream(e, n, o?.signal, o?.timeoutMs, o?.headers, t, o?.contextValues), o);\n  };\n}\nfunction Wi(a, e) {\n  const n = function () {\n    return Th(this, arguments, function* () {\n      var t, o;\n      const i = yield an(a);\n      (t = e?.onHeader) === null || t === void 0 || t.call(e, i.header), yield an(yield* gh(Vi(i.message))), (o = e?.onTrailer) === null || o === void 0 || o.call(e, i.trailer);\n    });\n  }()[Symbol.asyncIterator]();\n  return {\n    [Symbol.asyncIterator]: () => ({\n      next: () => n.next()\n    })\n  };\n}\nfunction fh(...a) {\n  const e = new AbortController(),\n    n = a.filter(o => o !== void 0).concat(e.signal);\n  for (const o of n) {\n    if (o.aborted) {\n      t.apply(o);\n      break;\n    }\n    o.addEventListener(\"abort\", t);\n  }\n  function t() {\n    e.signal.aborted || e.abort(ji(this));\n    for (const o of n) o.removeEventListener(\"abort\", t);\n  }\n  return e;\n}\nfunction Rh(a) {\n  const e = new AbortController(),\n    n = () => {\n      e.abort(new C(\"the operation timed out\", E.DeadlineExceeded));\n    };\n  let t;\n  return a !== void 0 && (a <= 0 ? n() : t = setTimeout(n, a)), {\n    signal: e.signal,\n    cleanup: () => clearTimeout(t)\n  };\n}\nfunction ji(a) {\n  if (!a.aborted) return;\n  if (a.reason !== void 0) return a.reason;\n  const e = new Error(\"This operation was aborted\");\n  return e.name = \"AbortError\", e;\n}\nfunction aa() {\n  return {\n    get(a) {\n      return a.id in this ? this[a.id] : a.defaultValue;\n    },\n    set(a, e) {\n      return this[a.id] = e, this;\n    },\n    delete(a) {\n      return delete this[a.id], this;\n    }\n  };\n}\nconst Da = 128;\nfunction di(a) {\n  const e = new Headers(),\n    n = new TextDecoder().decode(a).split(`\\r\n`);\n  for (const t of n) {\n    if (t === \"\") continue;\n    const o = t.indexOf(\":\");\n    if (o > 0) {\n      const i = t.substring(0, o).trim(),\n        r = t.substring(o + 1).trim();\n      e.append(i, r);\n    }\n  }\n  return e;\n}\nconst _h = \"Content-Type\",\n  Sh = \"Grpc-Timeout\",\n  tn = \"Grpc-Status\",\n  Hi = \"Grpc-Message\",\n  Ih = \"Grpc-Status-Details-Bin\",\n  Mh = \"X-User-Agent\",\n  bh = \"X-Grpc-Web\",\n  wh = \"application/grpc-web+proto\",\n  Eh = \"application/grpc-web+json\";\nlet da = class gn extends w {\n  constructor(e) {\n    super(), this.code = 0, this.message = \"\", this.details = [], s.util.initPartial(e, this);\n  }\n  static fromBinary(e, n) {\n    return new gn().fromBinary(e, n);\n  }\n  static fromJson(e, n) {\n    return new gn().fromJson(e, n);\n  }\n  static fromJsonString(e, n) {\n    return new gn().fromJsonString(e, n);\n  }\n  static equals(e, n) {\n    return s.util.equals(gn, e, n);\n  }\n};\nda.runtime = s;\nda.typeName = \"google.rpc.Status\";\nda.fields = s.util.newFieldList(() => [{\n  no: 1,\n  name: \"code\",\n  kind: \"scalar\",\n  T: 5\n  /* ScalarType.INT32 */\n}, {\n  no: 2,\n  name: \"message\",\n  kind: \"scalar\",\n  T: 9\n  /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"details\",\n  kind: \"message\",\n  T: j,\n  repeated: !0\n}]);\nconst Oh = \"0\";\nfunction Ki(a) {\n  var e;\n  const n = a.get(Ih);\n  if (n != null) {\n    const o = mh(n, da);\n    if (o.code == 0) return;\n    const i = new C(o.message, o.code, a);\n    return i.details = o.details.map(r => ({\n      type: r.typeUrl.substring(r.typeUrl.lastIndexOf(\"/\") + 1),\n      value: r.value\n    })), i;\n  }\n  const t = a.get(tn);\n  if (t != null) {\n    if (t === Oh) return;\n    const o = parseInt(t, 10);\n    return o in E ? new C(decodeURIComponent((e = a.get(Hi)) !== null && e !== void 0 ? e : \"\"), o, a) : new C(`invalid grpc-status: ${t}`, E.Internal, a);\n  }\n}\nfunction pi(a, e, n) {\n  const t = typeof e == \"string\" ? e : e.typeName,\n    o = typeof n == \"string\" ? n : n.name;\n  return a.toString().replace(/\\/?$/, `/${t}/${o}`);\n}\nfunction Xi(a, e) {\n  return e instanceof a ? e : new a(e);\n}\nfunction Ch(a, e) {\n  function n(t) {\n    return t.done === !0 ? t : {\n      done: t.done,\n      value: Xi(a, t.value)\n    };\n  }\n  return {\n    [Symbol.asyncIterator]() {\n      const t = e[Symbol.asyncIterator](),\n        o = {\n          next: () => t.next().then(n)\n        };\n      return t.throw !== void 0 && (o.throw = i => t.throw(i).then(n)), t.return !== void 0 && (o.return = i => t.return(i).then(n)), o;\n    }\n  };\n}\nfunction Qi(a, e) {\n  var n;\n  return (n = e?.concat().reverse().reduce(\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  (t, o) => o(t), a)) !== null && n !== void 0 ? n : a;\n}\nfunction Nh(a) {\n  var e;\n  const n = Object.assign({}, a);\n  return (e = n.ignoreUnknownFields) !== null && e !== void 0 || (n.ignoreUnknownFields = !0), n;\n}\nfunction xa(a, e, n, t) {\n  const o = e ? ui(a.I, t) : gi(a.I, n);\n  return {\n    parse: (e ? ui(a.O, t) : gi(a.O, n)).parse,\n    serialize: o.serialize\n  };\n}\nfunction ui(a, e) {\n  return {\n    parse(n) {\n      try {\n        return a.fromBinary(n, e);\n      } catch (t) {\n        const o = t instanceof Error ? t.message : String(t);\n        throw new C(`parse binary: ${o}`, E.Internal);\n      }\n    },\n    serialize(n) {\n      try {\n        return n.toBinary(e);\n      } catch (t) {\n        const o = t instanceof Error ? t.message : String(t);\n        throw new C(`serialize binary: ${o}`, E.Internal);\n      }\n    }\n  };\n}\nfunction gi(a, e) {\n  var n, t;\n  const o = (n = e?.textEncoder) !== null && n !== void 0 ? n : new TextEncoder(),\n    i = (t = e?.textDecoder) !== null && t !== void 0 ? t : new TextDecoder(),\n    r = Nh(e);\n  return {\n    parse(c) {\n      try {\n        const p = i.decode(c);\n        return a.fromJsonString(p, r);\n      } catch (p) {\n        throw C.from(p, E.InvalidArgument);\n      }\n    },\n    serialize(c) {\n      try {\n        const p = c.toJsonString(r);\n        return o.encode(p);\n      } catch (p) {\n        throw C.from(p, E.Internal);\n      }\n    }\n  };\n}\nfunction Zi(a) {\n  const e = Qi(a.next, a.interceptors),\n    [n, t, o] = nr(a),\n    i = Object.assign(Object.assign({}, a.req), {\n      message: Xi(a.req.method.I, a.req.message),\n      signal: n\n    });\n  return e(i).then(r => (o(), r), t);\n}\nfunction er(a) {\n  const e = Qi(a.next, a.interceptors),\n    [n, t, o] = nr(a),\n    i = Object.assign(Object.assign({}, a.req), {\n      message: Ch(a.req.method.I, a.req.message),\n      signal: n\n    });\n  let r = !1;\n  return n.addEventListener(\"abort\", function () {\n    var c, p;\n    const d = a.req.message[Symbol.asyncIterator]();\n    r || (c = d.throw) === null || c === void 0 || c.call(d, this.reason).catch(() => {}), (p = d.return) === null || p === void 0 || p.call(d).catch(() => {});\n  }), e(i).then(c => Object.assign(Object.assign({}, c), {\n    message: {\n      [Symbol.asyncIterator]() {\n        const p = c.message[Symbol.asyncIterator]();\n        return {\n          next() {\n            return p.next().then(d => (d.done == !0 && (r = !0, o()), d), t);\n          }\n          // We deliberately omit throw/return.\n        };\n      }\n    }\n  }), t);\n}\nfunction nr(a) {\n  const {\n      signal: e,\n      cleanup: n\n    } = Rh(a.timeoutMs),\n    t = fh(a.signal, e);\n  return [t.signal, function (i) {\n    const r = C.from(e.aborted ? ji(e) : i);\n    return t.abort(r), n(), Promise.reject(r);\n  }, function () {\n    n(), t.abort();\n  }];\n}\nvar H = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {},\n  ar = {},\n  tt = {},\n  ta = H && H.__assign || function () {\n    return ta = Object.assign || function (a) {\n      for (var e, n = 1, t = arguments.length; n < t; n++) {\n        e = arguments[n];\n        for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (a[o] = e[o]);\n      }\n      return a;\n    }, ta.apply(this, arguments);\n  };\nObject.defineProperty(tt, \"__esModule\", {\n  value: !0\n});\nvar Ph = {\n  delayFirstAttempt: !1,\n  jitter: \"none\",\n  maxDelay: 1 / 0,\n  numOfAttempts: 10,\n  retry: function () {\n    return !0;\n  },\n  startingDelay: 100,\n  timeMultiple: 2\n};\nfunction Ah(a) {\n  var e = ta(ta({}, Ph), a);\n  return e.numOfAttempts < 1 && (e.numOfAttempts = 1), e;\n}\ntt.getSanitizedOptions = Ah;\nvar st = {},\n  ot = {},\n  pa = {},\n  it = {},\n  rt = {};\nObject.defineProperty(rt, \"__esModule\", {\n  value: !0\n});\nfunction Dh(a) {\n  var e = Math.random() * a;\n  return Math.round(e);\n}\nrt.fullJitter = Dh;\nvar mt = {};\nObject.defineProperty(mt, \"__esModule\", {\n  value: !0\n});\nfunction qh(a) {\n  return a;\n}\nmt.noJitter = qh;\nObject.defineProperty(it, \"__esModule\", {\n  value: !0\n});\nvar Uh = rt,\n  Gh = mt;\nfunction Lh(a) {\n  switch (a.jitter) {\n    case \"full\":\n      return Uh.fullJitter;\n    case \"none\":\n    default:\n      return Gh.noJitter;\n  }\n}\nit.JitterFactory = Lh;\nObject.defineProperty(pa, \"__esModule\", {\n  value: !0\n});\nvar Bh = it,\n  xh = /** @class */\n  function () {\n    function a(e) {\n      this.options = e, this.attempt = 0;\n    }\n    return a.prototype.apply = function () {\n      var e = this;\n      return new Promise(function (n) {\n        return setTimeout(n, e.jitteredDelay);\n      });\n    }, a.prototype.setAttemptNumber = function (e) {\n      this.attempt = e;\n    }, Object.defineProperty(a.prototype, \"jitteredDelay\", {\n      get: function () {\n        var e = Bh.JitterFactory(this.options);\n        return e(this.delay);\n      },\n      enumerable: !0,\n      configurable: !0\n    }), Object.defineProperty(a.prototype, \"delay\", {\n      get: function () {\n        var e = this.options.startingDelay,\n          n = this.options.timeMultiple,\n          t = this.numOfDelayedAttempts,\n          o = e * Math.pow(n, t);\n        return Math.min(o, this.options.maxDelay);\n      },\n      enumerable: !0,\n      configurable: !0\n    }), Object.defineProperty(a.prototype, \"numOfDelayedAttempts\", {\n      get: function () {\n        return this.attempt;\n      },\n      enumerable: !0,\n      configurable: !0\n    }), a;\n  }();\npa.Delay = xh;\nvar Fh = H && H.__extends || /* @__PURE__ */function () {\n    var a = function (e, n) {\n      return a = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (t, o) {\n        t.__proto__ = o;\n      } || function (t, o) {\n        for (var i in o) o.hasOwnProperty(i) && (t[i] = o[i]);\n      }, a(e, n);\n    };\n    return function (e, n) {\n      a(e, n);\n      function t() {\n        this.constructor = e;\n      }\n      e.prototype = n === null ? Object.create(n) : (t.prototype = n.prototype, new t());\n    };\n  }(),\n  Jh = H && H.__awaiter || function (a, e, n, t) {\n    function o(i) {\n      return i instanceof n ? i : new n(function (r) {\n        r(i);\n      });\n    }\n    return new (n || (n = Promise))(function (i, r) {\n      function c(T) {\n        try {\n          d(t.next(T));\n        } catch (f) {\n          r(f);\n        }\n      }\n      function p(T) {\n        try {\n          d(t.throw(T));\n        } catch (f) {\n          r(f);\n        }\n      }\n      function d(T) {\n        T.done ? i(T.value) : o(T.value).then(c, p);\n      }\n      d((t = t.apply(a, e || [])).next());\n    });\n  },\n  zh = H && H.__generator || function (a, e) {\n    var n = {\n        label: 0,\n        sent: function () {\n          if (i[0] & 1) throw i[1];\n          return i[1];\n        },\n        trys: [],\n        ops: []\n      },\n      t,\n      o,\n      i,\n      r;\n    return r = {\n      next: c(0),\n      throw: c(1),\n      return: c(2)\n    }, typeof Symbol == \"function\" && (r[Symbol.iterator] = function () {\n      return this;\n    }), r;\n    function c(d) {\n      return function (T) {\n        return p([d, T]);\n      };\n    }\n    function p(d) {\n      if (t) throw new TypeError(\"Generator is already executing.\");\n      for (; n;) try {\n        if (t = 1, o && (i = d[0] & 2 ? o.return : d[0] ? o.throw || ((i = o.return) && i.call(o), 0) : o.next) && !(i = i.call(o, d[1])).done) return i;\n        switch (o = 0, i && (d = [d[0] & 2, i.value]), d[0]) {\n          case 0:\n          case 1:\n            i = d;\n            break;\n          case 4:\n            return n.label++, {\n              value: d[1],\n              done: !1\n            };\n          case 5:\n            n.label++, o = d[1], d = [0];\n            continue;\n          case 7:\n            d = n.ops.pop(), n.trys.pop();\n            continue;\n          default:\n            if (i = n.trys, !(i = i.length > 0 && i[i.length - 1]) && (d[0] === 6 || d[0] === 2)) {\n              n = 0;\n              continue;\n            }\n            if (d[0] === 3 && (!i || d[1] > i[0] && d[1] < i[3])) {\n              n.label = d[1];\n              break;\n            }\n            if (d[0] === 6 && n.label < i[1]) {\n              n.label = i[1], i = d;\n              break;\n            }\n            if (i && n.label < i[2]) {\n              n.label = i[2], n.ops.push(d);\n              break;\n            }\n            i[2] && n.ops.pop(), n.trys.pop();\n            continue;\n        }\n        d = e.call(a, n);\n      } catch (T) {\n        d = [6, T], o = 0;\n      } finally {\n        t = i = 0;\n      }\n      if (d[0] & 5) throw d[1];\n      return {\n        value: d[0] ? d[1] : void 0,\n        done: !0\n      };\n    }\n  };\nObject.defineProperty(ot, \"__esModule\", {\n  value: !0\n});\nvar Yh = pa,\n  $h = /** @class */\n  function (a) {\n    Fh(e, a);\n    function e() {\n      return a !== null && a.apply(this, arguments) || this;\n    }\n    return e.prototype.apply = function () {\n      return Jh(this, void 0, void 0, function () {\n        return zh(this, function (n) {\n          return [2, this.isFirstAttempt ? !0 : a.prototype.apply.call(this)];\n        });\n      });\n    }, Object.defineProperty(e.prototype, \"isFirstAttempt\", {\n      get: function () {\n        return this.attempt === 0;\n      },\n      enumerable: !0,\n      configurable: !0\n    }), Object.defineProperty(e.prototype, \"numOfDelayedAttempts\", {\n      get: function () {\n        return this.attempt - 1;\n      },\n      enumerable: !0,\n      configurable: !0\n    }), e;\n  }(Yh.Delay);\not.SkipFirstDelay = $h;\nvar ct = {},\n  Vh = H && H.__extends || /* @__PURE__ */function () {\n    var a = function (e, n) {\n      return a = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (t, o) {\n        t.__proto__ = o;\n      } || function (t, o) {\n        for (var i in o) o.hasOwnProperty(i) && (t[i] = o[i]);\n      }, a(e, n);\n    };\n    return function (e, n) {\n      a(e, n);\n      function t() {\n        this.constructor = e;\n      }\n      e.prototype = n === null ? Object.create(n) : (t.prototype = n.prototype, new t());\n    };\n  }();\nObject.defineProperty(ct, \"__esModule\", {\n  value: !0\n});\nvar Wh = pa,\n  jh = /** @class */\n  function (a) {\n    Vh(e, a);\n    function e() {\n      return a !== null && a.apply(this, arguments) || this;\n    }\n    return e;\n  }(Wh.Delay);\nct.AlwaysDelay = jh;\nObject.defineProperty(st, \"__esModule\", {\n  value: !0\n});\nvar Hh = ot,\n  Kh = ct;\nfunction Xh(a, e) {\n  var n = Qh(a);\n  return n.setAttemptNumber(e), n;\n}\nst.DelayFactory = Xh;\nfunction Qh(a) {\n  return a.delayFirstAttempt ? new Kh.AlwaysDelay(a) : new Hh.SkipFirstDelay(a);\n}\nvar Fa = H && H.__awaiter || function (a, e, n, t) {\n    function o(i) {\n      return i instanceof n ? i : new n(function (r) {\n        r(i);\n      });\n    }\n    return new (n || (n = Promise))(function (i, r) {\n      function c(T) {\n        try {\n          d(t.next(T));\n        } catch (f) {\n          r(f);\n        }\n      }\n      function p(T) {\n        try {\n          d(t.throw(T));\n        } catch (f) {\n          r(f);\n        }\n      }\n      function d(T) {\n        T.done ? i(T.value) : o(T.value).then(c, p);\n      }\n      d((t = t.apply(a, e || [])).next());\n    });\n  },\n  Ja = H && H.__generator || function (a, e) {\n    var n = {\n        label: 0,\n        sent: function () {\n          if (i[0] & 1) throw i[1];\n          return i[1];\n        },\n        trys: [],\n        ops: []\n      },\n      t,\n      o,\n      i,\n      r;\n    return r = {\n      next: c(0),\n      throw: c(1),\n      return: c(2)\n    }, typeof Symbol == \"function\" && (r[Symbol.iterator] = function () {\n      return this;\n    }), r;\n    function c(d) {\n      return function (T) {\n        return p([d, T]);\n      };\n    }\n    function p(d) {\n      if (t) throw new TypeError(\"Generator is already executing.\");\n      for (; n;) try {\n        if (t = 1, o && (i = d[0] & 2 ? o.return : d[0] ? o.throw || ((i = o.return) && i.call(o), 0) : o.next) && !(i = i.call(o, d[1])).done) return i;\n        switch (o = 0, i && (d = [d[0] & 2, i.value]), d[0]) {\n          case 0:\n          case 1:\n            i = d;\n            break;\n          case 4:\n            return n.label++, {\n              value: d[1],\n              done: !1\n            };\n          case 5:\n            n.label++, o = d[1], d = [0];\n            continue;\n          case 7:\n            d = n.ops.pop(), n.trys.pop();\n            continue;\n          default:\n            if (i = n.trys, !(i = i.length > 0 && i[i.length - 1]) && (d[0] === 6 || d[0] === 2)) {\n              n = 0;\n              continue;\n            }\n            if (d[0] === 3 && (!i || d[1] > i[0] && d[1] < i[3])) {\n              n.label = d[1];\n              break;\n            }\n            if (d[0] === 6 && n.label < i[1]) {\n              n.label = i[1], i = d;\n              break;\n            }\n            if (i && n.label < i[2]) {\n              n.label = i[2], n.ops.push(d);\n              break;\n            }\n            i[2] && n.ops.pop(), n.trys.pop();\n            continue;\n        }\n        d = e.call(a, n);\n      } catch (T) {\n        d = [6, T], o = 0;\n      } finally {\n        t = i = 0;\n      }\n      if (d[0] & 5) throw d[1];\n      return {\n        value: d[0] ? d[1] : void 0,\n        done: !0\n      };\n    }\n  };\nObject.defineProperty(ar, \"__esModule\", {\n  value: !0\n});\nvar Zh = tt,\n  ef = st;\nfunction nf(a, e) {\n  return e === void 0 && (e = {}), Fa(this, void 0, void 0, function () {\n    var n, t;\n    return Ja(this, function (o) {\n      switch (o.label) {\n        case 0:\n          return n = Zh.getSanitizedOptions(e), t = new af(a, n), [4, t.execute()];\n        case 1:\n          return [2, o.sent()];\n      }\n    });\n  });\n}\nvar za = ar.backOff = nf,\n  af = /** @class */\n  function () {\n    function a(e, n) {\n      this.request = e, this.options = n, this.attemptNumber = 0;\n    }\n    return a.prototype.execute = function () {\n      return Fa(this, void 0, void 0, function () {\n        var e, n;\n        return Ja(this, function (t) {\n          switch (t.label) {\n            case 0:\n              if (this.attemptLimitReached) return [3, 7];\n              t.label = 1;\n            case 1:\n              return t.trys.push([1, 4,, 6]), [4, this.applyDelay()];\n            case 2:\n              return t.sent(), [4, this.request()];\n            case 3:\n              return [2, t.sent()];\n            case 4:\n              return e = t.sent(), this.attemptNumber++, [4, this.options.retry(e, this.attemptNumber)];\n            case 5:\n              if (n = t.sent(), !n || this.attemptLimitReached) throw e;\n              return [3, 6];\n            case 6:\n              return [3, 0];\n            case 7:\n              throw new Error(\"Something went wrong.\");\n          }\n        });\n      });\n    }, Object.defineProperty(a.prototype, \"attemptLimitReached\", {\n      get: function () {\n        return this.attemptNumber >= this.options.numOfAttempts;\n      },\n      enumerable: !0,\n      configurable: !0\n    }), a.prototype.applyDelay = function () {\n      return Fa(this, void 0, void 0, function () {\n        var e;\n        return Ja(this, function (n) {\n          switch (n.label) {\n            case 0:\n              return e = ef.DelayFactory(this.options, this.attemptNumber), [4, e.apply()];\n            case 1:\n              return n.sent(), [2\n              /*return*/];\n          }\n        });\n      });\n    }, a;\n  }();\nconst tr = /* @__PURE__ */s.makeMessageType(\"proto.rpc.v1.Credentials\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"payload\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ya = /* @__PURE__ */s.makeMessageType(\"proto.rpc.v1.AuthenticateRequest\", () => [{\n    no: 1,\n    name: \"entity\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"credentials\",\n    kind: \"message\",\n    T: tr\n  }]),\n  tf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.v1.AuthenticateResponse\", () => [{\n    no: 1,\n    name: \"access_token\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  sf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.v1.AuthenticateToRequest\", () => [{\n    no: 1,\n    name: \"entity\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  of = /* @__PURE__ */s.makeMessageType(\"proto.rpc.v1.AuthenticateToResponse\", () => [{\n    no: 1,\n    name: \"access_token\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  rf = {\n    typeName: \"proto.rpc.v1.AuthService\",\n    methods: {\n      /**\n       * Authenticate attempts to authenticate the caller claiming to be\n       * the given entity. The resulting response contains an access token\n       * with the subject as the entity and the audience/issuer as the\n       * provider of this service. This token should be used for all future\n       * RPC requests.\n       *\n       * @generated from rpc proto.rpc.v1.AuthService.Authenticate\n       */\n      authenticate: {\n        name: \"Authenticate\",\n        I: Ya,\n        O: tf,\n        kind: m.Unary\n      }\n    }\n  },\n  mf = {\n    typeName: \"proto.rpc.v1.ExternalAuthService\",\n    methods: {\n      /**\n       * AuthenticateTo attempts to allow the caller to authenticate to another entity.\n       * The resulting response contains an access token with the subject\n       * as the calling entity, the audience as the other entity, and the issuer\n       * as the provider of this service. This token should be used for all\n       * future RPC requests to the other entity on the services it provides.\n       * This assumes that the caller is already authenticated to the\n       * server implementing this service.\n       *\n       * @generated from rpc proto.rpc.v1.ExternalAuthService.AuthenticateTo\n       */\n      authenticateTo: {\n        name: \"AuthenticateTo\",\n        I: sf,\n        O: of,\n        kind: m.Unary\n      }\n    }\n  },\n  sn = /* @__PURE__ */s.makeMessageType(\"google.rpc.Status\", () => [{\n    no: 1,\n    name: \"code\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 2,\n    name: \"message\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"details\",\n    kind: \"message\",\n    T: j,\n    repeated: !0\n  }]),\n  En = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.ICECandidate\", () => [{\n    no: 1,\n    name: \"candidate\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"sdp_mid\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"sdpm_line_index\",\n    kind: \"scalar\",\n    T: 13,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"username_fragment\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  sr = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.CallRequest\", () => [{\n    no: 1,\n    name: \"sdp\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"disable_trickle\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  cf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.CallResponseInitStage\", () => [{\n    no: 1,\n    name: \"sdp\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  lf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.CallResponseUpdateStage\", () => [{\n    no: 1,\n    name: \"candidate\",\n    kind: \"message\",\n    T: En\n  }]),\n  df = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.CallResponse\", () => [{\n    no: 1,\n    name: \"uuid\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"init\",\n    kind: \"message\",\n    T: cf,\n    oneof: \"stage\"\n  }, {\n    no: 3,\n    name: \"update\",\n    kind: \"message\",\n    T: lf,\n    oneof: \"stage\"\n  }]),\n  Fn = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.CallUpdateRequest\", () => [{\n    no: 1,\n    name: \"uuid\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"candidate\",\n    kind: \"message\",\n    T: En,\n    oneof: \"update\"\n  }, {\n    no: 3,\n    name: \"done\",\n    kind: \"scalar\",\n    T: 8,\n    oneof: \"update\"\n  }, {\n    no: 4,\n    name: \"error\",\n    kind: \"message\",\n    T: sn,\n    oneof: \"update\"\n  }]),\n  pf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.CallUpdateResponse\", []),\n  uf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.ICEServer\", () => [{\n    no: 1,\n    name: \"urls\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"username\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"credential\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  sa = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.WebRTCConfig\", () => [{\n    no: 1,\n    name: \"additional_ice_servers\",\n    kind: \"message\",\n    T: uf,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"disable_trickle\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  gf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerRequestInitStage\", () => [{\n    no: 1,\n    name: \"sdp\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"optional_config\",\n    kind: \"message\",\n    T: sa\n  }, {\n    no: 3,\n    name: \"deadline\",\n    kind: \"message\",\n    T: _,\n    opt: !0\n  }]),\n  Tf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerRequestUpdateStage\", () => [{\n    no: 1,\n    name: \"candidate\",\n    kind: \"message\",\n    T: En\n  }]),\n  kf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerRequestDoneStage\", []),\n  yf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerRequestErrorStage\", () => [{\n    no: 1,\n    name: \"status\",\n    kind: \"message\",\n    T: sn\n  }]),\n  vf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerRequestHeartbeatStage\", []),\n  hf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerRequest\", () => [{\n    no: 1,\n    name: \"uuid\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"init\",\n    kind: \"message\",\n    T: gf,\n    oneof: \"stage\"\n  }, {\n    no: 3,\n    name: \"update\",\n    kind: \"message\",\n    T: Tf,\n    oneof: \"stage\"\n  }, {\n    no: 4,\n    name: \"done\",\n    kind: \"message\",\n    T: kf,\n    oneof: \"stage\"\n  }, {\n    no: 5,\n    name: \"error\",\n    kind: \"message\",\n    T: yf,\n    oneof: \"stage\"\n  }, {\n    no: 6,\n    name: \"heartbeat\",\n    kind: \"message\",\n    T: vf,\n    oneof: \"stage\"\n  }]),\n  ff = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerResponseInitStage\", () => [{\n    no: 1,\n    name: \"sdp\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Rf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerResponseUpdateStage\", () => [{\n    no: 1,\n    name: \"candidate\",\n    kind: \"message\",\n    T: En\n  }]),\n  _f = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerResponseDoneStage\", []),\n  Sf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerResponseErrorStage\", () => [{\n    no: 1,\n    name: \"status\",\n    kind: \"message\",\n    T: sn\n  }]),\n  If = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.AnswerResponse\", () => [{\n    no: 1,\n    name: \"uuid\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"init\",\n    kind: \"message\",\n    T: ff,\n    oneof: \"stage\"\n  }, {\n    no: 3,\n    name: \"update\",\n    kind: \"message\",\n    T: Rf,\n    oneof: \"stage\"\n  }, {\n    no: 4,\n    name: \"done\",\n    kind: \"message\",\n    T: _f,\n    oneof: \"stage\"\n  }, {\n    no: 5,\n    name: \"error\",\n    kind: \"message\",\n    T: Sf,\n    oneof: \"stage\"\n  }]),\n  Mf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.OptionalWebRTCConfigRequest\", []),\n  bf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.OptionalWebRTCConfigResponse\", () => [{\n    no: 1,\n    name: \"config\",\n    kind: \"message\",\n    T: sa\n  }]),\n  or = {\n    typeName: \"proto.rpc.webrtc.v1.SignalingService\",\n    methods: {\n      /**\n       * Call makes an offer to a client that it expects an answer to. The host\n       * of the client in question should be identified in the rpc-host metadata\n       * field.\n       * Note: Based on how this is a server streaming responnse to the caller,\n       * we do not have a good way of knowing if the caller has disappeared.\n       * Depending on answerer timeouts and concurrency limits, this can result in\n       * hangs on the answerer waiting for a connection to establish, which in turn\n       * can result in the caller waiting for an answerer to be listening.\n       *\n       * @generated from rpc proto.rpc.webrtc.v1.SignalingService.Call\n       */\n      call: {\n        name: \"Call\",\n        I: sr,\n        O: df,\n        kind: m.ServerStreaming\n      },\n      /**\n       * CallUpdate is used to send additional info in relation to a Call.\n       * The host of the client for the call in question should be identified\n       * in the rpc-host metadata field.\n       * In a world where https://github.com/grpc/grpc-web/issues/24 is fixed,\n       * this should be removed in favor of a bidirectional stream on Call.\n       *\n       * @generated from rpc proto.rpc.webrtc.v1.SignalingService.CallUpdate\n       */\n      callUpdate: {\n        name: \"CallUpdate\",\n        I: Fn,\n        O: pf,\n        kind: m.Unary\n      },\n      /**\n       * Answer sets up an answering service where the caller answers call offers\n       * and responds with answers.\n       * The host(s) to answer for should be in the rpc-host metadata field.\n       *\n       * @generated from rpc proto.rpc.webrtc.v1.SignalingService.Answer\n       */\n      answer: {\n        name: \"Answer\",\n        I: If,\n        O: hf,\n        kind: m.BiDiStreaming\n      },\n      /**\n       * OptionalWebRTCConfig returns any WebRTC configuration the caller may want to use.\n       * The host to get a config for must be in the rpc-host metadata field.\n       *\n       * @generated from rpc proto.rpc.webrtc.v1.SignalingService.OptionalWebRTCConfig\n       */\n      optionalWebRTCConfig: {\n        name: \"OptionalWebRTCConfig\",\n        I: Mf,\n        O: bf,\n        kind: m.Unary\n      }\n    }\n  },\n  ir = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n  $a = (a = \"\") => {\n    const e = a;\n    let n = \"\";\n    for (let t = 0, o, i = 0, r = ir; e.charAt(Math.trunc(i)) || (r = \"=\", i % 1); n += r.charAt(63 & t >> 8 - i % 1 * 8)) {\n      if (o = e.charCodeAt(i += 3 / 4), o > 255) throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      t = t << 8 | o;\n    }\n    return n;\n  },\n  rr = (a = \"\") => {\n    const e = a.replace(/=+$/, \"\");\n    let n = \"\";\n    if (e.length % 4 === 1) throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    for (let t = 0, o = 0, i, r = 0; i = e.charAt(r++);\n    // eslint-disable-line no-cond-assign\n    ~i && (o = t % 4 ? o * 64 + i : i, t++ % 4) ? n += String.fromCharCode(255 & o >> (-2 * t & 6)) : 0) i = ir.indexOf(i);\n    return n;\n  },\n  Va = (a, e) => {\n    const n = {\n      sdp: a?.sdp,\n      type: a?.type\n    };\n    if (e) for (const [t, o] of Object.entries(e)) n.sdp = [n.sdp, `a=${t}:${o}\\r\n`].join(\"\");\n    return n;\n  },\n  wf = async (a, e, n) => {\n    const t = e ?? {\n        iceServers: [{\n          urls: \"stun:global.stun.twilio.com:3478\"\n        }]\n      },\n      o = new RTCPeerConnection(t);\n    let i;\n    const r = new Promise(f => {\n        i = f;\n      }),\n      c = o.createDataChannel(\"data\", {\n        id: 0,\n        negotiated: !0,\n        ordered: !0\n      });\n    c.binaryType = \"arraybuffer\";\n    const p = o.createDataChannel(\"negotiation\", {\n      id: 1,\n      negotiated: !0,\n      ordered: !0\n    });\n    p.binaryType = \"arraybuffer\";\n    let d = !1;\n    if (p.addEventListener(\"open\", () => {\n      d = !0;\n    }), p.addEventListener(\"message\", f => {\n      (async () => {\n        const S = new RTCSessionDescription(JSON.parse(rr(f.data)));\n        if (await o.setRemoteDescription(S), S.type === \"offer\") {\n          await o.setLocalDescription();\n          const R = Va(o.localDescription, n);\n          p.send($a(JSON.stringify(R)));\n        }\n      })().catch(console.error);\n    }), o.addEventListener(\"negotiationneeded\", () => {\n      (async () => {\n        if (!d) return;\n        await o.setLocalDescription();\n        const f = Va(o.localDescription, n);\n        p.send($a(JSON.stringify(f)));\n      })().catch(console.error);\n    }), !a) return {\n      pc: o,\n      dc: c\n    };\n    const T = await o.createOffer({});\n    return await o.setLocalDescription(T), o.addEventListener(\"icecandidate\", f => {\n      f.candidate === null && i({\n        pc: o,\n        dc: c\n      });\n    }), r;\n  };\nfunction Ef() {\n  try {\n    new Headers();\n  } catch {\n    throw new Error(\"connect-web requires the fetch API. Are you running on an old version of Node.js? Node.js is not supported in Connect for Web - please stay tuned for Connect for Node.\");\n  }\n}\nfunction Ti(a, e) {\n  const n = Ki(a);\n  if (n) throw e.forEach((t, o) => {\n    n.metadata.append(o, t);\n  }), n;\n  if (!e.has(tn) && !a.has(tn)) throw new C(\"protocol error: missing status\", E.Internal);\n}\nfunction ki(a, e, n, t) {\n  const o = new Headers(n ?? {});\n  return o.set(_h, a ? wh : Eh), o.set(bh, \"1\"), o.set(Mh, \"connect-es/1.6.1\"), e !== void 0 && o.set(Sh, `${e}m`), o;\n}\nfunction Of(a) {\n  switch (a) {\n    case 400:\n      return E.Internal;\n    case 401:\n      return E.Unauthenticated;\n    case 403:\n      return E.PermissionDenied;\n    case 404:\n      return E.Unimplemented;\n    case 429:\n      return E.Unavailable;\n    case 502:\n      return E.Unavailable;\n    case 503:\n      return E.Unavailable;\n    case 504:\n      return E.Unavailable;\n    default:\n      return E.Unknown;\n  }\n}\nfunction yi(a, e) {\n  var n;\n  if (a >= 200 && a < 300) return {\n    foundStatus: e.has(tn),\n    headerError: Ki(e)\n  };\n  throw new C(decodeURIComponent((n = e.get(Hi)) !== null && n !== void 0 ? n : `HTTP ${a}`), Of(a), e);\n}\nvar Ve = function (a) {\n    return this instanceof Ve ? (this.v = a, this) : new Ve(a);\n  },\n  Cf = function (a, e, n) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var t = n.apply(a, e || []),\n      o,\n      i = [];\n    return o = {}, c(\"next\"), c(\"throw\"), c(\"return\", r), o[Symbol.asyncIterator] = function () {\n      return this;\n    }, o;\n    function r(R) {\n      return function (I) {\n        return Promise.resolve(I).then(R, f);\n      };\n    }\n    function c(R, I) {\n      t[R] && (o[R] = function (O) {\n        return new Promise(function (N, z) {\n          i.push([R, O, N, z]) > 1 || p(R, O);\n        });\n      }, I && (o[R] = I(o[R])));\n    }\n    function p(R, I) {\n      try {\n        d(t[R](I));\n      } catch (O) {\n        S(i[0][3], O);\n      }\n    }\n    function d(R) {\n      R.value instanceof Ve ? Promise.resolve(R.value.v).then(T, f) : S(i[0][2], R);\n    }\n    function T(R) {\n      p(\"next\", R);\n    }\n    function f(R) {\n      p(\"throw\", R);\n    }\n    function S(R, I) {\n      R(I), i.shift(), i.length && p(i[0][0], i[0][1]);\n    }\n  };\nfunction Nf(a) {\n  var e;\n  Ef();\n  const n = (e = a.useBinaryFormat) !== null && e !== void 0 ? e : !0;\n  return {\n    async unary(t, o, i, r, c, p, d) {\n      var T;\n      const {\n        serialize: f,\n        parse: S\n      } = xa(o, n, a.jsonOptions, a.binaryOptions);\n      return r = r === void 0 ? a.defaultTimeoutMs : r <= 0 ? void 0 : r, await Zi({\n        interceptors: a.interceptors,\n        signal: i,\n        timeoutMs: r,\n        req: {\n          stream: !1,\n          service: t,\n          method: o,\n          url: pi(a.baseUrl, t, o),\n          init: {\n            method: \"POST\",\n            credentials: (T = a.credentials) !== null && T !== void 0 ? T : \"same-origin\",\n            redirect: \"error\",\n            mode: \"cors\"\n          },\n          header: ki(n, r, c),\n          contextValues: d ?? aa(),\n          message: p\n        },\n        next: async R => {\n          var I;\n          const N = await ((I = a.fetch) !== null && I !== void 0 ? I : globalThis.fetch)(R.url, Object.assign(Object.assign({}, R.init), {\n              headers: R.header,\n              signal: R.signal,\n              body: li(0, f(R.message))\n            })),\n            {\n              headerError: z\n            } = yi(N.status, N.headers);\n          if (!N.body) throw z !== void 0 ? z : \"missing response body\";\n          const k = ci(N.body).getReader();\n          let v, g;\n          for (;;) {\n            const y = await k.read();\n            if (y.done) break;\n            const {\n              flags: b,\n              data: M\n            } = y.value;\n            if ((b & mi) === mi) throw new C(\"protocol error: received unsupported compressed output\", E.Internal);\n            if (b === Da) {\n              if (v !== void 0) throw \"extra trailer\";\n              v = di(M);\n              continue;\n            }\n            if (g !== void 0) throw new C(\"extra message\", E.Unimplemented);\n            g = S(M);\n          }\n          if (v === void 0) throw z !== void 0 ? z : new C(\"missing trailer\", N.headers.has(tn) ? E.Unimplemented : E.Unknown);\n          if (Ti(v, N.headers), g === void 0) throw new C(\"missing message\", v.has(tn) ? E.Unimplemented : E.Unknown);\n          return {\n            stream: !1,\n            service: t,\n            method: o,\n            header: N.headers,\n            message: g,\n            trailer: v\n          };\n        }\n      });\n    },\n    async stream(t, o, i, r, c, p, d) {\n      var T;\n      const {\n        serialize: f,\n        parse: S\n      } = xa(o, n, a.jsonOptions, a.binaryOptions);\n      function R(O, N, z, k, v) {\n        return Cf(this, arguments, function* () {\n          const y = ci(O).getReader();\n          if (N) {\n            if (!(yield Ve(y.read())).done) throw \"extra data for trailers-only\";\n            return yield Ve(void 0);\n          }\n          let b = !1;\n          for (;;) {\n            const M = yield Ve(y.read());\n            if (M.done) break;\n            const {\n              flags: Z,\n              data: A\n            } = M.value;\n            if ((Z & Da) === Da) {\n              if (b) throw \"extra trailer\";\n              b = !0;\n              const Y = di(A);\n              Ti(Y, k), Y.forEach((Oa, Ca) => z.set(Ca, Oa));\n              continue;\n            }\n            if (b) throw \"extra message\";\n            yield yield Ve(S(A));\n          }\n          if (\"throwIfAborted\" in v && v.throwIfAborted(), !b) throw \"missing trailer\";\n        });\n      }\n      async function I(O) {\n        if (o.kind != m.ServerStreaming) throw \"The fetch API does not support streaming request bodies\";\n        const N = await O[Symbol.asyncIterator]().next();\n        if (N.done == !0) throw \"missing request message\";\n        return li(0, f(N.value));\n      }\n      return r = r === void 0 ? a.defaultTimeoutMs : r <= 0 ? void 0 : r, er({\n        interceptors: a.interceptors,\n        signal: i,\n        timeoutMs: r,\n        req: {\n          stream: !0,\n          service: t,\n          method: o,\n          url: pi(a.baseUrl, t, o),\n          init: {\n            method: \"POST\",\n            credentials: (T = a.credentials) !== null && T !== void 0 ? T : \"same-origin\",\n            redirect: \"error\",\n            mode: \"cors\"\n          },\n          header: ki(n, r, c),\n          contextValues: d ?? aa(),\n          message: p\n        },\n        next: async O => {\n          var N;\n          const k = await ((N = a.fetch) !== null && N !== void 0 ? N : globalThis.fetch)(O.url, Object.assign(Object.assign({}, O.init), {\n              headers: O.header,\n              signal: O.signal,\n              body: await I(O.message)\n            })),\n            {\n              foundStatus: v,\n              headerError: g\n            } = yi(k.status, k.headers);\n          if (g != null) throw g;\n          if (!k.body) throw \"missing response body\";\n          const y = new Headers();\n          return Object.assign(Object.assign({}, O), {\n            header: k.headers,\n            trailer: y,\n            message: R(k.body, v, y, k.headers, O.signal)\n          });\n        }\n      });\n    }\n  };\n}\nconst oa = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.PacketMessage\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }, {\n    no: 2,\n    name: \"eom\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  lt = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.Stream\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  qa = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.Request\", () => [{\n    no: 1,\n    name: \"stream\",\n    kind: \"message\",\n    T: lt\n  }, {\n    no: 2,\n    name: \"headers\",\n    kind: \"message\",\n    T: mr,\n    oneof: \"type\"\n  }, {\n    no: 3,\n    name: \"message\",\n    kind: \"message\",\n    T: Wa,\n    oneof: \"type\"\n  }, {\n    no: 4,\n    name: \"rst_stream\",\n    kind: \"scalar\",\n    T: 8,\n    oneof: \"type\"\n  }]),\n  mr = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.RequestHeaders\", () => [{\n    no: 1,\n    name: \"method\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"metadata\",\n    kind: \"message\",\n    T: ua\n  }, {\n    no: 3,\n    name: \"timeout\",\n    kind: \"message\",\n    T: F\n  }]),\n  Wa = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.RequestMessage\", () => [{\n    no: 1,\n    name: \"has_message\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 2,\n    name: \"packet_message\",\n    kind: \"message\",\n    T: oa\n  }, {\n    no: 3,\n    name: \"eos\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Pf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.Response\", () => [{\n    no: 1,\n    name: \"stream\",\n    kind: \"message\",\n    T: lt\n  }, {\n    no: 2,\n    name: \"headers\",\n    kind: \"message\",\n    T: Af,\n    oneof: \"type\"\n  }, {\n    no: 3,\n    name: \"message\",\n    kind: \"message\",\n    T: Df,\n    oneof: \"type\"\n  }, {\n    no: 4,\n    name: \"trailers\",\n    kind: \"message\",\n    T: qf,\n    oneof: \"type\"\n  }]),\n  Af = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.ResponseHeaders\", () => [{\n    no: 1,\n    name: \"metadata\",\n    kind: \"message\",\n    T: ua\n  }]),\n  Df = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.ResponseMessage\", () => [{\n    no: 1,\n    name: \"packet_message\",\n    kind: \"message\",\n    T: oa\n  }]),\n  qf = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.ResponseTrailers\", () => [{\n    no: 1,\n    name: \"status\",\n    kind: \"message\",\n    T: sn\n  }, {\n    no: 2,\n    name: \"metadata\",\n    kind: \"message\",\n    T: ua\n  }]),\n  cr = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.Strings\", () => [{\n    no: 1,\n    name: \"values\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  ua = /* @__PURE__ */s.makeMessageType(\"proto.rpc.webrtc.v1.Metadata\", () => [{\n    no: 1,\n    name: \"md\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"message\",\n      T: cr\n    }\n  }]);\nclass De extends Error {\n  name = \"ConnectionClosedError\";\n  constructor(e) {\n    super(e), Object.setPrototypeOf(this, De.prototype);\n  }\n  static isError(e) {\n    return e instanceof De || e instanceof C && e.rawMessage === \"closed\" ? !0 : typeof e == \"string\" ? e === \"Response closed without headers\" : e instanceof Error ? e.message === \"Response closed without headers\" : !1;\n  }\n}\nclass Uf {\n  ready;\n  peerConn;\n  dataChannel;\n  pResolve;\n  pReject;\n  closed = !1;\n  closedReason;\n  maxDataChannelSize = 65535;\n  constructor(e, n) {\n    this.peerConn = e, this.dataChannel = n, this.ready = new Promise((t, o) => {\n      this.pResolve = t, this.pReject = o;\n    }), n.addEventListener(\"open\", () => this.onChannelOpen()), n.addEventListener(\"close\", () => this.onChannelClose()), n.addEventListener(\"error\", t => {\n      this.onChannelError(t);\n    }), e.addEventListener(\"iceconnectionstatechange\", () => {\n      const t = e.iceConnectionState;\n      (t === \"failed\" || t === \"disconnected\" || t === \"closed\") && this.pReject?.(new Error(`ICE connection failed with state: ${t}`));\n    });\n  }\n  isClosed() {\n    return this.closed;\n  }\n  isClosedReason() {\n    return this.closedReason;\n  }\n  closeWithReason(e) {\n    this.closed || (this.closed = !0, this.closedReason = e, this.pReject?.(e), this.peerConn.close());\n  }\n  onChannelOpen() {\n    this.pResolve?.(void 0);\n  }\n  onChannelClose() {\n    this.closeWithReason(new De(\"data channel closed\"));\n  }\n  onChannelError(e) {\n    console.error(\"channel error\", e), this.closeWithReason(new Error(JSON.stringify(e)));\n  }\n  write(e) {\n    this.dataChannel.send(e.toBinary());\n  }\n}\nconst vi = 33554432;\nclass Gf {\n  grpcStream;\n  onDone;\n  closed = !1;\n  packetBuf = [];\n  packetBufSize = 0;\n  constructor(e, n) {\n    this.grpcStream = e, this.onDone = n;\n  }\n  closeWithRecvError() {\n    this.closed || (this.closed = !0, this.onDone(this.grpcStream.id));\n  }\n  processPacketMessage(e) {\n    const {\n      data: n\n    } = e;\n    if (n.length + this.packetBufSize > vi) {\n      this.packetBuf.length = 0, this.packetBufSize = 0, console.error(`message size larger than max ${vi}; discarding`);\n      return;\n    }\n    if (this.packetBuf.push(n), this.packetBufSize += n.length, e.eom) {\n      const t = new Uint8Array(this.packetBufSize);\n      let o = 0;\n      for (const i of this.packetBuf) t.set(i, o), o += i.length;\n      return this.packetBuf.length = 0, this.packetBufSize = 0, t;\n    }\n  }\n}\nconst Lf = 16373;\nclass lr extends Gf {\n  channel;\n  service;\n  method;\n  parseMessage;\n  requestHeaders;\n  headersReceived = !1;\n  trailersReceived = !1;\n  constructor(e, n, t, o, i, r) {\n    super(n, t), this.channel = e, this.service = o, this.method = i;\n    const {\n      parse: c\n    } = xa(i, !0, void 0, void 0);\n    this.parseMessage = c;\n    const p = `/${o.typeName}/${i.name}`;\n    this.requestHeaders = new mr({\n      method: p\n    });\n    const d = Bf(Mn(r));\n    d && (this.requestHeaders.metadata = d);\n  }\n  startRequest(e) {\n    e && e.addEventListener(\"abort\", () => {\n      this.resetStream();\n    });\n    try {\n      this.channel.writeHeaders(this.grpcStream, this.requestHeaders);\n    } catch (n) {\n      console.error(\"error writing headers\", n), this.closeWithRecvError();\n    }\n  }\n  sendMessage(e) {\n    if (e) {\n      this.writeMessage(!1, e);\n      return;\n    }\n    this.writeMessage(!1, void 0);\n  }\n  resetStream() {\n    if (!this.closed) try {\n      this.channel.writeReset(this.grpcStream);\n    } catch (e) {\n      console.error(\"error writing reset\", e), this.closeWithRecvError();\n    }\n  }\n  writeMessage(e, n) {\n    try {\n      if (!n || n.length === 0) {\n        const o = new oa({\n            eom: !0\n          }),\n          i = new Wa({\n            hasMessage: !!n,\n            packetMessage: o,\n            eos: e\n          });\n        this.channel.writeMessage(this.grpcStream, i);\n        return;\n      }\n      let t = n;\n      for (; t.length > 0;) {\n        const o = Math.min(t.length, Lf),\n          i = new oa();\n        i.data = t.slice(0, o), t = t.slice(o), t.length === 0 && (i.eom = !0);\n        const r = new Wa({\n          hasMessage: !!t,\n          packetMessage: i,\n          eos: e\n        });\n        this.channel.writeMessage(this.grpcStream, r);\n      }\n    } catch (t) {\n      console.error(\"error writing message\", t), this.closeWithRecvError();\n    }\n  }\n  onResponse(e) {\n    switch (e.type.case) {\n      case \"headers\":\n        {\n          if (this.headersReceived) {\n            console.error(`invariant: headers already received for ${this.grpcStream.id}`);\n            return;\n          }\n          if (this.trailersReceived) {\n            console.error(`invariant: headers received after trailers for ${this.grpcStream.id}`);\n            return;\n          }\n          this.processHeaders(e.type.value);\n          break;\n        }\n      case \"message\":\n        {\n          if (!this.headersReceived) {\n            console.error(`invariant: headers not yet received for ${this.grpcStream.id}`);\n            return;\n          }\n          if (this.trailersReceived) {\n            console.error(`invariant: headers received after trailers for ${this.grpcStream.id}`);\n            return;\n          }\n          this.processMessage(e.type.value);\n          break;\n        }\n      case \"trailers\":\n        {\n          this.processTrailers(e.type.value);\n          break;\n        }\n      default:\n        {\n          console.error(\"unknown response type\", e.type.case);\n          break;\n        }\n    }\n  }\n  processHeaders(e) {\n    this.headersReceived = !0, this.onHeaders(e);\n  }\n  processMessage(e) {\n    if (!e.packetMessage) return;\n    const n = super.processPacketMessage(e.packetMessage);\n    n && this.onMessage(n);\n  }\n  processTrailers(e) {\n    this.trailersReceived = !0;\n    const {\n        status: n\n      } = e,\n      t = n ? n.code : 0;\n    if (this.onTrailers(e), t === 0) {\n      this.closeWithRecvError();\n      return;\n    }\n    this.closeWithRecvError();\n  }\n}\nconst Bf = a => {\n    if (!a) return;\n    const e = new ua({\n      md: Object.fromEntries([...a.entries()].map(([n, t]) => [n, new cr({\n        values: [t]\n      })]))\n    });\n    return Object.keys(e.md).length > 0 ? e : void 0;\n  },\n  ja = a => {\n    const e = Object.entries(a?.md ?? {}).flatMap(([n, {\n      values: t\n    }]) => t.map(o => [n, o]));\n    return new Headers(e);\n  };\nclass xf extends lr {\n  awaitingHeadersResult;\n  gotHeaders = !1;\n  // trailers will be written to later\n  respStream = uh();\n  trailers = new Headers();\n  respStreamQueue;\n  async run(e, n, t, o) {\n    const r = {\n      req: {\n        stream: !0,\n        url: \"\",\n        init: {},\n        service: this.service,\n        method: this.method,\n        header: new Headers(),\n        contextValues: o ?? aa(),\n        message: t\n      },\n      /**\n       * Next is what actually kicks off the request. The run call below will\n       * ultimately call this for us.\n       */\n      next: async c => {\n        const d = await new Promise((T, f) => {\n          this.awaitingHeadersResult = {\n            success: T,\n            failure: f\n          }, this.startRequest(), this.sendMessages(c.message).catch(S => {\n            console.error(\"error sending streaming message\", S), this.closeWithRecvError();\n          });\n        });\n        return {\n          ...c,\n          header: d,\n          trailer: this.trailers,\n          message: this.respStream\n        };\n      }\n    };\n    return e && (r.signal = e), n !== void 0 && (r.timeoutMs = n), er(r);\n  }\n  async sendMessages(e) {\n    for await (const n of e) this.sendMessage(n.toBinary());\n    this.writeMessage(!0, void 0);\n  }\n  onHeaders(e) {\n    this.gotHeaders = !0, this.awaitingHeadersResult?.success(ja(e.metadata));\n  }\n  onTrailers(e) {\n    if (e.metadata?.md) {\n      for (const n in e.metadata.md) if (Object.hasOwn(e.metadata.md, n)) {\n        const t = e.metadata.md[n];\n        for (const o of t?.values ?? []) this.trailers.append(n, o);\n      }\n    }\n    if (this.respStream.close(), !e.status || e.status.code === 0) {\n      if (this.gotHeaders) return;\n      this.awaitingHeadersResult?.success(new Headers());\n      return;\n    }\n    this.gotHeaders || this.awaitingHeadersResult?.failure(e.status.message);\n  }\n  onMessage(e) {\n    const n = this.parseMessage(e);\n    this.respStreamQueue = this.respStreamQueue ? this.respStreamQueue.then(async () => this.respStream.write(n)) : this.respStream.write(n), this.respStreamQueue.catch(t => {\n      console.error(`error pushing received message into stream; failing: ${t}`), this.resetStream();\n    });\n  }\n}\nclass Ff extends lr {\n  result;\n  headers;\n  message;\n  async run(e, n, t, o) {\n    const r = {\n      req: {\n        stream: !1,\n        url: \"\",\n        init: {},\n        service: this.service,\n        method: this.method,\n        header: new Headers(),\n        contextValues: o ?? aa(),\n        message: t\n      },\n      /**\n       * Next is what actually kicks off the request. The run call below will\n       * ultimately call this for us.\n       */\n      next: async c => new Promise((p, d) => {\n        this.result = {\n          success: p,\n          failure: d\n        }, this.startRequest(), this.sendMessage(c.message.toBinary());\n      })\n    };\n    return e && (r.signal = e), n !== void 0 && (r.timeoutMs = n), Zi(r);\n  }\n  onHeaders(e) {\n    if (this.headers !== void 0) {\n      this.result?.failure(new Error(\"invariant: received headers more than once\"));\n      return;\n    }\n    this.headers = ja(e.metadata);\n  }\n  onTrailers(e) {\n    const n = ja(e.metadata);\n    if (!e.status || e.status.code === 0) {\n      if (!this.headers) {\n        this.result?.failure(new Error(\"invariant: received trailers for successful unary request without headers\"));\n        return;\n      }\n      if (this.message === void 0) {\n        this.result?.failure(new Error(\"invariant: received trailers for successful unary request without message\"));\n        return;\n      }\n      this.result?.success({\n        stream: !1,\n        header: this.headers,\n        message: this.message,\n        trailer: n,\n        service: this.service,\n        method: this.method\n      });\n      return;\n    }\n    this.result?.failure(e.status.message);\n  }\n  onMessage(e) {\n    if (this.message !== void 0) {\n      this.result?.failure(new Error(\"invariant: received two response messages for unary request\"));\n      return;\n    }\n    this.message = this.parseMessage(e);\n  }\n}\nconst Jf = 256;\nclass zf extends Uf {\n  streamIDCounter = 0;\n  streams = /* @__PURE__ */new Map();\n  constructor(e, n) {\n    super(e, n), n.addEventListener(\"message\", t => {\n      this.onChannelMessage(t);\n    }), e.addEventListener(\"iceconnectionstatechange\", () => {\n      const t = e.iceConnectionState;\n      (t === \"failed\" || t === \"disconnected\" || t === \"closed\") && this.onConnectionTerminated();\n    }), n.addEventListener(\"close\", () => this.onConnectionTerminated());\n  }\n  onConnectionTerminated() {\n    this.closeWithReason(new De(\"data channel closed\"));\n    for (const e of this.streams.values()) e.cs.closeWithRecvError();\n  }\n  onChannelMessage(e) {\n    const n = Pf.fromBinary(new Uint8Array(e.data)),\n      {\n        stream: t\n      } = n;\n    if (t === void 0) {\n      console.error(\"no stream id; discarding\");\n      return;\n    }\n    const {\n        id: o\n      } = t,\n      i = this.streams.get(o.toString());\n    if (i === void 0) {\n      console.error(\"no stream for id; discarding\", \"id\", o);\n      return;\n    }\n    i.cs.onResponse(n);\n  }\n  nextStreamID() {\n    const e = this.streamIDCounter;\n    return this.streamIDCounter += 1, new lt({\n      id: BigInt(e)\n    });\n  }\n  newStream(e, n, t, o, i) {\n    if (this.isClosed()) throw new De(\"connection closed\");\n    let r = this.streams.get(n.id.toString());\n    if (r !== void 0) throw new Error(\"invariant: stream should not exist yet\");\n    if (Object.keys(this.streams).length > Jf) throw new Error(\"stream limit hit\");\n    const c = new e(this, n, p => this.removeStreamByID(p), t, o, i);\n    return r = {\n      cs: c\n    }, this.streams.set(n.id.toString(), r), c;\n  }\n  removeStreamByID(e) {\n    this.streams.delete(e.toString());\n  }\n  writeHeaders(e, n) {\n    this.write(new qa({\n      stream: e,\n      type: {\n        case: \"headers\",\n        value: n\n      }\n    }));\n  }\n  writeMessage(e, n) {\n    this.write(new qa({\n      stream: e,\n      type: {\n        case: \"message\",\n        value: n\n      }\n    }));\n  }\n  writeReset(e) {\n    this.write(new qa({\n      stream: e,\n      type: {\n        case: \"rstStream\",\n        value: !0\n      }\n    }));\n  }\n  async unary(e, n, t, o, i, r, c) {\n    return this.newStream(Ff, this.nextStreamID(), e, n, i).run(t, o, r, c);\n  }\n  async stream(e, n, t, o, i, r, c) {\n    return this.newStream(xf, this.nextStreamID(), e, n, i).run(t, o, r, c);\n  }\n}\nconst Ua = \"invariant: call uuid unset\";\nclass Yf {\n  constructor(e, n, t, o, i) {\n    this.signalingClient = e, this.callOpts = n, this.pc = t, this.dc = o, this.dialOpts = i, this.clientChannel = new zf(this.pc, this.dc);\n  }\n  clientChannel;\n  callUuid;\n  // only send once since exchange may end or ICE may end\n  sentDoneOrErrorOnce = !1;\n  exchangeDone = !1;\n  iceComplete = !1;\n  haveInitResponse = !1;\n  awaitingRemoteDescription;\n  remoteDescriptionSet;\n  // stats\n  numCallUpdates = 0;\n  maxCallUpdateDuration = 0;\n  totalCallUpdateDuration = 0;\n  async doExchange() {\n    await this.setup();\n    const e = Va(this.pc.localDescription, this.dialOpts?.additionalSdpFields),\n      n = $a(JSON.stringify(e)),\n      t = new sr({\n        sdp: n\n      });\n    this.dialOpts && this.dialOpts.disableTrickleICE && (t.disableTrickle = this.dialOpts.disableTrickleICE), this.clientChannel.ready.then(() => {\n      this.exchangeDone = !0;\n    }).catch(console.error);\n    const o = this.signalingClient.call(t, this.callOpts),\n      i = this.processCallResponses(o);\n    return await Promise.all([this.clientChannel.ready, i]), this.clientChannel;\n  }\n  async setup() {\n    if (this.remoteDescriptionSet = new Promise((e, n) => {\n      this.awaitingRemoteDescription = {\n        success: e,\n        failure: n\n      };\n    }), !this.dialOpts?.disableTrickleICE) {\n      const e = await this.pc.createOffer({});\n      this.pc.addEventListener(\"iceconnectionstatechange\", () => {\n        if (this.pc.iceConnectionState !== \"completed\" || this.numCallUpdates === 0) return;\n        const n = this.totalCallUpdateDuration / this.numCallUpdates;\n        console.groupCollapsed(\"Caller update statistics\"), console.table({\n          num_updates: this.numCallUpdates,\n          average_duration: `${n}ms`,\n          max_duration: `${this.maxCallUpdateDuration}ms`\n        }), console.groupEnd();\n      }), this.pc.addEventListener(\"icecandidate\", n => {\n        this.onLocalICECandidate(n).catch(t => {\n          console.error(`error processing local ICE candidate ${t}`);\n        });\n      }), await this.pc.setLocalDescription(e);\n    }\n  }\n  terminate(e) {\n    this.clientChannel.closeWithReason(e);\n  }\n  async processCallResponses(e) {\n    try {\n      for await (const n of e) switch (n.stage.case) {\n        case \"init\":\n          {\n            if (!(await this.handleInitResponse(n.uuid, n.stage.value))) return;\n            break;\n          }\n        case \"update\":\n          {\n            if (!(await this.handleUpdateResponse(n.uuid, n.stage.value))) return;\n            break;\n          }\n        default:\n          {\n            await this.sendError(\"unknown CallResponse stage\");\n            return;\n          }\n      }\n    } catch (n) {\n      this.handleInitError(n);\n    }\n  }\n  handleInitError(e) {\n    if (!(this.exchangeDone || this.pc.iceConnectionState === \"connected\")) {\n      if (e instanceof C && e.code === E.Unimplemented) {\n        if (e.message === \"Response closed without headers\") throw new De(\"failed to dial\");\n        if (this.clientChannel.isClosed()) throw new De(\"client channel is closed\");\n        console.error(e.message);\n      }\n      throw e;\n    }\n  }\n  async handleInitResponse(e, n) {\n    if (this.haveInitResponse) return await this.sendError(\"got init stage more than once\"), !1;\n    this.haveInitResponse = !0, this.callUuid = e;\n    const t = new RTCSessionDescription(JSON.parse(rr(n.sdp)));\n    return this.clientChannel.isClosed() ? (await this.sendError(\"client channel is closed\"), !1) : (await this.pc.setRemoteDescription(t), this.awaitingRemoteDescription?.success(!0), this.dialOpts?.disableTrickleICE ? (this.exchangeDone = !0, await this.sendDone(), !1) : !0);\n  }\n  async handleUpdateResponse(e, n) {\n    if (!this.haveInitResponse) return await this.sendError(\"got update stage before init stage\"), !1;\n    if (e !== this.callUuid) return await this.sendError(`uuid mismatch; have=${e} want=${this.callUuid}`), !1;\n    if (n.candidate === void 0) return await this.sendError(\"no candidate\"), !1;\n    const t = $f(n.candidate);\n    t.candidate !== void 0 && console.debug(`received remote ICE ${t.candidate}`);\n    try {\n      await this.pc.addIceCandidate(t);\n    } catch (o) {\n      throw console.log(\"error adding ice candidate\", o), await this.sendError(JSON.stringify(o)), o;\n    }\n    return !0;\n  }\n  async onLocalICECandidate(e) {\n    if (await this.remoteDescriptionSet, this.exchangeDone || this.pc.iceConnectionState === \"connected\") return;\n    if (e.candidate === null) {\n      this.iceComplete = !0, await this.sendDone();\n      return;\n    }\n    if (this.callUuid === void 0 || this.callUuid === \"\") throw new Error(Ua);\n    e.candidate.candidate !== void 0 && console.debug(`gathered local ICE ${e.candidate.candidate}`);\n    const n = Vf(e.candidate),\n      t = new Fn({\n        uuid: this.callUuid,\n        update: {\n          case: \"candidate\",\n          value: n\n        }\n      }),\n      o = /* @__PURE__ */new Date();\n    try {\n      await this.signalingClient.callUpdate(t, this.callOpts), this.numCallUpdates += 1;\n      const r = (/* @__PURE__ */new Date()).getTime() - o.getTime();\n      r > this.maxCallUpdateDuration && (this.maxCallUpdateDuration = r), this.totalCallUpdateDuration += r;\n    } catch (i) {\n      if (\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      this.exchangeDone || this.iceComplete ||\n      // @ts-expect-error tsc is unaware that iceConnectionState can change\n      this.pc.iceConnectionState === \"connected\") return;\n      console.error(i);\n    }\n  }\n  async sendError(e) {\n    if (this.sentDoneOrErrorOnce) return;\n    if (this.callUuid === void 0 || this.callUuid === \"\") throw new Error(Ua);\n    this.sentDoneOrErrorOnce = !0;\n    const n = new Fn({\n      uuid: this.callUuid,\n      update: {\n        case: \"error\",\n        value: new sn({\n          code: E.Unknown,\n          message: e\n        })\n      }\n    });\n    try {\n      await this.signalingClient.callUpdate(n, this.callOpts);\n    } catch (t) {\n      console.error(\"failed to send call update; continuing\", t);\n    }\n  }\n  async sendDone() {\n    if (this.sentDoneOrErrorOnce) return;\n    if (this.callUuid === void 0 || this.callUuid === \"\") throw new Error(Ua);\n    this.sentDoneOrErrorOnce = !0;\n    const e = new Fn({\n      uuid: this.callUuid,\n      update: {\n        case: \"done\",\n        value: !0\n      }\n    });\n    try {\n      await this.signalingClient.callUpdate(e, this.callOpts);\n    } catch (n) {\n      console.error(n);\n    }\n  }\n}\nconst $f = a => {\n    const e = {\n      candidate: a.candidate\n    };\n    return a.sdpMid !== void 0 && (e.sdpMid = a.sdpMid), a.sdpmLineIndex !== void 0 && (e.sdpMLineIndex = a.sdpmLineIndex), a.usernameFragment !== void 0 && (e.usernameFragment = a.usernameFragment), e;\n  },\n  Vf = a => {\n    const e = new En();\n    return a.candidate !== void 0 && (e.candidate = a.candidate), a.sdpMid !== void 0 && a.sdpMid !== null && (e.sdpMid = a.sdpMid), a.sdpMLineIndex !== void 0 && a.sdpMLineIndex !== null && (e.sdpmLineIndex = a.sdpMLineIndex), a.usernameFragment !== void 0 && a.usernameFragment !== null && (e.usernameFragment = a.usernameFragment), e;\n  },\n  In = async (a, e) => {\n    pr(e);\n    const n = globalThis.VIAM?.GRPC_TRANSPORT_FACTORY ?? Nf,\n      t = {\n        baseUrl: a\n      };\n    if (e?.accessToken !== void 0 && e.accessToken !== \"\" && !(e.externalAuthAddress !== void 0 && e.externalAuthAddress !== \"\" && e.externalAuthToEntity !== void 0 && e.externalAuthToEntity !== \"\")) {\n      const o = new Headers(e.extraHeaders);\n      return o.set(\"authorization\", `Bearer ${e.accessToken}`), new dr(t, n, o);\n    }\n    return e === void 0 || e.credentials === void 0 && e.accessToken === void 0 ? n(t) : Wf(a, n, e, t);\n  },\n  Ha = /^.*:\\/\\//u,\n  Wf = async (a, e, n, t) => {\n    const o = new Headers(n.extraHeaders);\n    let i;\n    if (n.accessToken === void 0 || n.accessToken === \"\") {\n      const r = new Ya({\n        entity: Cn(n.credentials) && n.credentials.authEntity ? n.credentials.authEntity : a.replace(Ha, \"\")\n      });\n      n.credentials && (r.credentials = new tr({\n        type: n.credentials.type,\n        payload: n.credentials.payload\n      }));\n      const c = n.externalAuthAddress ?? a,\n        p = e({\n          baseUrl: c\n        });\n      i = (await P(rf, p).authenticate(r)).accessToken;\n    } else i = n.accessToken;\n    if (n.externalAuthAddress !== void 0 && n.externalAuthAddress !== \"\" && n.externalAuthToEntity !== void 0 && n.externalAuthToEntity !== \"\") {\n      const r = new Headers();\n      r.set(\"authorization\", `Bearer ${i}`), i = \"\";\n      const c = new Ya({\n          entity: n.externalAuthToEntity\n        }),\n        p = e({\n          baseUrl: n.externalAuthAddress\n        });\n      i = (await P(mf, p).authenticateTo(c, {\n        headers: r\n      })).accessToken;\n    }\n    return o.set(\"authorization\", `Bearer ${i}`), new dr(t, e, o);\n  };\nclass dr {\n  transport;\n  extraHeaders;\n  constructor(e, n, t) {\n    this.extraHeaders = t, this.transport = n(e);\n  }\n  async unary(e, n, t, o, i, r, c) {\n    const p = Mn(i);\n    for (const [d, T] of this.extraHeaders) p.set(d, T);\n    return this.transport.unary(e, n, t, o, p, r, c);\n  }\n  async stream(e, n, t, o, i, r, c) {\n    const p = Mn(i);\n    for (const [d, T] of this.extraHeaders) p.set(d, T);\n    return this.transport.stream(e, n, t, o, p, r, c);\n  }\n}\nconst Mn = a => {\n    const e = new Headers();\n    if (a !== void 0) if (Array.isArray(a)) for (const [n, t] of a) e.append(n, t);else if (\"forEach\" in a) typeof a.forEach == \"function\" && a.forEach((n, t) => {\n      e.append(t, n);\n    });else for (const [n, t] of Object.entries(a)) e.append(n, t);\n    return e;\n  },\n  jf = async (a, e, n) => {\n    const t = {\n        ...n\n      },\n      o = await In(a, t),\n      i = P(or, o);\n    try {\n      return (await i.optionalWebRTCConfig({}, e)).config ?? new sa();\n    } catch (r) {\n      if (r instanceof C && r.code === E.Unimplemented) return new sa();\n      throw r;\n    }\n  },\n  Hf = async (a, e, n) => {\n    const t = a.replace(/\\/$/u, \"\");\n    pr(n);\n    const o = {\n        headers: {\n          \"rpc-host\": e\n        }\n      },\n      i = await Kf(t, o, n),\n      r = Xf(t, n),\n      {\n        pc: c,\n        dc: p\n      } = await wf(i.disableTrickleICE, i.rtcConfig, i.additionalSdpFields);\n    let d = !1,\n      T;\n    try {\n      T = await In(t, r);\n    } catch (R) {\n      throw c.close(), R;\n    }\n    const f = P(or, T),\n      S = new Yf(f, o, c, p, i);\n    try {\n      n?.dialTimeout !== void 0 && setTimeout(() => {\n        d || S.terminate(new Error(\"timed out\"));\n      }, n.dialTimeout);\n      const R = await S.doExchange();\n      return n?.externalAuthAddress !== void 0 && n.externalAuthAddress !== \"\" || n?.credentials?.type, d = !0, {\n        transport: R,\n        peerConnection: c,\n        dataChannel: p\n      };\n    } catch (R) {\n      throw console.error(\"error dialing\", R), R;\n    } finally {\n      d || c.close();\n    }\n  },\n  Kf = async (a, e, n) => {\n    const t = await jf(a, e, n),\n      o = t.additionalIceServers.map(c => {\n        const p = [];\n        for (const d of c.urls) d.endsWith(\"udp\") && p.push(`${d.slice(0, -3)}tcp`), p.push(d);\n        return {\n          urls: p,\n          credential: c.credential,\n          username: c.username\n        };\n      }),\n      i = n;\n    let r;\n    return i.webrtcOptions === void 0 ? r = {\n      disableTrickleICE: t.disableTrickle,\n      rtcConfig: {\n        iceServers: o\n      }\n    } : (r = JSON.parse(JSON.stringify(i.webrtcOptions)), r.rtcConfig === void 0 ? r.rtcConfig = {\n      iceServers: o\n    } : r.rtcConfig.iceServers = [...(r.rtcConfig.iceServers ?? []), ...o]), r;\n  },\n  Xf = (a, e) => {\n    let n = e;\n    return n = {\n      ...e\n    }, e.accessToken === void 0 && (Cn(n.credentials) && !n.credentials.authEntity && (n.credentials.authEntity = n.externalAuthAddress !== void 0 && n.externalAuthAddress !== \"\" ? n.externalAuthAddress.replace(Ha, \"\") : a.replace(Ha, \"\")), n.credentials = e.webrtcOptions?.signalingCredentials, n.accessToken = e.webrtcOptions?.signalingAccessToken), n.externalAuthAddress = e.webrtcOptions?.signalingExternalAuthAddress, n.externalAuthToEntity = e.webrtcOptions?.signalingExternalAuthToEntity, n;\n  },\n  pr = a => {\n    if (a) {\n      if (a.accessToken !== void 0 && a.accessToken.length > 0) {\n        if (a.credentials) throw new Error(\"cannot set credentials with accessToken\");\n        if (a.webrtcOptions !== void 0) {\n          if (a.webrtcOptions.signalingAccessToken !== void 0) throw new Error(\"cannot set webrtcOptions.signalingAccessToken with accessToken\");\n          if (a.webrtcOptions.signalingCredentials !== void 0) throw new Error(\"cannot set webrtcOptions.signalingCredentials with accessToken\");\n        }\n      }\n      if (a.webrtcOptions?.signalingAccessToken !== void 0 && a.webrtcOptions.signalingAccessToken.length > 0 && a.webrtcOptions.signalingCredentials !== void 0) throw new Error(\"cannot set webrtcOptions.signalingCredentials with webrtcOptions.signalingAccessToken\");\n    }\n  },\n  Qf = \"v0.1.432\",\n  ur = /* @__PURE__ */s.makeEnum(\"viam.common.v1.KinematicsFileFormat\", [{\n    no: 0,\n    name: \"KINEMATICS_FILE_FORMAT_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"KINEMATICS_FILE_FORMAT_SVA\",\n    localName: \"SVA\"\n  }, {\n    no: 2,\n    name: \"KINEMATICS_FILE_FORMAT_URDF\",\n    localName: \"URDF\"\n  }]),\n  x = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.ResourceName\", () => [{\n    no: 1,\n    name: \"namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"subtype\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"remote_path\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 6,\n    name: \"local_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ue = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.Pose\", () => [{\n    no: 1,\n    name: \"x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"o_x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 5,\n    name: \"o_y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 6,\n    name: \"o_z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 7,\n    name: \"theta\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  gr = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.Orientation\", () => [{\n    no: 1,\n    name: \"o_x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"o_y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"o_z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"theta\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  on = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.PoseInFrame\", () => [{\n    no: 1,\n    name: \"reference_frame\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pose\",\n    kind: \"message\",\n    T: Ue\n  }]),\n  qe = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.Vector3\", () => [{\n    no: 1,\n    name: \"x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  Tr = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.Sphere\", () => [{\n    no: 1,\n    name: \"radius_mm\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  kr = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.Capsule\", () => [{\n    no: 1,\n    name: \"radius_mm\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"length_mm\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  yr = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.RectangularPrism\", () => [{\n    no: 1,\n    name: \"dims_mm\",\n    kind: \"message\",\n    T: qe\n  }]),\n  vr = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.Mesh\", () => [{\n    no: 1,\n    name: \"content_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"mesh\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  He = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.Geometry\", () => [{\n    no: 1,\n    name: \"center\",\n    kind: \"message\",\n    T: Ue\n  }, {\n    no: 2,\n    name: \"sphere\",\n    kind: \"message\",\n    T: Tr,\n    oneof: \"geometry_type\"\n  }, {\n    no: 3,\n    name: \"box\",\n    kind: \"message\",\n    T: yr,\n    oneof: \"geometry_type\"\n  }, {\n    no: 5,\n    name: \"capsule\",\n    kind: \"message\",\n    T: kr,\n    oneof: \"geometry_type\"\n  }, {\n    no: 6,\n    name: \"mesh\",\n    kind: \"message\",\n    T: vr,\n    oneof: \"geometry_type\"\n  }, {\n    no: 4,\n    name: \"label\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  dt = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GeometriesInFrame\", () => [{\n    no: 1,\n    name: \"reference_frame\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"geometries\",\n    kind: \"message\",\n    T: He,\n    repeated: !0\n  }]),\n  pt = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.PointCloudObject\", () => [{\n    no: 1,\n    name: \"point_cloud\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }, {\n    no: 2,\n    name: \"geometries\",\n    kind: \"message\",\n    T: dt\n  }]),\n  ze = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GeoPoint\", () => [{\n    no: 1,\n    name: \"latitude\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"longitude\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  ia = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GeoGeometry\", () => [{\n    no: 1,\n    name: \"location\",\n    kind: \"message\",\n    T: ze\n  }, {\n    no: 2,\n    name: \"geometries\",\n    kind: \"message\",\n    T: He,\n    repeated: !0\n  }]),\n  rn = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.Transform\", () => [{\n    no: 1,\n    name: \"reference_frame\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pose_in_observer_frame\",\n    kind: \"message\",\n    T: on\n  }, {\n    no: 3,\n    name: \"physical_object\",\n    kind: \"message\",\n    T: He,\n    opt: !0\n  }]),\n  hr = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.WorldState\", () => [{\n    no: 1,\n    name: \"obstacles\",\n    kind: \"message\",\n    T: dt,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"transforms\",\n    kind: \"message\",\n    T: rn,\n    repeated: !0\n  }]),\n  Zf = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.ActuatorStatus\", () => [{\n    no: 1,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  fr = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.ResponseMetadata\", () => [{\n    no: 1,\n    name: \"captured_at\",\n    kind: \"message\",\n    T: _,\n    opt: !0\n  }]),\n  q = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.DoCommandRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"command\",\n    kind: \"message\",\n    T: l\n  }]),\n  U = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.DoCommandResponse\", () => [{\n    no: 1,\n    name: \"result\",\n    kind: \"message\",\n    T: l\n  }]),\n  Rr = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GetKinematicsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  _r = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GetKinematicsResponse\", () => [{\n    no: 1,\n    name: \"format\",\n    kind: \"enum\",\n    T: s.getEnumType(ur)\n  }, {\n    no: 2,\n    name: \"kinematics_data\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  J = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GetGeometriesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  K = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GetGeometriesResponse\", () => [{\n    no: 1,\n    name: \"geometries\",\n    kind: \"message\",\n    T: He,\n    repeated: !0\n  }]),\n  Ke = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GetReadingsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  ga = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.GetReadingsResponse\", () => [{\n    no: 1,\n    name: \"readings\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"message\",\n      T: X\n    }\n  }]),\n  On = /* @__PURE__ */s.makeMessageType(\"viam.common.v1.LogEntry\", () => [{\n    no: 1,\n    name: \"host\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"level\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"time\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"logger_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"message\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"caller\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 7,\n    name: \"stack\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 8,\n    name: \"fields\",\n    kind: \"message\",\n    T: l,\n    repeated: !0\n  }]),\n  Sr = s.makeExtension(\"viam.common.v1.safety_heartbeat_monitored\", me, {\n    no: 84260,\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }),\n  Ir = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    ActuatorStatus: Zf,\n    Capsule: kr,\n    DoCommandRequest: q,\n    DoCommandResponse: U,\n    GeoGeometry: ia,\n    GeoPoint: ze,\n    GeometriesInFrame: dt,\n    Geometry: He,\n    GetGeometriesRequest: J,\n    GetGeometriesResponse: K,\n    GetKinematicsRequest: Rr,\n    GetKinematicsResponse: _r,\n    GetReadingsRequest: Ke,\n    GetReadingsResponse: ga,\n    KinematicsFileFormat: ur,\n    LogEntry: On,\n    Mesh: vr,\n    Orientation: gr,\n    PointCloudObject: pt,\n    Pose: Ue,\n    PoseInFrame: on,\n    RectangularPrism: yr,\n    ResourceName: x,\n    ResponseMetadata: fr,\n    Sphere: Tr,\n    Transform: rn,\n    Vector3: qe,\n    WorldState: hr,\n    safety_heartbeat_monitored: Sr\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Ka = new Headers({\n    \"viam-client\": `typescript;v0.41.0;${Qf}`\n  }),\n  G = async function (e, n, t, o = {}, i = {}) {\n    const r = new q({\n      name: n,\n      command: t\n    });\n    o.requestLogger?.(r);\n    const p = (await e(r, i)).result?.toJson();\n    return p === void 0 ? {} : p;\n  },\n  V1 = (a, e) => {\n    const n = e ?? {\n      headers: {}\n    };\n    let t = \"\";\n    if (a === void 0) {\n      const o = \"abcdefghijklmnopqrstuvwxyz\";\n      for (let i = 0; i < 6; i += 1) t += o[Math.floor(Math.random() * 26)];\n    } else t = a;\n    return n.headers.dtname = t, n;\n  },\n  W1 = a => {\n    if (a.headers) {\n      const {\n        _: e,\n        ...n\n      } = a.headers;\n      a.headers = n;\n    }\n  },\n  j1 = (a, e, n) => {\n    const t = n ?? {\n      headers: {}\n    };\n    return t.headers[a] = e, t;\n  },\n  H1 = (a, e) => {\n    const {\n      [e]: n,\n      ...t\n    } = a.headers;\n    a.headers = t;\n  },\n  Cn = a => a !== void 0 && \"authEntity\" in a,\n  eR = async (a, e) => e.type === \"access-token\" ? In(a, {\n    accessToken: e.payload,\n    extraHeaders: Ka\n  }) : In(a, {\n    credentials: e,\n    extraHeaders: Ka\n  }),\n  ut = 5e3;\nvar ae = /* @__PURE__ */(a => (a.CONNECTING = \"connecting\", a.CONNECTED = \"connected\", a.DISCONNECTING = \"disconnecting\", a.DISCONNECTED = \"disconnected\", a))(ae || {});\nclass Mr {\n  listeners = {};\n  on(e, n) {\n    const {\n      listeners: t\n    } = this;\n    t[e] ??= /* @__PURE__ */new Set(), t[e]?.add(n);\n  }\n  once(e, n) {\n    const t = o => {\n      n(o), this.off(e, n);\n    };\n    this.on(e, t);\n  }\n  has(e, n) {\n    return this.listeners[e]?.has(n);\n  }\n  off(e, n) {\n    this.listeners[e]?.delete(n);\n  }\n  emit(e, n) {\n    for (const t of this.listeners[e] ?? []) t(n);\n  }\n}\nconst gt = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.GetEndPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  br = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.GetEndPositionResponse\", () => [{\n    no: 1,\n    name: \"pose\",\n    kind: \"message\",\n    T: Ue\n  }]),\n  mn = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.JointPositions\", () => [{\n    no: 1,\n    name: \"values\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }]),\n  Tt = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.GetJointPositionsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  wr = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.GetJointPositionsResponse\", () => [{\n    no: 1,\n    name: \"positions\",\n    kind: \"message\",\n    T: mn\n  }]),\n  kt = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.MoveToPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"to\",\n    kind: \"message\",\n    T: Ue\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Er = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.MoveToPositionResponse\", []),\n  yt = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.MoveToJointPositionsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"positions\",\n    kind: \"message\",\n    T: mn\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Or = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.MoveToJointPositionsResponse\", []),\n  Cr = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.MoveThroughJointPositionsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"positions\",\n    kind: \"message\",\n    T: mn,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"options\",\n    kind: \"message\",\n    T: Dr,\n    opt: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Nr = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.MoveThroughJointPositionsResponse\", []),\n  vt = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.StopRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Pr = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.StopResponse\", []),\n  nR = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.Status\", () => [{\n    no: 1,\n    name: \"end_position\",\n    kind: \"message\",\n    T: Ue\n  }, {\n    no: 2,\n    name: \"joint_positions\",\n    kind: \"message\",\n    T: mn\n  }, {\n    no: 3,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  ht = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.IsMovingRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ar = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.IsMovingResponse\", () => [{\n    no: 1,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Dr = /* @__PURE__ */s.makeMessageType(\"viam.component.arm.v1.MoveOptions\", () => [{\n    no: 1,\n    name: \"max_vel_degs_per_sec\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 2,\n    name: \"max_acc_degs_per_sec2\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }]),\n  aR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetEndPositionRequest: gt,\n    GetEndPositionResponse: br,\n    GetJointPositionsRequest: Tt,\n    GetJointPositionsResponse: wr,\n    IsMovingRequest: ht,\n    IsMovingResponse: Ar,\n    JointPositions: mn,\n    MoveOptions: Dr,\n    MoveThroughJointPositionsRequest: Cr,\n    MoveThroughJointPositionsResponse: Nr,\n    MoveToJointPositionsRequest: yt,\n    MoveToJointPositionsResponse: Or,\n    MoveToPositionRequest: kt,\n    MoveToPositionResponse: Er,\n    Status: nR,\n    StopRequest: vt,\n    StopResponse: Pr\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  qr = {\n    typeName: \"viam.component.arm.v1.ArmService\",\n    methods: {\n      /**\n       * GetEndPosition gets the current position the end of the robot's arm expressed as X,Y,Z,ox,oy,oz,theta\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.GetEndPosition\n       */\n      getEndPosition: {\n        name: \"GetEndPosition\",\n        I: gt,\n        O: br,\n        kind: m.Unary\n      },\n      /**\n       * MoveToPosition moves the mount point of the robot's end effector to the requested position.\n       * This will block until done or a new operation cancels this one\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.MoveToPosition\n       */\n      moveToPosition: {\n        name: \"MoveToPosition\",\n        I: kt,\n        O: Er,\n        kind: m.Unary\n      },\n      /**\n       * GetJointPositions lists the joint positions (in degrees) of every joint on a robot\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.GetJointPositions\n       */\n      getJointPositions: {\n        name: \"GetJointPositions\",\n        I: Tt,\n        O: wr,\n        kind: m.Unary\n      },\n      /**\n       * MoveToJointPositions moves every joint on a robot's arm to specified angles which are expressed in degrees\n       * This will block until done or a new operation cancels this one\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.MoveToJointPositions\n       */\n      moveToJointPositions: {\n        name: \"MoveToJointPositions\",\n        I: yt,\n        O: Or,\n        kind: m.Unary\n      },\n      /**\n       * MoveThroughJointPositions moves every joint on a robot's arm to the specified JointPositions in the order they are specified,\n       * obeying the specified velocity and acceleration limits.\n       * This will block until done or a new operation cancels this one\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.MoveThroughJointPositions\n       */\n      moveThroughJointPositions: {\n        name: \"MoveThroughJointPositions\",\n        I: Cr,\n        O: Nr,\n        kind: m.Unary\n      },\n      /**\n       * Stop stops a robot's arm\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.Stop\n       */\n      stop: {\n        name: \"Stop\",\n        I: vt,\n        O: Pr,\n        kind: m.Unary\n      },\n      /**\n       * IsMoving reports if a component is in motion\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.IsMoving\n       */\n      isMoving: {\n        name: \"IsMoving\",\n        I: ht,\n        O: Ar,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetKinematics returns the kinematics file for the component\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.GetKinematics\n       */\n      getKinematics: {\n        name: \"GetKinematics\",\n        I: Rr,\n        O: _r,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.arm.v1.ArmService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  ft = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.MoveStraightRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"distance_mm\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 3,\n    name: \"mm_per_sec\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Ur = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.MoveStraightResponse\", []),\n  Rt = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.SpinRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"angle_deg\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"degs_per_sec\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Gr = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.SpinResponse\", []),\n  _t = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.StopRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Lr = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.StopResponse\", []),\n  St = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.SetPowerRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"linear\",\n    kind: \"message\",\n    T: qe\n  }, {\n    no: 3,\n    name: \"angular\",\n    kind: \"message\",\n    T: qe\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Br = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.SetPowerResponse\", []),\n  It = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.SetVelocityRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"linear\",\n    kind: \"message\",\n    T: qe\n  }, {\n    no: 3,\n    name: \"angular\",\n    kind: \"message\",\n    T: qe\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  xr = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.SetVelocityResponse\", []),\n  Mt = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.IsMovingRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Fr = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.IsMovingResponse\", () => [{\n    no: 1,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Ta = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.GetPropertiesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Jr = /* @__PURE__ */s.makeMessageType(\"viam.component.base.v1.GetPropertiesResponse\", () => [{\n    no: 1,\n    name: \"width_meters\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"turning_radius_meters\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"wheel_circumference_meters\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  tR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetPropertiesRequest: Ta,\n    GetPropertiesResponse: Jr,\n    IsMovingRequest: Mt,\n    IsMovingResponse: Fr,\n    MoveStraightRequest: ft,\n    MoveStraightResponse: Ur,\n    SetPowerRequest: St,\n    SetPowerResponse: Br,\n    SetVelocityRequest: It,\n    SetVelocityResponse: xr,\n    SpinRequest: Rt,\n    SpinResponse: Gr,\n    StopRequest: _t,\n    StopResponse: Lr\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  zr = {\n    typeName: \"viam.component.base.v1.BaseService\",\n    methods: {\n      /**\n       * MoveStraight moves a robot's base in a straight line by a given distance, expressed in millimeters\n       * and a given speed, expressed in millimeters per second\n       * This method blocks until completed or cancelled\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.MoveStraight\n       */\n      moveStraight: {\n        name: \"MoveStraight\",\n        I: ft,\n        O: Ur,\n        kind: m.Unary\n      },\n      /**\n       * Spin spins a robot's base by an given angle, expressed in degrees, and a given\n       * angular speed, expressed in degrees per second\n       * This method blocks until completed or cancelled\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.Spin\n       */\n      spin: {\n        name: \"Spin\",\n        I: Rt,\n        O: Gr,\n        kind: m.Unary\n      },\n      /**\n       * SetPower sets the linear and angular power of a base\n       * -1 -> 1 in terms of power for each direction\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.SetPower\n       */\n      setPower: {\n        name: \"SetPower\",\n        I: St,\n        O: Br,\n        kind: m.Unary\n      },\n      /**\n       * SetVelocity sets the linear and angular velocity of a base\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.SetVelocity\n       */\n      setVelocity: {\n        name: \"SetVelocity\",\n        I: It,\n        O: xr,\n        kind: m.Unary\n      },\n      /**\n       * Stop stops a robot's base\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.Stop\n       */\n      stop: {\n        name: \"Stop\",\n        I: _t,\n        O: Lr,\n        kind: m.Unary\n      },\n      /**\n       * IsMoving reports if a component is in motion\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.IsMoving\n       */\n      isMoving: {\n        name: \"IsMoving\",\n        I: Mt,\n        O: Fr,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      },\n      /**\n       * GetProperties returns the properties of a base in its current configuration\n       *\n       * @generated from rpc viam.component.base.v1.BaseService.GetProperties\n       */\n      getProperties: {\n        name: \"GetProperties\",\n        I: Ta,\n        O: Jr,\n        kind: m.Unary\n      }\n    }\n  },\n  Yr = /* @__PURE__ */s.makeEnum(\"viam.component.board.v1.PowerMode\", [{\n    no: 0,\n    name: \"POWER_MODE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"POWER_MODE_NORMAL\",\n    localName: \"NORMAL\"\n  }, {\n    no: 2,\n    name: \"POWER_MODE_OFFLINE_DEEP\",\n    localName: \"OFFLINE_DEEP\"\n  }]),\n  sR = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.Status\", () => [{\n    no: 1,\n    name: \"analogs\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    }\n  }, {\n    no: 2,\n    name: \"digital_interrupts\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  }]),\n  bt = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.SetGPIORequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pin\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"high\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  $r = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.SetGPIOResponse\", []),\n  wt = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.GetGPIORequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pin\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Vr = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.GetGPIOResponse\", () => [{\n    no: 1,\n    name: \"high\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Et = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.PWMRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pin\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Wr = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.PWMResponse\", () => [{\n    no: 1,\n    name: \"duty_cycle_pct\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  Ot = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.SetPWMRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pin\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"duty_cycle_pct\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  jr = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.SetPWMResponse\", []),\n  Ct = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.PWMFrequencyRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pin\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Hr = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.PWMFrequencyResponse\", () => [{\n    no: 1,\n    name: \"frequency_hz\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  Nt = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.SetPWMFrequencyRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pin\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"frequency_hz\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Kr = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.SetPWMFrequencyResponse\", []),\n  Pt = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.ReadAnalogReaderRequest\", () => [{\n    no: 1,\n    name: \"board_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"analog_reader_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Xr = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.ReadAnalogReaderResponse\", () => [{\n    no: 1,\n    name: \"value\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 2,\n    name: \"min_range\",\n    kind: \"scalar\",\n    T: 2\n    /* ScalarType.FLOAT */\n  }, {\n    no: 3,\n    name: \"max_range\",\n    kind: \"scalar\",\n    T: 2\n    /* ScalarType.FLOAT */\n  }, {\n    no: 4,\n    name: \"step_size\",\n    kind: \"scalar\",\n    T: 2\n    /* ScalarType.FLOAT */\n  }]),\n  At = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.WriteAnalogRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pin\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"value\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Qr = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.WriteAnalogResponse\", []),\n  Dt = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.GetDigitalInterruptValueRequest\", () => [{\n    no: 1,\n    name: \"board_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"digital_interrupt_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Zr = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.GetDigitalInterruptValueResponse\", () => [{\n    no: 1,\n    name: \"value\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }]),\n  qt = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.StreamTicksRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"pin_names\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  em = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.StreamTicksResponse\", () => [{\n    no: 1,\n    name: \"pin_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"time\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }, {\n    no: 3,\n    name: \"high\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Ut = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.SetPowerModeRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"power_mode\",\n    kind: \"enum\",\n    T: s.getEnumType(Yr)\n  }, {\n    no: 3,\n    name: \"duration\",\n    kind: \"message\",\n    T: F,\n    opt: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  nm = /* @__PURE__ */s.makeMessageType(\"viam.component.board.v1.SetPowerModeResponse\", []),\n  oR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetDigitalInterruptValueRequest: Dt,\n    GetDigitalInterruptValueResponse: Zr,\n    GetGPIORequest: wt,\n    GetGPIOResponse: Vr,\n    PWMFrequencyRequest: Ct,\n    PWMFrequencyResponse: Hr,\n    PWMRequest: Et,\n    PWMResponse: Wr,\n    PowerMode: Yr,\n    ReadAnalogReaderRequest: Pt,\n    ReadAnalogReaderResponse: Xr,\n    SetGPIORequest: bt,\n    SetGPIOResponse: $r,\n    SetPWMFrequencyRequest: Nt,\n    SetPWMFrequencyResponse: Kr,\n    SetPWMRequest: Ot,\n    SetPWMResponse: jr,\n    SetPowerModeRequest: Ut,\n    SetPowerModeResponse: nm,\n    Status: sR,\n    StreamTicksRequest: qt,\n    StreamTicksResponse: em,\n    WriteAnalogRequest: At,\n    WriteAnalogResponse: Qr\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  am = {\n    typeName: \"viam.component.board.v1.BoardService\",\n    methods: {\n      /**\n       * @generated from rpc viam.component.board.v1.BoardService.SetGPIO\n       */\n      setGPIO: {\n        name: \"SetGPIO\",\n        I: bt,\n        O: $r,\n        kind: m.Unary\n      },\n      /**\n       * GetGPIO gets the high/low state of the given pin of a board of the underlying robot.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.GetGPIO\n       */\n      getGPIO: {\n        name: \"GetGPIO\",\n        I: wt,\n        O: Vr,\n        kind: m.Unary\n      },\n      /**\n       * PWM gets the duty cycle of the given pin of a board of the underlying robot.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.PWM\n       */\n      pWM: {\n        name: \"PWM\",\n        I: Et,\n        O: Wr,\n        kind: m.Unary\n      },\n      /**\n       * SetPWM sets the given pin of a board of the underlying robot to the given duty cycle.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.SetPWM\n       */\n      setPWM: {\n        name: \"SetPWM\",\n        I: Ot,\n        O: jr,\n        kind: m.Unary\n      },\n      /**\n       * PWMFrequency gets the PWM frequency of the given pin of a board of the underlying robot.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.PWMFrequency\n       */\n      pWMFrequency: {\n        name: \"PWMFrequency\",\n        I: Ct,\n        O: Hr,\n        kind: m.Unary\n      },\n      /**\n       * SetPWMFrequency sets the given pin of a board of the underlying robot to the given PWM frequency. 0 will use the board's default PWM frequency.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.SetPWMFrequency\n       */\n      setPWMFrequency: {\n        name: \"SetPWMFrequency\",\n        I: Nt,\n        O: Kr,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * ReadAnalogReader reads off the current value of an analog reader of a board of the underlying robot.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.ReadAnalogReader\n       */\n      readAnalogReader: {\n        name: \"ReadAnalogReader\",\n        I: Pt,\n        O: Xr,\n        kind: m.Unary\n      },\n      /**\n       * WriteAnalog writes the value to the analog writer of the board.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.WriteAnalog\n       */\n      writeAnalog: {\n        name: \"WriteAnalog\",\n        I: At,\n        O: Qr,\n        kind: m.Unary\n      },\n      /**\n       * GetDigitalInterruptValue returns the current value of the interrupt which is based on the type of interrupt.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.GetDigitalInterruptValue\n       */\n      getDigitalInterruptValue: {\n        name: \"GetDigitalInterruptValue\",\n        I: Dt,\n        O: Zr,\n        kind: m.Unary\n      },\n      /**\n       * StreamTicks starts a stream of ticks for the given digital interrupts.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.StreamTicks\n       */\n      streamTicks: {\n        name: \"StreamTicks\",\n        I: qt,\n        O: em,\n        kind: m.ServerStreaming\n      },\n      /**\n       * `SetPowerMode` sets the power consumption mode of the board to the requested setting for the given duration.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.SetPowerMode\n       */\n      setPowerMode: {\n        name: \"SetPowerMode\",\n        I: Ut,\n        O: nm,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration.\n       *\n       * @generated from rpc viam.component.board.v1.BoardService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  Gt = /* @__PURE__ */s.makeEnum(\"viam.component.encoder.v1.PositionType\", [{\n    no: 0,\n    name: \"POSITION_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"POSITION_TYPE_TICKS_COUNT\",\n    localName: \"TICKS_COUNT\"\n  }, {\n    no: 2,\n    name: \"POSITION_TYPE_ANGLE_DEGREES\",\n    localName: \"ANGLE_DEGREES\"\n  }]),\n  Lt = /* @__PURE__ */s.makeMessageType(\"viam.component.encoder.v1.GetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"position_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Gt),\n    opt: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  tm = /* @__PURE__ */s.makeMessageType(\"viam.component.encoder.v1.GetPositionResponse\", () => [{\n    no: 1,\n    name: \"value\",\n    kind: \"scalar\",\n    T: 2\n    /* ScalarType.FLOAT */\n  }, {\n    no: 2,\n    name: \"position_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Gt)\n  }]),\n  Bt = /* @__PURE__ */s.makeMessageType(\"viam.component.encoder.v1.ResetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  sm = /* @__PURE__ */s.makeMessageType(\"viam.component.encoder.v1.ResetPositionResponse\", []),\n  xt = /* @__PURE__ */s.makeMessageType(\"viam.component.encoder.v1.GetPropertiesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  om = /* @__PURE__ */s.makeMessageType(\"viam.component.encoder.v1.GetPropertiesResponse\", () => [{\n    no: 1,\n    name: \"ticks_count_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 2,\n    name: \"angle_degrees_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  iR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetPositionRequest: Lt,\n    GetPositionResponse: tm,\n    GetPropertiesRequest: xt,\n    GetPropertiesResponse: om,\n    PositionType: Gt,\n    ResetPositionRequest: Bt,\n    ResetPositionResponse: sm\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  im = {\n    typeName: \"viam.component.encoder.v1.EncoderService\",\n    methods: {\n      /**\n       * Returns position of the encoder which can either be ticks since last\n       * zeroing for an incremental encoder or degrees for an absolute encoder.\n       *\n       * @generated from rpc viam.component.encoder.v1.EncoderService.GetPosition\n       */\n      getPosition: {\n        name: \"GetPosition\",\n        I: Lt,\n        O: tm,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.encoder.v1.EncoderService.ResetPosition\n       */\n      resetPosition: {\n        name: \"ResetPosition\",\n        I: Bt,\n        O: sm,\n        kind: m.Unary\n      },\n      /**\n       * Returns a list of all the methods that are\n       * supported by a given robot.\n       *\n       * @generated from rpc viam.component.encoder.v1.EncoderService.GetProperties\n       */\n      getProperties: {\n        name: \"GetProperties\",\n        I: xt,\n        O: om,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.encoder.v1.EncoderService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.encoder.v1.EncoderService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  Ft = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.GetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  rm = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.GetPositionResponse\", () => [{\n    no: 1,\n    name: \"positions_mm\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }]),\n  Jt = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.MoveToPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"positions_mm\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"speeds_mm_per_sec\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  mm = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.MoveToPositionResponse\", []),\n  zt = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.HomeRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  cm = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.HomeResponse\", () => [{\n    no: 1,\n    name: \"homed\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Yt = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.GetLengthsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  lm = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.GetLengthsResponse\", () => [{\n    no: 1,\n    name: \"lengths_mm\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }]),\n  $t = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.StopRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  dm = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.StopResponse\", []),\n  rR = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.Status\", () => [{\n    no: 1,\n    name: \"positions_mm\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"lengths_mm\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Vt = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.IsMovingRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  pm = /* @__PURE__ */s.makeMessageType(\"viam.component.gantry.v1.IsMovingResponse\", () => [{\n    no: 1,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  K1 = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetLengthsRequest: Yt,\n    GetLengthsResponse: lm,\n    GetPositionRequest: Ft,\n    GetPositionResponse: rm,\n    HomeRequest: zt,\n    HomeResponse: cm,\n    IsMovingRequest: Vt,\n    IsMovingResponse: pm,\n    MoveToPositionRequest: Jt,\n    MoveToPositionResponse: mm,\n    Status: rR,\n    StopRequest: $t,\n    StopResponse: dm\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  um = {\n    typeName: \"viam.component.gantry.v1.GantryService\",\n    methods: {\n      /**\n       * GetPosition gets the current position of a gantry of the underlying robot.\n       *\n       * @generated from rpc viam.component.gantry.v1.GantryService.GetPosition\n       */\n      getPosition: {\n        name: \"GetPosition\",\n        I: Ft,\n        O: rm,\n        kind: m.Unary\n      },\n      /**\n       * MoveToPosition moves a gantry of the underlying robot to the requested position.\n       *\n       * @generated from rpc viam.component.gantry.v1.GantryService.MoveToPosition\n       */\n      moveToPosition: {\n        name: \"MoveToPosition\",\n        I: Jt,\n        O: mm,\n        kind: m.Unary\n      },\n      /**\n       * Home runs the homing sequence of a gantry and returns true once it's completed.\n       *\n       * @generated from rpc viam.component.gantry.v1.GantryService.Home\n       */\n      home: {\n        name: \"Home\",\n        I: zt,\n        O: cm,\n        kind: m.Unary\n      },\n      /**\n       * GetLengths gets the lengths of a gantry of the underlying robot.\n       *\n       * @generated from rpc viam.component.gantry.v1.GantryService.GetLengths\n       */\n      getLengths: {\n        name: \"GetLengths\",\n        I: Yt,\n        O: lm,\n        kind: m.Unary\n      },\n      /**\n       * Stop stops a robot's gantry\n       *\n       * @generated from rpc viam.component.gantry.v1.GantryService.Stop\n       */\n      stop: {\n        name: \"Stop\",\n        I: $t,\n        O: dm,\n        kind: m.Unary\n      },\n      /**\n       * IsMoving reports if a component is in motion\n       *\n       * @generated from rpc viam.component.gantry.v1.GantryService.IsMoving\n       */\n      isMoving: {\n        name: \"IsMoving\",\n        I: Vt,\n        O: pm,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.gantry.v1.GantryService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.gantry.v1.GantryService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  Wt = {\n    typeName: \"viam.component.generic.v1.GenericService\",\n    methods: {\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.generic.v1.GenericService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.generic.v1.GenericService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  X1 = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GenericService: Wt\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  jt = /* @__PURE__ */s.makeMessageType(\"viam.component.gripper.v1.OpenRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  gm = /* @__PURE__ */s.makeMessageType(\"viam.component.gripper.v1.OpenResponse\", []),\n  Ht = /* @__PURE__ */s.makeMessageType(\"viam.component.gripper.v1.GrabRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Tm = /* @__PURE__ */s.makeMessageType(\"viam.component.gripper.v1.GrabResponse\", () => [{\n    no: 1,\n    name: \"success\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Kt = /* @__PURE__ */s.makeMessageType(\"viam.component.gripper.v1.StopRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  km = /* @__PURE__ */s.makeMessageType(\"viam.component.gripper.v1.StopResponse\", []),\n  Xt = /* @__PURE__ */s.makeMessageType(\"viam.component.gripper.v1.IsMovingRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ym = /* @__PURE__ */s.makeMessageType(\"viam.component.gripper.v1.IsMovingResponse\", () => [{\n    no: 1,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Q1 = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GrabRequest: Ht,\n    GrabResponse: Tm,\n    IsMovingRequest: Xt,\n    IsMovingResponse: ym,\n    OpenRequest: jt,\n    OpenResponse: gm,\n    StopRequest: Kt,\n    StopResponse: km\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  vm = {\n    typeName: \"viam.component.gripper.v1.GripperService\",\n    methods: {\n      /**\n       * Open opens a gripper of the underlying robot.\n       *\n       * @generated from rpc viam.component.gripper.v1.GripperService.Open\n       */\n      open: {\n        name: \"Open\",\n        I: jt,\n        O: gm,\n        kind: m.Unary\n      },\n      /**\n       * Grab requests a gripper of the underlying robot to grab.\n       *\n       * @generated from rpc viam.component.gripper.v1.GripperService.Grab\n       */\n      grab: {\n        name: \"Grab\",\n        I: Ht,\n        O: Tm,\n        kind: m.Unary\n      },\n      /**\n       * Stop stops a robot's gripper\n       *\n       * @generated from rpc viam.component.gripper.v1.GripperService.Stop\n       */\n      stop: {\n        name: \"Stop\",\n        I: Kt,\n        O: km,\n        kind: m.Unary\n      },\n      /**\n       * IsMoving reports if a component is in motion\n       *\n       * @generated from rpc viam.component.gripper.v1.GripperService.IsMoving\n       */\n      isMoving: {\n        name: \"IsMoving\",\n        I: Xt,\n        O: ym,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.gripper.v1.GripperService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.gripper.v1.GripperService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  hm = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.GetControlsRequest\", () => [{\n    no: 1,\n    name: \"controller\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  fm = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.GetControlsResponse\", () => [{\n    no: 1,\n    name: \"controls\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Qt = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.GetEventsRequest\", () => [{\n    no: 1,\n    name: \"controller\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Rm = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.GetEventsResponse\", () => [{\n    no: 1,\n    name: \"events\",\n    kind: \"message\",\n    T: Nn,\n    repeated: !0\n  }]),\n  Zt = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.TriggerEventRequest\", () => [{\n    no: 1,\n    name: \"controller\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"event\",\n    kind: \"message\",\n    T: Nn\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  _m = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.TriggerEventResponse\", []),\n  Nn = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.Event\", () => [{\n    no: 1,\n    name: \"time\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 2,\n    name: \"event\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"control\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"value\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  Sm = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.StreamEventsRequest\", () => [{\n    no: 1,\n    name: \"controller\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"events\",\n    kind: \"message\",\n    T: Im,\n    repeated: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Im = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.StreamEventsRequest.Events\", () => [{\n    no: 1,\n    name: \"control\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"events\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"cancelled_events\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }], {\n    localName: \"StreamEventsRequest_Events\"\n  }),\n  Mm = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.StreamEventsResponse\", () => [{\n    no: 1,\n    name: \"event\",\n    kind: \"message\",\n    T: Nn\n  }]),\n  mR = /* @__PURE__ */s.makeMessageType(\"viam.component.inputcontroller.v1.Status\", () => [{\n    no: 1,\n    name: \"events\",\n    kind: \"message\",\n    T: Nn,\n    repeated: !0\n  }]),\n  cR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    Event: Nn,\n    GetControlsRequest: hm,\n    GetControlsResponse: fm,\n    GetEventsRequest: Qt,\n    GetEventsResponse: Rm,\n    Status: mR,\n    StreamEventsRequest: Sm,\n    StreamEventsRequest_Events: Im,\n    StreamEventsResponse: Mm,\n    TriggerEventRequest: Zt,\n    TriggerEventResponse: _m\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  bm = {\n    typeName: \"viam.component.inputcontroller.v1.InputControllerService\",\n    methods: {\n      /**\n       * GetControls returns a list of GetControls provided by the Controller\n       *\n       * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.GetControls\n       */\n      getControls: {\n        name: \"GetControls\",\n        I: hm,\n        O: fm,\n        kind: m.Unary\n      },\n      /**\n       * GetEvents returns a list of events representing the last event on each control of a give Input Controller\n       *\n       * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.GetEvents\n       */\n      getEvents: {\n        name: \"GetEvents\",\n        I: Qt,\n        O: Rm,\n        kind: m.Unary\n      },\n      /**\n       * StreamEvents starts a stream of InputControllerEvents for the given controls (buttons/axes) on a robot's input controller\n       *\n       * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.StreamEvents\n       */\n      streamEvents: {\n        name: \"StreamEvents\",\n        I: Sm,\n        O: Mm,\n        kind: m.ServerStreaming\n      },\n      /**\n       * TriggerEvent, where supported, injects an InputControllerEvent into an input controller to (virtually) generate events\n       * like button presses or axis movements\n       *\n       * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.TriggerEvent\n       */\n      triggerEvent: {\n        name: \"TriggerEvent\",\n        I: Zt,\n        O: _m,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  es = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.SetPowerRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"power_pct\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  wm = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.SetPowerResponse\", []),\n  ns = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.GoForRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"rpm\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"revolutions\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Em = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.GoForResponse\", []),\n  as = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.GoToRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"rpm\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"position_revolutions\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Om = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.GoToResponse\", []),\n  ts = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.SetRPMRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"rpm\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Cm = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.SetRPMResponse\", []),\n  ss = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.ResetZeroPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"offset\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Nm = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.ResetZeroPositionResponse\", []),\n  os = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.GetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Pm = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.GetPositionResponse\", () => [{\n    no: 1,\n    name: \"position\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  is = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.StopRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Am = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.StopResponse\", []),\n  rs = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.IsPoweredRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Dm = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.IsPoweredResponse\", () => [{\n    no: 1,\n    name: \"is_on\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 2,\n    name: \"power_pct\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  ms = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.GetPropertiesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  qm = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.GetPropertiesResponse\", () => [{\n    no: 1,\n    name: \"position_reporting\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  lR = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.Status\", () => [{\n    no: 1,\n    name: \"is_powered\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"position\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  cs = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.IsMovingRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Um = /* @__PURE__ */s.makeMessageType(\"viam.component.motor.v1.IsMovingResponse\", () => [{\n    no: 1,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Z1 = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetPositionRequest: os,\n    GetPositionResponse: Pm,\n    GetPropertiesRequest: ms,\n    GetPropertiesResponse: qm,\n    GoForRequest: ns,\n    GoForResponse: Em,\n    GoToRequest: as,\n    GoToResponse: Om,\n    IsMovingRequest: cs,\n    IsMovingResponse: Um,\n    IsPoweredRequest: rs,\n    IsPoweredResponse: Dm,\n    ResetZeroPositionRequest: ss,\n    ResetZeroPositionResponse: Nm,\n    SetPowerRequest: es,\n    SetPowerResponse: wm,\n    SetRPMRequest: ts,\n    SetRPMResponse: Cm,\n    Status: lR,\n    StopRequest: is,\n    StopResponse: Am\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Gm = {\n    typeName: \"viam.component.motor.v1.MotorService\",\n    methods: {\n      /**\n       * SetPower sets the percentage of the motor's total power that should be employed\n       * expressed a value between -1 and 1 where negative values indicate a backwards\n       * direction and positive values a forward direction\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.SetPower\n       */\n      setPower: {\n        name: \"SetPower\",\n        I: es,\n        O: wm,\n        kind: m.Unary\n      },\n      /**\n       * GoFor instructs the motor to turn at a specified speed, which is expressed in RPM,\n       * for a specified number of rotations relative to its starting position\n       * This method will return an error if position reporting is not supported\n       * If revolutions != 0, this will block until the number of revolutions has been completed or another operation comes in.\n       * Deprecated: If revolutions is 0, this will run the motor at rpm indefinitely.\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.GoFor\n       */\n      goFor: {\n        name: \"GoFor\",\n        I: ns,\n        O: Em,\n        kind: m.Unary\n      },\n      /**\n       * GoTo requests the robot's motor to move to a specific position that\n       * is relative to its home position at a specified speed which is expressed in RPM\n       * This method will return an error if position reporting is not supported\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.GoTo\n       */\n      goTo: {\n        name: \"GoTo\",\n        I: as,\n        O: Om,\n        kind: m.Unary\n      },\n      /**\n       * SetRPM instructs the motor to move at the specified RPM indefinitely.\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.SetRPM\n       */\n      setRPM: {\n        name: \"SetRPM\",\n        I: ts,\n        O: Cm,\n        kind: m.Unary\n      },\n      /**\n       * ResetZeroPosition sets the current position of the motor as the new zero position\n       * This method will return an error if position reporting is not supported\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.ResetZeroPosition\n       */\n      resetZeroPosition: {\n        name: \"ResetZeroPosition\",\n        I: ss,\n        O: Nm,\n        kind: m.Unary\n      },\n      /**\n       * Position reports the position of the robot's motor relative to its zero position\n       * This method will return an error if position reporting is not supported\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.GetPosition\n       */\n      getPosition: {\n        name: \"GetPosition\",\n        I: os,\n        O: Pm,\n        kind: m.Unary\n      },\n      /**\n       * GetProperties returns a message of booleans indicating which optional features the robot's motor supports\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.GetProperties\n       */\n      getProperties: {\n        name: \"GetProperties\",\n        I: ms,\n        O: qm,\n        kind: m.Unary\n      },\n      /**\n       * Stop turns the robot's motor off\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.Stop\n       */\n      stop: {\n        name: \"Stop\",\n        I: is,\n        O: Am,\n        kind: m.Unary\n      },\n      /**\n       * IsPowered returns true if the robot's motor is on\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.IsPowered\n       */\n      isPowered: {\n        name: \"IsPowered\",\n        I: rs,\n        O: Dm,\n        kind: m.Unary\n      },\n      /**\n       * IsMoving reports if a component is in motion\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.IsMoving\n       */\n      isMoving: {\n        name: \"IsMoving\",\n        I: cs,\n        O: Um,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.motor.v1.MotorService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  ls = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetLinearVelocityRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Lm = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetLinearVelocityResponse\", () => [{\n    no: 1,\n    name: \"linear_velocity\",\n    kind: \"message\",\n    T: qe\n  }]),\n  ds = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetAngularVelocityRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Bm = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetAngularVelocityResponse\", () => [{\n    no: 1,\n    name: \"angular_velocity\",\n    kind: \"message\",\n    T: qe\n  }]),\n  ps = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetCompassHeadingRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  xm = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetCompassHeadingResponse\", () => [{\n    no: 1,\n    name: \"value\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  us = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetOrientationRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Fm = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetOrientationResponse\", () => [{\n    no: 1,\n    name: \"orientation\",\n    kind: \"message\",\n    T: gr\n  }]),\n  gs = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Jm = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetPositionResponse\", () => [{\n    no: 1,\n    name: \"coordinate\",\n    kind: \"message\",\n    T: ze\n  }, {\n    no: 2,\n    name: \"altitude_m\",\n    kind: \"scalar\",\n    T: 2\n    /* ScalarType.FLOAT */\n  }]),\n  Ts = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetPropertiesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  zm = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetPropertiesResponse\", () => [{\n    no: 1,\n    name: \"linear_velocity_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 2,\n    name: \"angular_velocity_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"orientation_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 4,\n    name: \"position_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 5,\n    name: \"compass_heading_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 6,\n    name: \"linear_acceleration_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  ks = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetAccuracyRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Ym = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetAccuracyResponse\", () => [{\n    no: 1,\n    name: \"accuracy\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"scalar\",\n      T: 2\n      /* ScalarType.FLOAT */\n    }\n  }, {\n    no: 2,\n    name: \"position_hdop\",\n    kind: \"scalar\",\n    T: 2,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"position_vdop\",\n    kind: \"scalar\",\n    T: 2,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"position_nmea_gga_fix\",\n    kind: \"scalar\",\n    T: 5,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"compass_degrees_error\",\n    kind: \"scalar\",\n    T: 2,\n    opt: !0\n  }]),\n  ys = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetLinearAccelerationRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  $m = /* @__PURE__ */s.makeMessageType(\"viam.component.movementsensor.v1.GetLinearAccelerationResponse\", () => [{\n    no: 1,\n    name: \"linear_acceleration\",\n    kind: \"message\",\n    T: qe\n  }]),\n  dR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetAccuracyRequest: ks,\n    GetAccuracyResponse: Ym,\n    GetAngularVelocityRequest: ds,\n    GetAngularVelocityResponse: Bm,\n    GetCompassHeadingRequest: ps,\n    GetCompassHeadingResponse: xm,\n    GetLinearAccelerationRequest: ys,\n    GetLinearAccelerationResponse: $m,\n    GetLinearVelocityRequest: ls,\n    GetLinearVelocityResponse: Lm,\n    GetOrientationRequest: us,\n    GetOrientationResponse: Fm,\n    GetPositionRequest: gs,\n    GetPositionResponse: Jm,\n    GetPropertiesRequest: Ts,\n    GetPropertiesResponse: zm\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Vm = {\n    typeName: \"viam.component.movementsensor.v1.MovementSensorService\",\n    methods: {\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetLinearVelocity\n       */\n      getLinearVelocity: {\n        name: \"GetLinearVelocity\",\n        I: ls,\n        O: Lm,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetAngularVelocity\n       */\n      getAngularVelocity: {\n        name: \"GetAngularVelocity\",\n        I: ds,\n        O: Bm,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetCompassHeading\n       */\n      getCompassHeading: {\n        name: \"GetCompassHeading\",\n        I: ps,\n        O: xm,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetOrientation\n       */\n      getOrientation: {\n        name: \"GetOrientation\",\n        I: us,\n        O: Fm,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetPosition\n       */\n      getPosition: {\n        name: \"GetPosition\",\n        I: gs,\n        O: Jm,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetProperties\n       */\n      getProperties: {\n        name: \"GetProperties\",\n        I: Ts,\n        O: zm,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetAccuracy\n       */\n      getAccuracy: {\n        name: \"GetAccuracy\",\n        I: ks,\n        O: Ym,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetLinearAcceleration\n       */\n      getLinearAcceleration: {\n        name: \"GetLinearAcceleration\",\n        I: ys,\n        O: $m,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      },\n      /**\n       * GetReadings returns the readings of a sensor of the underlying robot.\n       *\n       * @generated from rpc viam.component.movementsensor.v1.MovementSensorService.GetReadings\n       */\n      getReadings: {\n        name: \"GetReadings\",\n        I: Ke,\n        O: ga,\n        kind: m.Unary\n      }\n    }\n  },\n  vs = /* @__PURE__ */s.makeMessageType(\"viam.component.powersensor.v1.GetVoltageRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Wm = /* @__PURE__ */s.makeMessageType(\"viam.component.powersensor.v1.GetVoltageResponse\", () => [{\n    no: 1,\n    name: \"volts\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"is_ac\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  hs = /* @__PURE__ */s.makeMessageType(\"viam.component.powersensor.v1.GetCurrentRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  jm = /* @__PURE__ */s.makeMessageType(\"viam.component.powersensor.v1.GetCurrentResponse\", () => [{\n    no: 1,\n    name: \"amperes\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"is_ac\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  fs = /* @__PURE__ */s.makeMessageType(\"viam.component.powersensor.v1.GetPowerRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Hm = /* @__PURE__ */s.makeMessageType(\"viam.component.powersensor.v1.GetPowerResponse\", () => [{\n    no: 1,\n    name: \"watts\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  e_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetCurrentRequest: hs,\n    GetCurrentResponse: jm,\n    GetPowerRequest: fs,\n    GetPowerResponse: Hm,\n    GetVoltageRequest: vs,\n    GetVoltageResponse: Wm\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Km = {\n    typeName: \"viam.component.powersensor.v1.PowerSensorService\",\n    methods: {\n      /**\n       * GetVoltage returns the voltage reading of a power sensor in volts\n       *\n       * @generated from rpc viam.component.powersensor.v1.PowerSensorService.GetVoltage\n       */\n      getVoltage: {\n        name: \"GetVoltage\",\n        I: vs,\n        O: Wm,\n        kind: m.Unary\n      },\n      /**\n       * GetCurrent returns the current reading of a power sensor in amperes\n       *\n       * @generated from rpc viam.component.powersensor.v1.PowerSensorService.GetCurrent\n       */\n      getCurrent: {\n        name: \"GetCurrent\",\n        I: hs,\n        O: jm,\n        kind: m.Unary\n      },\n      /**\n       * GetPower returns the power reading of a power sensor in watts\n       *\n       * @generated from rpc viam.component.powersensor.v1.PowerSensorService.GetPower\n       */\n      getPower: {\n        name: \"GetPower\",\n        I: fs,\n        O: Hm,\n        kind: m.Unary\n      },\n      /**\n       * GetReadings returns the readings of a sensor of the underlying robot.\n       *\n       * @generated from rpc viam.component.powersensor.v1.PowerSensorService.GetReadings\n       */\n      getReadings: {\n        name: \"GetReadings\",\n        I: Ke,\n        O: ga,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.powersensor.v1.PowerSensorService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  },\n  Rs = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.MoveRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"angle_deg\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Xm = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.MoveResponse\", []),\n  _s = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.GetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Qm = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.GetPositionResponse\", () => [{\n    no: 1,\n    name: \"position_deg\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }]),\n  Ss = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.StopRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Zm = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.StopResponse\", []),\n  pR = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.Status\", () => [{\n    no: 1,\n    name: \"position_deg\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }, {\n    no: 2,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Is = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.IsMovingRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ec = /* @__PURE__ */s.makeMessageType(\"viam.component.servo.v1.IsMovingResponse\", () => [{\n    no: 1,\n    name: \"is_moving\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  n_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetPositionRequest: _s,\n    GetPositionResponse: Qm,\n    IsMovingRequest: Is,\n    IsMovingResponse: ec,\n    MoveRequest: Rs,\n    MoveResponse: Xm,\n    Status: pR,\n    StopRequest: Ss,\n    StopResponse: Zm\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  nc = {\n    typeName: \"viam.component.servo.v1.ServoService\",\n    methods: {\n      /**\n       * Move requests the servo of the underlying robot to move.\n       * This will block until done or a new operation cancels this one\n       *\n       * @generated from rpc viam.component.servo.v1.ServoService.Move\n       */\n      move: {\n        name: \"Move\",\n        I: Rs,\n        O: Xm,\n        kind: m.Unary\n      },\n      /**\n       * GetPosition returns the current set angle (degrees) of the servo of the underlying robot.\n       *\n       * @generated from rpc viam.component.servo.v1.ServoService.GetPosition\n       */\n      getPosition: {\n        name: \"GetPosition\",\n        I: _s,\n        O: Qm,\n        kind: m.Unary\n      },\n      /**\n       * Stop stops a robot's servo\n       *\n       * @generated from rpc viam.component.servo.v1.ServoService.Stop\n       */\n      stop: {\n        name: \"Stop\",\n        I: Ss,\n        O: Zm,\n        kind: m.Unary\n      },\n      /**\n       * IsMoving reports if a component is in motion\n       *\n       * @generated from rpc viam.component.servo.v1.ServoService.IsMoving\n       */\n      isMoving: {\n        name: \"IsMoving\",\n        I: Is,\n        O: ec,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.servo.v1.ServoService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.servo.v1.ServoService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  ac = /* @__PURE__ */s.makeEnum(\"viam.robot.v1.PeerConnectionType\", [{\n    no: 0,\n    name: \"PEER_CONNECTION_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"PEER_CONNECTION_TYPE_GRPC\",\n    localName: \"GRPC\"\n  }, {\n    no: 2,\n    name: \"PEER_CONNECTION_TYPE_WEBRTC\",\n    localName: \"WEBRTC\"\n  }]),\n  tc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.TunnelRequest\", () => [{\n    no: 1,\n    name: \"destination_port\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }, {\n    no: 2,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  sc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.TunnelResponse\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  oc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ListTunnelsRequest\", []),\n  ic = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ListTunnelsResponse\", () => [{\n    no: 1,\n    name: \"tunnels\",\n    kind: \"message\",\n    T: rc,\n    repeated: !0\n  }]),\n  rc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.Tunnel\", () => [{\n    no: 1,\n    name: \"port\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }, {\n    no: 2,\n    name: \"connection_timeout\",\n    kind: \"message\",\n    T: F\n  }]),\n  mc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.FrameSystemConfig\", () => [{\n    no: 1,\n    name: \"frame\",\n    kind: \"message\",\n    T: rn\n  }, {\n    no: 2,\n    name: \"kinematics\",\n    kind: \"message\",\n    T: l\n  }]),\n  cc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.FrameSystemConfigRequest\", () => [{\n    no: 1,\n    name: \"supplemental_transforms\",\n    kind: \"message\",\n    T: rn,\n    repeated: !0\n  }]),\n  lc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.FrameSystemConfigResponse\", () => [{\n    no: 1,\n    name: \"frame_system_configs\",\n    kind: \"message\",\n    T: mc,\n    repeated: !0\n  }]),\n  Ms = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.TransformPoseRequest\", () => [{\n    no: 1,\n    name: \"source\",\n    kind: \"message\",\n    T: on\n  }, {\n    no: 2,\n    name: \"destination\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"supplemental_transforms\",\n    kind: \"message\",\n    T: rn,\n    repeated: !0\n  }]),\n  dc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.TransformPoseResponse\", () => [{\n    no: 1,\n    name: \"pose\",\n    kind: \"message\",\n    T: on\n  }]),\n  bs = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.TransformPCDRequest\", () => [{\n    no: 1,\n    name: \"point_cloud_pcd\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }, {\n    no: 2,\n    name: \"source\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"destination\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  pc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.TransformPCDResponse\", () => [{\n    no: 1,\n    name: \"point_cloud_pcd\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  uc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ResourceNamesRequest\", []),\n  gc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ResourceNamesResponse\", () => [{\n    no: 1,\n    name: \"resources\",\n    kind: \"message\",\n    T: x,\n    repeated: !0\n  }]),\n  Tc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ResourceRPCSubtype\", () => [{\n    no: 1,\n    name: \"subtype\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 2,\n    name: \"proto_service\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  kc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ResourceRPCSubtypesRequest\", []),\n  yc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ResourceRPCSubtypesResponse\", () => [{\n    no: 1,\n    name: \"resource_rpc_subtypes\",\n    kind: \"message\",\n    T: Tc,\n    repeated: !0\n  }]),\n  vc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.Operation\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"method\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"arguments\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 4,\n    name: \"started\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 5,\n    name: \"session_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  hc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetOperationsRequest\", []),\n  fc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetOperationsResponse\", () => [{\n    no: 1,\n    name: \"operations\",\n    kind: \"message\",\n    T: vc,\n    repeated: !0\n  }]),\n  Rc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.CancelOperationRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  _c = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.CancelOperationResponse\", []),\n  Sc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.BlockForOperationRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ic = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.BlockForOperationResponse\", []),\n  Mc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.PeerConnectionInfo\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(ac)\n  }, {\n    no: 2,\n    name: \"remote_address\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"local_address\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  bc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.Session\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"peer_connection_info\",\n    kind: \"message\",\n    T: Mc,\n    opt: !0\n  }]),\n  wc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetSessionsRequest\", []),\n  Ec = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetSessionsResponse\", () => [{\n    no: 1,\n    name: \"sessions\",\n    kind: \"message\",\n    T: bc,\n    repeated: !0\n  }]),\n  Oc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ModuleModel\", () => [{\n    no: 1,\n    name: \"module_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"model\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"api\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"from_local_module\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  ws = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetModelsFromModulesRequest\", []),\n  Cc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetModelsFromModulesResponse\", () => [{\n    no: 1,\n    name: \"models\",\n    kind: \"message\",\n    T: Oc,\n    repeated: !0\n  }]),\n  Es = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.Status\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 2,\n    name: \"status\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 3,\n    name: \"last_reconfigured\",\n    kind: \"message\",\n    T: _\n  }]),\n  Nc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetStatusRequest\", () => [{\n    no: 1,\n    name: \"resource_names\",\n    kind: \"message\",\n    T: x,\n    repeated: !0\n  }]),\n  Pc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetStatusResponse\", () => [{\n    no: 1,\n    name: \"status\",\n    kind: \"message\",\n    T: Es,\n    repeated: !0\n  }]),\n  Ac = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.StreamStatusRequest\", () => [{\n    no: 1,\n    name: \"resource_names\",\n    kind: \"message\",\n    T: x,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"every\",\n    kind: \"message\",\n    T: F\n  }]),\n  Dc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.StreamStatusResponse\", () => [{\n    no: 1,\n    name: \"status\",\n    kind: \"message\",\n    T: Es,\n    repeated: !0\n  }]),\n  qc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.StopExtraParameters\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 2,\n    name: \"params\",\n    kind: \"message\",\n    T: l\n  }]),\n  Uc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.StopAllRequest\", () => [{\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: qc,\n    repeated: !0\n  }]),\n  Gc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.StopAllResponse\", []),\n  Os = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.StartSessionRequest\", () => [{\n    no: 1,\n    name: \"resume\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Lc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.StartSessionResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"heartbeat_window\",\n    kind: \"message\",\n    T: F\n  }]),\n  Cs = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.SendSessionHeartbeatRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Bc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.SendSessionHeartbeatResponse\", []),\n  xc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.LogRequest\", () => [{\n    no: 1,\n    name: \"logs\",\n    kind: \"message\",\n    T: On,\n    repeated: !0\n  }]),\n  Fc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.LogResponse\", []),\n  Jc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetCloudMetadataRequest\", []),\n  Ns = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetCloudMetadataResponse\", () => [{\n    no: 1,\n    name: \"robot_part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"primary_org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"machine_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"machine_part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ps = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.RestartModuleRequest\", () => [{\n    no: 1,\n    name: \"module_id\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"id_or_name\"\n  }, {\n    no: 2,\n    name: \"module_name\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"id_or_name\"\n  }]),\n  zc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.RestartModuleResponse\", []),\n  Yc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ShutdownRequest\", []),\n  $c = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ShutdownResponse\", []),\n  Vc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetMachineStatusRequest\", []),\n  Wc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetMachineStatusResponse\", () => [{\n    no: 1,\n    name: \"resources\",\n    kind: \"message\",\n    T: Hc,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"config\",\n    kind: \"message\",\n    T: Xc\n  }, {\n    no: 3,\n    name: \"state\",\n    kind: \"enum\",\n    T: s.getEnumType(jc)\n  }]),\n  jc = /* @__PURE__ */s.makeEnum(\"viam.robot.v1.GetMachineStatusResponse.State\", [{\n    no: 0,\n    name: \"STATE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"STATE_INITIALIZING\",\n    localName: \"INITIALIZING\"\n  }, {\n    no: 2,\n    name: \"STATE_RUNNING\",\n    localName: \"RUNNING\"\n  }]),\n  Hc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ResourceStatus\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 2,\n    name: \"state\",\n    kind: \"enum\",\n    T: s.getEnumType(Kc)\n  }, {\n    no: 3,\n    name: \"last_updated\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"error\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"cloud_metadata\",\n    kind: \"message\",\n    T: Ns,\n    opt: !0\n  }]),\n  Kc = /* @__PURE__ */s.makeEnum(\"viam.robot.v1.ResourceStatus.State\", [{\n    no: 0,\n    name: \"STATE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"STATE_UNCONFIGURED\",\n    localName: \"UNCONFIGURED\"\n  }, {\n    no: 2,\n    name: \"STATE_CONFIGURING\",\n    localName: \"CONFIGURING\"\n  }, {\n    no: 3,\n    name: \"STATE_READY\",\n    localName: \"READY\"\n  }, {\n    no: 4,\n    name: \"STATE_REMOVING\",\n    localName: \"REMOVING\"\n  }, {\n    no: 5,\n    name: \"STATE_UNHEALTHY\",\n    localName: \"UNHEALTHY\"\n  }]),\n  Xc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.ConfigStatus\", () => [{\n    no: 1,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"last_updated\",\n    kind: \"message\",\n    T: _\n  }]),\n  Qc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetVersionRequest\", []),\n  Zc = /* @__PURE__ */s.makeMessageType(\"viam.robot.v1.GetVersionResponse\", () => [{\n    no: 1,\n    name: \"platform\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"api_version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  a_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    BlockForOperationRequest: Sc,\n    BlockForOperationResponse: Ic,\n    CancelOperationRequest: Rc,\n    CancelOperationResponse: _c,\n    ConfigStatus: Xc,\n    FrameSystemConfig: mc,\n    FrameSystemConfigRequest: cc,\n    FrameSystemConfigResponse: lc,\n    GetCloudMetadataRequest: Jc,\n    GetCloudMetadataResponse: Ns,\n    GetMachineStatusRequest: Vc,\n    GetMachineStatusResponse: Wc,\n    GetMachineStatusResponse_State: jc,\n    GetModelsFromModulesRequest: ws,\n    GetModelsFromModulesResponse: Cc,\n    GetOperationsRequest: hc,\n    GetOperationsResponse: fc,\n    GetSessionsRequest: wc,\n    GetSessionsResponse: Ec,\n    GetStatusRequest: Nc,\n    GetStatusResponse: Pc,\n    GetVersionRequest: Qc,\n    GetVersionResponse: Zc,\n    ListTunnelsRequest: oc,\n    ListTunnelsResponse: ic,\n    LogRequest: xc,\n    LogResponse: Fc,\n    ModuleModel: Oc,\n    Operation: vc,\n    PeerConnectionInfo: Mc,\n    PeerConnectionType: ac,\n    ResourceNamesRequest: uc,\n    ResourceNamesResponse: gc,\n    ResourceRPCSubtype: Tc,\n    ResourceRPCSubtypesRequest: kc,\n    ResourceRPCSubtypesResponse: yc,\n    ResourceStatus: Hc,\n    ResourceStatus_State: Kc,\n    RestartModuleRequest: Ps,\n    RestartModuleResponse: zc,\n    SendSessionHeartbeatRequest: Cs,\n    SendSessionHeartbeatResponse: Bc,\n    Session: bc,\n    ShutdownRequest: Yc,\n    ShutdownResponse: $c,\n    StartSessionRequest: Os,\n    StartSessionResponse: Lc,\n    Status: Es,\n    StopAllRequest: Uc,\n    StopAllResponse: Gc,\n    StopExtraParameters: qc,\n    StreamStatusRequest: Ac,\n    StreamStatusResponse: Dc,\n    TransformPCDRequest: bs,\n    TransformPCDResponse: pc,\n    TransformPoseRequest: Ms,\n    TransformPoseResponse: dc,\n    Tunnel: rc,\n    TunnelRequest: tc,\n    TunnelResponse: sc\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  As = {\n    typeName: \"viam.robot.v1.RobotService\",\n    methods: {\n      /**\n       * @generated from rpc viam.robot.v1.RobotService.GetOperations\n       */\n      getOperations: {\n        name: \"GetOperations\",\n        I: hc,\n        O: fc,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.robot.v1.RobotService.GetSessions\n       */\n      getSessions: {\n        name: \"GetSessions\",\n        I: wc,\n        O: Ec,\n        kind: m.Unary\n      },\n      /**\n       * ResourceNames returns the list of all resources.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.ResourceNames\n       */\n      resourceNames: {\n        name: \"ResourceNames\",\n        I: uc,\n        O: gc,\n        kind: m.Unary\n      },\n      /**\n       * ResourceRPCSubtypes returns the list of all resource types.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.ResourceRPCSubtypes\n       */\n      resourceRPCSubtypes: {\n        name: \"ResourceRPCSubtypes\",\n        I: kc,\n        O: yc,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.robot.v1.RobotService.CancelOperation\n       */\n      cancelOperation: {\n        name: \"CancelOperation\",\n        I: Rc,\n        O: _c,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.robot.v1.RobotService.BlockForOperation\n       */\n      blockForOperation: {\n        name: \"BlockForOperation\",\n        I: Sc,\n        O: Ic,\n        kind: m.Unary\n      },\n      /**\n       * GetModelsFromModules returns the list of models supported in modules on the machine.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.GetModelsFromModules\n       */\n      getModelsFromModules: {\n        name: \"GetModelsFromModules\",\n        I: ws,\n        O: Cc,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.robot.v1.RobotService.FrameSystemConfig\n       */\n      frameSystemConfig: {\n        name: \"FrameSystemConfig\",\n        I: cc,\n        O: lc,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.robot.v1.RobotService.TransformPose\n       */\n      transformPose: {\n        name: \"TransformPose\",\n        I: Ms,\n        O: dc,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.robot.v1.RobotService.TransformPCD\n       */\n      transformPCD: {\n        name: \"TransformPCD\",\n        I: bs,\n        O: pc,\n        kind: m.Unary\n      },\n      /**\n       * GetStatus returns the list of all statuses requested. An empty request signifies all resources.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.GetStatus\n       * @deprecated\n       */\n      getStatus: {\n        name: \"GetStatus\",\n        I: Nc,\n        O: Pc,\n        kind: m.Unary\n      },\n      /**\n       * StreamStatus periodically sends the status of all statuses requested. An empty request signifies all resources.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.StreamStatus\n       * @deprecated\n       */\n      streamStatus: {\n        name: \"StreamStatus\",\n        I: Ac,\n        O: Dc,\n        kind: m.ServerStreaming\n      },\n      /**\n       * StopAll will stop all current and outstanding operations for the robot and stops all actuators and movement\n       *\n       * @generated from rpc viam.robot.v1.RobotService.StopAll\n       */\n      stopAll: {\n        name: \"StopAll\",\n        I: Uc,\n        O: Gc,\n        kind: m.Unary\n      },\n      /**\n       * StartSession creates a new session that expects at least one heartbeat within the returned window.\n       * If the window lapses, any resources that have safety heart monitored methods, where this session was\n       * the last caller on the resource, will be stopped.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.StartSession\n       */\n      startSession: {\n        name: \"StartSession\",\n        I: Os,\n        O: Lc,\n        kind: m.Unary\n      },\n      /**\n       * SendSessionHeartbeat sends a heartbeat to the given session. If the session has expired, a\n       * SESSION_EXPIRED error will be returned.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.SendSessionHeartbeat\n       */\n      sendSessionHeartbeat: {\n        name: \"SendSessionHeartbeat\",\n        I: Cs,\n        O: Bc,\n        kind: m.Unary\n      },\n      /**\n       * Log sends logs to be logged by this robot. Currently used for module logging.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.Log\n       */\n      log: {\n        name: \"Log\",\n        I: xc,\n        O: Fc,\n        kind: m.Unary\n      },\n      /**\n       * GetCloudMetadata returns app-related information about the robot.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.GetCloudMetadata\n       */\n      getCloudMetadata: {\n        name: \"GetCloudMetadata\",\n        I: Jc,\n        O: Ns,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.robot.v1.RobotService.RestartModule\n       */\n      restartModule: {\n        name: \"RestartModule\",\n        I: Ps,\n        O: zc,\n        kind: m.Unary\n      },\n      /**\n       * Shutdown shuts down the robot.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.Shutdown\n       */\n      shutdown: {\n        name: \"Shutdown\",\n        I: Yc,\n        O: $c,\n        kind: m.Unary\n      },\n      /**\n       * GetMachineStatus returns the current status of the robot.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.GetMachineStatus\n       */\n      getMachineStatus: {\n        name: \"GetMachineStatus\",\n        I: Vc,\n        O: Wc,\n        kind: m.Unary\n      },\n      /**\n       * GetVersion returns version information about the robot.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.GetVersion\n       */\n      getVersion: {\n        name: \"GetVersion\",\n        I: Qc,\n        O: Zc,\n        kind: m.Unary\n      },\n      /**\n       * Tunnel tunnels traffic to the destination port of the robot server.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.Tunnel\n       */\n      tunnel: {\n        name: \"Tunnel\",\n        I: tc,\n        O: sc,\n        kind: m.BiDiStreaming\n      },\n      /**\n       * ListTunnels lists all available tunnels configured on the robot.\n       *\n       * @generated from rpc viam.robot.v1.RobotService.ListTunnels\n       */\n      listTunnels: {\n        name: \"ListTunnels\",\n        I: oc,\n        O: ic,\n        kind: m.Unary\n      }\n    }\n  },\n  Ds = /* @__PURE__ */s.makeEnum(\"viam.app.v1.CredentialsType\", [{\n    no: 0,\n    name: \"CREDENTIALS_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"CREDENTIALS_TYPE_INTERNAL\",\n    localName: \"INTERNAL\"\n  }, {\n    no: 2,\n    name: \"CREDENTIALS_TYPE_API_KEY\",\n    localName: \"API_KEY\"\n  }, {\n    no: 3,\n    name: \"CREDENTIALS_TYPE_ROBOT_SECRET\",\n    localName: \"ROBOT_SECRET\"\n  }, {\n    no: 4,\n    name: \"CREDENTIALS_TYPE_ROBOT_LOCATION_SECRET\",\n    localName: \"ROBOT_LOCATION_SECRET\"\n  }]),\n  el = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RobotConfig\", () => [{\n    no: 1,\n    name: \"cloud\",\n    kind: \"message\",\n    T: tl\n  }, {\n    no: 2,\n    name: \"remotes\",\n    kind: \"message\",\n    T: Rl,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"components\",\n    kind: \"message\",\n    T: qs,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"processes\",\n    kind: \"message\",\n    T: sl,\n    repeated: !0\n  }, {\n    no: 5,\n    name: \"services\",\n    kind: \"message\",\n    T: ol,\n    repeated: !0\n  }, {\n    no: 6,\n    name: \"network\",\n    kind: \"message\",\n    T: il,\n    opt: !0\n  }, {\n    no: 7,\n    name: \"auth\",\n    kind: \"message\",\n    T: cl,\n    opt: !0\n  }, {\n    no: 8,\n    name: \"debug\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }, {\n    no: 9,\n    name: \"modules\",\n    kind: \"message\",\n    T: Ml,\n    repeated: !0\n  }, {\n    no: 10,\n    name: \"disable_partial_start\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }, {\n    no: 11,\n    name: \"packages\",\n    kind: \"message\",\n    T: bl,\n    repeated: !0\n  }, {\n    no: 12,\n    name: \"overwrite_fragment_status\",\n    kind: \"message\",\n    T: ka,\n    repeated: !0\n  }, {\n    no: 13,\n    name: \"enable_web_profile\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 14,\n    name: \"log\",\n    kind: \"message\",\n    T: nl,\n    repeated: !0\n  }, {\n    no: 15,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 16,\n    name: \"maintenance\",\n    kind: \"message\",\n    T: wl,\n    opt: !0\n  }, {\n    no: 17,\n    name: \"disable_log_deduplication\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  nl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LogPatternConfig\", () => [{\n    no: 1,\n    name: \"pattern\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"level\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  al = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LocationSecret\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ka = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AppValidationStatus\", () => [{\n    no: 1,\n    name: \"error\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  tl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CloudConfig\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"fqdn\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"local_fqdn\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"managed_by\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"signaling_address\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"signaling_insecure\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 7,\n    name: \"location_secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 8,\n    name: \"secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 9,\n    name: \"location_secrets\",\n    kind: \"message\",\n    T: al,\n    repeated: !0\n  }, {\n    no: 10,\n    name: \"primary_org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 11,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 12,\n    name: \"machine_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  qs = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ComponentConfig\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"model\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"frame\",\n    kind: \"message\",\n    T: Us\n  }, {\n    no: 6,\n    name: \"depends_on\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 7,\n    name: \"service_configs\",\n    kind: \"message\",\n    T: ya,\n    repeated: !0\n  }, {\n    no: 8,\n    name: \"attributes\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 9,\n    name: \"api\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 10,\n    name: \"log_configuration\",\n    kind: \"message\",\n    T: Gs\n  }]),\n  ya = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ResourceLevelServiceConfig\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"attributes\",\n    kind: \"message\",\n    T: l\n  }]),\n  sl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ProcessConfig\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"args\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"cwd\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"one_shot\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 6,\n    name: \"log\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 7,\n    name: \"stop_signal\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 8,\n    name: \"stop_timeout\",\n    kind: \"message\",\n    T: F\n  }, {\n    no: 9,\n    name: \"env\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  }, {\n    no: 10,\n    name: \"username\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ol = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ServiceConfig\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"attributes\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 5,\n    name: \"depends_on\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 6,\n    name: \"model\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 9,\n    name: \"api\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 10,\n    name: \"service_configs\",\n    kind: \"message\",\n    T: ya,\n    repeated: !0\n  }, {\n    no: 11,\n    name: \"log_configuration\",\n    kind: \"message\",\n    T: Gs\n  }]),\n  il = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.NetworkConfig\", () => [{\n    no: 1,\n    name: \"fqdn\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"bind_address\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"tls_cert_file\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"tls_key_file\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"sessions\",\n    kind: \"message\",\n    T: rl\n  }, {\n    no: 6,\n    name: \"traffic_tunnel_endpoints\",\n    kind: \"message\",\n    T: ml,\n    repeated: !0\n  }, {\n    no: 7,\n    name: \"no_tls\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  rl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.SessionsConfig\", () => [{\n    no: 1,\n    name: \"heartbeat_window\",\n    kind: \"message\",\n    T: F\n  }]),\n  ml = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.TrafficTunnelEndpoint\", () => [{\n    no: 1,\n    name: \"port\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 2,\n    name: \"connection_timeout\",\n    kind: \"message\",\n    T: F\n  }]),\n  cl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AuthConfig\", () => [{\n    no: 1,\n    name: \"handlers\",\n    kind: \"message\",\n    T: pl,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"tls_auth_entities\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"external_auth_config\",\n    kind: \"message\",\n    T: dl,\n    opt: !0\n  }]),\n  ll = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.JWKSFile\", () => [{\n    no: 1,\n    name: \"json\",\n    kind: \"message\",\n    T: l\n  }]),\n  dl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ExternalAuthConfig\", () => [{\n    no: 1,\n    name: \"jwks\",\n    kind: \"message\",\n    T: ll\n  }]),\n  pl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AuthHandlerConfig\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(Ds)\n  }, {\n    no: 5,\n    name: \"config\",\n    kind: \"message\",\n    T: l\n  }]),\n  Us = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Frame\", () => [{\n    no: 1,\n    name: \"parent\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"translation\",\n    kind: \"message\",\n    T: ul\n  }, {\n    no: 3,\n    name: \"orientation\",\n    kind: \"message\",\n    T: gl\n  }, {\n    no: 4,\n    name: \"geometry\",\n    kind: \"message\",\n    T: He\n  }]),\n  Gs = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LogConfiguration\", () => [{\n    no: 1,\n    name: \"level\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ul = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Translation\", () => [{\n    no: 1,\n    name: \"x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  gl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Orientation\", () => [{\n    no: 1,\n    name: \"no_orientation\",\n    kind: \"message\",\n    T: Tl,\n    oneof: \"type\"\n  }, {\n    no: 2,\n    name: \"vector_radians\",\n    kind: \"message\",\n    T: kl,\n    oneof: \"type\"\n  }, {\n    no: 3,\n    name: \"vector_degrees\",\n    kind: \"message\",\n    T: yl,\n    oneof: \"type\"\n  }, {\n    no: 4,\n    name: \"euler_angles\",\n    kind: \"message\",\n    T: vl,\n    oneof: \"type\"\n  }, {\n    no: 5,\n    name: \"axis_angles\",\n    kind: \"message\",\n    T: hl,\n    oneof: \"type\"\n  }, {\n    no: 6,\n    name: \"quaternion\",\n    kind: \"message\",\n    T: fl,\n    oneof: \"type\"\n  }]),\n  Tl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Orientation.NoOrientation\", [], {\n    localName: \"Orientation_NoOrientation\"\n  }),\n  kl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Orientation.OrientationVectorRadians\", () => [{\n    no: 1,\n    name: \"theta\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }], {\n    localName: \"Orientation_OrientationVectorRadians\"\n  }),\n  yl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Orientation.OrientationVectorDegrees\", () => [{\n    no: 1,\n    name: \"theta\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }], {\n    localName: \"Orientation_OrientationVectorDegrees\"\n  }),\n  vl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Orientation.EulerAngles\", () => [{\n    no: 1,\n    name: \"roll\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"pitch\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"yaw\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }], {\n    localName: \"Orientation_EulerAngles\"\n  }),\n  hl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Orientation.AxisAngles\", () => [{\n    no: 1,\n    name: \"theta\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }], {\n    localName: \"Orientation_AxisAngles\"\n  }),\n  fl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Orientation.Quaternion\", () => [{\n    no: 1,\n    name: \"w\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"x\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"y\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"z\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }], {\n    localName: \"Orientation_Quaternion\"\n  }),\n  Rl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RemoteConfig\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"address\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"frame\",\n    kind: \"message\",\n    T: Us\n  }, {\n    no: 4,\n    name: \"auth\",\n    kind: \"message\",\n    T: _l\n  }, {\n    no: 5,\n    name: \"managed_by\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"insecure\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 7,\n    name: \"connection_check_interval\",\n    kind: \"message\",\n    T: F\n  }, {\n    no: 8,\n    name: \"reconnect_interval\",\n    kind: \"message\",\n    T: F\n  }, {\n    no: 9,\n    name: \"service_configs\",\n    kind: \"message\",\n    T: ya,\n    repeated: !0\n  }, {\n    no: 10,\n    name: \"secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  _l = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RemoteAuth\", () => [{\n    no: 1,\n    name: \"credentials\",\n    kind: \"message\",\n    T: Sl\n  }, {\n    no: 2,\n    name: \"entity\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Sl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RemoteAuth.Credentials\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(Ds)\n  }, {\n    no: 2,\n    name: \"payload\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }], {\n    localName: \"RemoteAuth_Credentials\"\n  }),\n  Il = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AgentInfo\", () => [{\n    no: 1,\n    name: \"host\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"os\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"ips\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"git_revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"platform\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 7,\n    name: \"platform_tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  uR = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ConfigRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"agent_info\",\n    kind: \"message\",\n    T: Il,\n    opt: !0\n  }]),\n  gR = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ConfigResponse\", () => [{\n    no: 1,\n    name: \"config\",\n    kind: \"message\",\n    T: el\n  }]),\n  TR = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CertificateRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  kR = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CertificateResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"tls_certificate\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"tls_private_key\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  yR = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LogRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"logs\",\n    kind: \"message\",\n    T: On,\n    repeated: !0\n  }]),\n  vR = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LogResponse\", []),\n  hR = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.NeedsRestartRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  fR = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.NeedsRestartResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"must_restart\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"restart_check_interval\",\n    kind: \"message\",\n    T: F\n  }]),\n  Ml = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ModuleConfig\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"path\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"log_level\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"module_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"env\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  }, {\n    no: 7,\n    name: \"status\",\n    kind: \"message\",\n    T: ka\n  }, {\n    no: 8,\n    name: \"first_run_timeout\",\n    kind: \"message\",\n    T: F\n  }]),\n  bl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.PackageConfig\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"package\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"status\",\n    kind: \"message\",\n    T: ka\n  }]),\n  wl = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MaintenanceConfig\", () => [{\n    no: 1,\n    name: \"sensor_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 2,\n    name: \"maintenance_allowed_key\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  t_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    AgentInfo: Il,\n    AppValidationStatus: ka,\n    AuthConfig: cl,\n    AuthHandlerConfig: pl,\n    CertificateRequest: TR,\n    CertificateResponse: kR,\n    CloudConfig: tl,\n    ComponentConfig: qs,\n    ConfigRequest: uR,\n    ConfigResponse: gR,\n    CredentialsType: Ds,\n    ExternalAuthConfig: dl,\n    Frame: Us,\n    JWKSFile: ll,\n    LocationSecret: al,\n    LogConfiguration: Gs,\n    LogPatternConfig: nl,\n    LogRequest: yR,\n    LogResponse: vR,\n    MaintenanceConfig: wl,\n    ModuleConfig: Ml,\n    NeedsRestartRequest: hR,\n    NeedsRestartResponse: fR,\n    NetworkConfig: il,\n    Orientation: gl,\n    Orientation_AxisAngles: hl,\n    Orientation_EulerAngles: vl,\n    Orientation_NoOrientation: Tl,\n    Orientation_OrientationVectorDegrees: yl,\n    Orientation_OrientationVectorRadians: kl,\n    Orientation_Quaternion: fl,\n    PackageConfig: bl,\n    ProcessConfig: sl,\n    RemoteAuth: _l,\n    RemoteAuth_Credentials: Sl,\n    RemoteConfig: Rl,\n    ResourceLevelServiceConfig: ya,\n    RobotConfig: el,\n    ServiceConfig: ol,\n    SessionsConfig: rl,\n    TrafficTunnelEndpoint: ml,\n    Translation: ul\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Ls = /* @__PURE__ */s.makeMessageType(\"viam.service.discovery.v1.DiscoverResourcesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  El = /* @__PURE__ */s.makeMessageType(\"viam.service.discovery.v1.DiscoverResourcesResponse\", () => [{\n    no: 1,\n    name: \"discoveries\",\n    kind: \"message\",\n    T: qs,\n    repeated: !0\n  }]),\n  s_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    DiscoverResourcesRequest: Ls,\n    DiscoverResourcesResponse: El\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Ol = {\n    typeName: \"viam.service.discovery.v1.DiscoveryService\",\n    methods: {\n      /**\n       * DiscoverResources returns the list of all discovered viam resources connected to the viam-server machine.\n       *\n       * @generated from rpc viam.service.discovery.v1.DiscoveryService.DiscoverResources\n       */\n      discoverResources: {\n        name: \"DiscoverResources\",\n        I: Ls,\n        O: El,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.service.discovery.v1.DiscoveryService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  },\n  Cl = /* @__PURE__ */s.makeEnum(\"viam.service.motion.v1.PlanState\", [{\n    no: 0,\n    name: \"PLAN_STATE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"PLAN_STATE_IN_PROGRESS\",\n    localName: \"IN_PROGRESS\"\n  }, {\n    no: 2,\n    name: \"PLAN_STATE_STOPPED\",\n    localName: \"STOPPED\"\n  }, {\n    no: 3,\n    name: \"PLAN_STATE_SUCCEEDED\",\n    localName: \"SUCCEEDED\"\n  }, {\n    no: 4,\n    name: \"PLAN_STATE_FAILED\",\n    localName: \"FAILED\"\n  }]),\n  Bs = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.MoveRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"destination\",\n    kind: \"message\",\n    T: on\n  }, {\n    no: 3,\n    name: \"component_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 4,\n    name: \"world_state\",\n    kind: \"message\",\n    T: hr,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"constraints\",\n    kind: \"message\",\n    T: Bl,\n    opt: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Nl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.MoveResponse\", () => [{\n    no: 1,\n    name: \"success\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  xs = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.MoveOnMapRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"destination\",\n    kind: \"message\",\n    T: Ue\n  }, {\n    no: 3,\n    name: \"component_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 4,\n    name: \"slam_service_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 5,\n    name: \"motion_configuration\",\n    kind: \"message\",\n    T: Fs,\n    opt: !0\n  }, {\n    no: 6,\n    name: \"obstacles\",\n    kind: \"message\",\n    T: He,\n    repeated: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Pl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.MoveOnMapResponse\", () => [{\n    no: 1,\n    name: \"execution_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Al = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.ObstacleDetector\", () => [{\n    no: 1,\n    name: \"vision_service\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 2,\n    name: \"camera\",\n    kind: \"message\",\n    T: x\n  }]),\n  Fs = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.MotionConfiguration\", () => [{\n    no: 1,\n    name: \"obstacle_detectors\",\n    kind: \"message\",\n    T: Al,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"position_polling_frequency_hz\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"obstacle_polling_frequency_hz\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"plan_deviation_m\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"linear_m_per_sec\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 6,\n    name: \"angular_degs_per_sec\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }]),\n  Js = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.MoveOnGlobeRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"destination\",\n    kind: \"message\",\n    T: ze\n  }, {\n    no: 3,\n    name: \"heading\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"component_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 5,\n    name: \"movement_sensor_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 6,\n    name: \"obstacles\",\n    kind: \"message\",\n    T: ia,\n    repeated: !0\n  }, {\n    no: 7,\n    name: \"motion_configuration\",\n    kind: \"message\",\n    T: Fs,\n    opt: !0\n  }, {\n    no: 8,\n    name: \"bounding_regions\",\n    kind: \"message\",\n    T: ia,\n    repeated: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Dl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.MoveOnGlobeResponse\", () => [{\n    no: 1,\n    name: \"execution_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  zs = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.GetPoseRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"component_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 3,\n    name: \"destination_frame\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"supplemental_transforms\",\n    kind: \"message\",\n    T: rn,\n    repeated: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  ql = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.GetPoseResponse\", () => [{\n    no: 1,\n    name: \"pose\",\n    kind: \"message\",\n    T: on\n  }]),\n  Ys = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.StopPlanRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"component_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Ul = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.StopPlanResponse\", []),\n  $s = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.ListPlanStatusesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"only_active_plans\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Gl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.ListPlanStatusesResponse\", () => [{\n    no: 1,\n    name: \"plan_statuses_with_ids\",\n    kind: \"message\",\n    T: Yl,\n    repeated: !0\n  }]),\n  Vs = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.GetPlanRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"component_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 3,\n    name: \"last_plan_only\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 4,\n    name: \"execution_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Ll = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.GetPlanResponse\", () => [{\n    no: 1,\n    name: \"current_plan_with_status\",\n    kind: \"message\",\n    T: Xa\n  }, {\n    no: 2,\n    name: \"replan_history\",\n    kind: \"message\",\n    T: Xa,\n    repeated: !0\n  }]),\n  Bl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.Constraints\", () => [{\n    no: 1,\n    name: \"linear_constraint\",\n    kind: \"message\",\n    T: xl,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"orientation_constraint\",\n    kind: \"message\",\n    T: Fl,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"collision_specification\",\n    kind: \"message\",\n    T: Jl,\n    repeated: !0\n  }]),\n  xl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.LinearConstraint\", () => [{\n    no: 1,\n    name: \"line_tolerance_mm\",\n    kind: \"scalar\",\n    T: 2,\n    opt: !0\n  }, {\n    no: 2,\n    name: \"orientation_tolerance_degs\",\n    kind: \"scalar\",\n    T: 2,\n    opt: !0\n  }]),\n  Fl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.OrientationConstraint\", () => [{\n    no: 1,\n    name: \"orientation_tolerance_degs\",\n    kind: \"scalar\",\n    T: 2,\n    opt: !0\n  }]),\n  Jl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.CollisionSpecification\", () => [{\n    no: 1,\n    name: \"allows\",\n    kind: \"message\",\n    T: zl,\n    repeated: !0\n  }]),\n  zl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.CollisionSpecification.AllowedFrameCollisions\", () => [{\n    no: 1,\n    name: \"frame1\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"frame2\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }], {\n    localName: \"CollisionSpecification_AllowedFrameCollisions\"\n  }),\n  Xa = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.PlanWithStatus\", () => [{\n    no: 1,\n    name: \"plan\",\n    kind: \"message\",\n    T: $l\n  }, {\n    no: 2,\n    name: \"status\",\n    kind: \"message\",\n    T: ra\n  }, {\n    no: 3,\n    name: \"status_history\",\n    kind: \"message\",\n    T: ra,\n    repeated: !0\n  }]),\n  Yl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.PlanStatusWithID\", () => [{\n    no: 1,\n    name: \"plan_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"component_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 3,\n    name: \"execution_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"status\",\n    kind: \"message\",\n    T: ra\n  }]),\n  ra = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.PlanStatus\", () => [{\n    no: 1,\n    name: \"state\",\n    kind: \"enum\",\n    T: s.getEnumType(Cl)\n  }, {\n    no: 2,\n    name: \"timestamp\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 3,\n    name: \"reason\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  $l = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.Plan\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"component_name\",\n    kind: \"message\",\n    T: x\n  }, {\n    no: 3,\n    name: \"execution_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"steps\",\n    kind: \"message\",\n    T: Vl,\n    repeated: !0\n  }]),\n  Vl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.PlanStep\", () => [{\n    no: 1,\n    name: \"step\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"message\",\n      T: Wl\n    }\n  }]),\n  Wl = /* @__PURE__ */s.makeMessageType(\"viam.service.motion.v1.ComponentState\", () => [{\n    no: 1,\n    name: \"pose\",\n    kind: \"message\",\n    T: Ue\n  }]),\n  RR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    CollisionSpecification: Jl,\n    CollisionSpecification_AllowedFrameCollisions: zl,\n    ComponentState: Wl,\n    Constraints: Bl,\n    GetPlanRequest: Vs,\n    GetPlanResponse: Ll,\n    GetPoseRequest: zs,\n    GetPoseResponse: ql,\n    LinearConstraint: xl,\n    ListPlanStatusesRequest: $s,\n    ListPlanStatusesResponse: Gl,\n    MotionConfiguration: Fs,\n    MoveOnGlobeRequest: Js,\n    MoveOnGlobeResponse: Dl,\n    MoveOnMapRequest: xs,\n    MoveOnMapResponse: Pl,\n    MoveRequest: Bs,\n    MoveResponse: Nl,\n    ObstacleDetector: Al,\n    OrientationConstraint: Fl,\n    Plan: $l,\n    PlanState: Cl,\n    PlanStatus: ra,\n    PlanStatusWithID: Yl,\n    PlanStep: Vl,\n    PlanWithStatus: Xa,\n    StopPlanRequest: Ys,\n    StopPlanResponse: Ul\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  jl = {\n    typeName: \"viam.service.motion.v1.MotionService\",\n    methods: {\n      /**\n       * @generated from rpc viam.service.motion.v1.MotionService.Move\n       */\n      move: {\n        name: \"Move\",\n        I: Bs,\n        O: Nl,\n        kind: m.Unary\n      },\n      /**\n       * Generate a plan and move a component to a specific pose\n       * with respect to the SLAM map's origin.\n       * May replan to avoid obstacles\n       *\n       * @generated from rpc viam.service.motion.v1.MotionService.MoveOnMap\n       */\n      moveOnMap: {\n        name: \"MoveOnMap\",\n        I: xs,\n        O: Pl,\n        kind: m.Unary\n      },\n      /**\n       * Generate and begin executing an execution to move a component\n       * to a specific GPS coordinate.\n       * May replan to avoid obstacles & account for location drift.\n       * Creates a new plan upon replanning.\n       *\n       * @generated from rpc viam.service.motion.v1.MotionService.MoveOnGlobe\n       */\n      moveOnGlobe: {\n        name: \"MoveOnGlobe\",\n        I: Js,\n        O: Dl,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.motion.v1.MotionService.GetPose\n       */\n      getPose: {\n        name: \"GetPose\",\n        I: zs,\n        O: ql,\n        kind: m.Unary\n      },\n      /**\n       * Stops a Plan\n       *\n       * @generated from rpc viam.service.motion.v1.MotionService.StopPlan\n       */\n      stopPlan: {\n        name: \"StopPlan\",\n        I: Ys,\n        O: Ul,\n        kind: m.Unary\n      },\n      /**\n       * Returns the status of plans created by requests to move components\n       * that are executing OR are part of an execution which changed it state\n       * within the a 24HR TTL OR until the robot reinitializes.\n       * This currently only returns plans for MoveOnGlobe and MoveOnMap.\n       *\n       * @generated from rpc viam.service.motion.v1.MotionService.ListPlanStatuses\n       */\n      listPlanStatuses: {\n        name: \"ListPlanStatuses\",\n        I: $s,\n        O: Gl,\n        kind: m.Unary\n      },\n      /**\n       * Returns the plan(s) & state history of the most recent execution to move a\n       * component. Returns a result if the last execution is still executing OR\n       * changed state within the last 24 hours AND the robot has not reinitialized.\n       * Plans are never mutated.\n       * Replans always create new plans.\n       * Replans share the execution_id of the previously executing plan.\n       * This currently only returns plans for MoveOnGlobe and MoveOnMap.\n       *\n       * @generated from rpc viam.service.motion.v1.MotionService.GetPlan\n       */\n      getPlan: {\n        name: \"GetPlan\",\n        I: Vs,\n        O: Ll,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.service.motion.v1.MotionService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  },\n  Hl = /* @__PURE__ */s.makeEnum(\"viam.service.navigation.v1.MapType\", [{\n    no: 0,\n    name: \"MAP_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"MAP_TYPE_NONE\",\n    localName: \"NONE\"\n  }, {\n    no: 2,\n    name: \"MAP_TYPE_GPS\",\n    localName: \"GPS\"\n  }]),\n  Ws = /* @__PURE__ */s.makeEnum(\"viam.service.navigation.v1.Mode\", [{\n    no: 0,\n    name: \"MODE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"MODE_MANUAL\",\n    localName: \"MANUAL\"\n  }, {\n    no: 2,\n    name: \"MODE_WAYPOINT\",\n    localName: \"WAYPOINT\"\n  }, {\n    no: 3,\n    name: \"MODE_EXPLORE\",\n    localName: \"EXPLORE\"\n  }]),\n  js = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetModeRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Kl = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetModeResponse\", () => [{\n    no: 1,\n    name: \"mode\",\n    kind: \"enum\",\n    T: s.getEnumType(Ws)\n  }]),\n  Hs = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.SetModeRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"mode\",\n    kind: \"enum\",\n    T: s.getEnumType(Ws)\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Xl = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.SetModeResponse\", []),\n  Ql = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.Waypoint\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"location\",\n    kind: \"message\",\n    T: ze\n  }]),\n  Ks = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetLocationRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Zl = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetLocationResponse\", () => [{\n    no: 1,\n    name: \"location\",\n    kind: \"message\",\n    T: ze\n  }, {\n    no: 2,\n    name: \"compass_heading\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  Xs = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetWaypointsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  ed = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetWaypointsResponse\", () => [{\n    no: 1,\n    name: \"waypoints\",\n    kind: \"message\",\n    T: Ql,\n    repeated: !0\n  }]),\n  Qs = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.AddWaypointRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"location\",\n    kind: \"message\",\n    T: ze\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  nd = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.AddWaypointResponse\", []),\n  Zs = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.RemoveWaypointRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  ad = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.RemoveWaypointResponse\", []),\n  eo = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetObstaclesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  td = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetObstaclesResponse\", () => [{\n    no: 1,\n    name: \"obstacles\",\n    kind: \"message\",\n    T: ia,\n    repeated: !0\n  }]),\n  sd = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.Path\", () => [{\n    no: 1,\n    name: \"destination_waypoint_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"geopoints\",\n    kind: \"message\",\n    T: ze,\n    repeated: !0\n  }]),\n  no = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetPathsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  od = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetPathsResponse\", () => [{\n    no: 1,\n    name: \"paths\",\n    kind: \"message\",\n    T: sd,\n    repeated: !0\n  }]),\n  ao = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetPropertiesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  id = /* @__PURE__ */s.makeMessageType(\"viam.service.navigation.v1.GetPropertiesResponse\", () => [{\n    no: 1,\n    name: \"map_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Hl)\n  }]),\n  _R = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    AddWaypointRequest: Qs,\n    AddWaypointResponse: nd,\n    GetLocationRequest: Ks,\n    GetLocationResponse: Zl,\n    GetModeRequest: js,\n    GetModeResponse: Kl,\n    GetObstaclesRequest: eo,\n    GetObstaclesResponse: td,\n    GetPathsRequest: no,\n    GetPathsResponse: od,\n    GetPropertiesRequest: ao,\n    GetPropertiesResponse: id,\n    GetWaypointsRequest: Xs,\n    GetWaypointsResponse: ed,\n    MapType: Hl,\n    Mode: Ws,\n    Path: sd,\n    RemoveWaypointRequest: Zs,\n    RemoveWaypointResponse: ad,\n    SetModeRequest: Hs,\n    SetModeResponse: Xl,\n    Waypoint: Ql\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  rd = {\n    typeName: \"viam.service.navigation.v1.NavigationService\",\n    methods: {\n      /**\n       * @generated from rpc viam.service.navigation.v1.NavigationService.GetMode\n       */\n      getMode: {\n        name: \"GetMode\",\n        I: js,\n        O: Kl,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.navigation.v1.NavigationService.SetMode\n       */\n      setMode: {\n        name: \"SetMode\",\n        I: Hs,\n        O: Xl,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.navigation.v1.NavigationService.GetLocation\n       */\n      getLocation: {\n        name: \"GetLocation\",\n        I: Ks,\n        O: Zl,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.navigation.v1.NavigationService.GetWaypoints\n       */\n      getWaypoints: {\n        name: \"GetWaypoints\",\n        I: Xs,\n        O: ed,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.navigation.v1.NavigationService.AddWaypoint\n       */\n      addWaypoint: {\n        name: \"AddWaypoint\",\n        I: Qs,\n        O: nd,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.navigation.v1.NavigationService.RemoveWaypoint\n       */\n      removeWaypoint: {\n        name: \"RemoveWaypoint\",\n        I: Zs,\n        O: ad,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.navigation.v1.NavigationService.GetObstacles\n       */\n      getObstacles: {\n        name: \"GetObstacles\",\n        I: eo,\n        O: td,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.navigation.v1.NavigationService.GetPaths\n       */\n      getPaths: {\n        name: \"GetPaths\",\n        I: no,\n        O: od,\n        kind: m.Unary\n      },\n      /**\n       * GetProperties returns properties of the current navigation service, including the\n       * map_type being operated on.\n       *\n       * @generated from rpc viam.service.navigation.v1.NavigationService.GetProperties\n       */\n      getProperties: {\n        name: \"GetProperties\",\n        I: ao,\n        O: id,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.service.navigation.v1.NavigationService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  },\n  md = /* @__PURE__ */s.makeEnum(\"viam.service.slam.v1.MappingMode\", [{\n    no: 0,\n    name: \"MAPPING_MODE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"MAPPING_MODE_CREATE_NEW_MAP\",\n    localName: \"CREATE_NEW_MAP\"\n  }, {\n    no: 2,\n    name: \"MAPPING_MODE_LOCALIZE_ONLY\",\n    localName: \"LOCALIZE_ONLY\"\n  }, {\n    no: 3,\n    name: \"MAPPING_MODE_UPDATE_EXISTING_MAP\",\n    localName: \"UPDATE_EXISTING_MAP\"\n  }]),\n  cd = /* @__PURE__ */s.makeEnum(\"viam.service.slam.v1.SensorType\", [{\n    no: 0,\n    name: \"SENSOR_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"SENSOR_TYPE_CAMERA\",\n    localName: \"CAMERA\"\n  }, {\n    no: 2,\n    name: \"SENSOR_TYPE_MOVEMENT_SENSOR\",\n    localName: \"MOVEMENT_SENSOR\"\n  }]),\n  to = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.GetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ld = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.GetPositionResponse\", () => [{\n    no: 1,\n    name: \"pose\",\n    kind: \"message\",\n    T: Ue\n  }]),\n  so = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.GetPointCloudMapRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"return_edited_map\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }]),\n  dd = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.GetPointCloudMapResponse\", () => [{\n    no: 1,\n    name: \"point_cloud_pcd_chunk\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  oo = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.GetInternalStateRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  pd = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.GetInternalStateResponse\", () => [{\n    no: 1,\n    name: \"internal_state_chunk\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  io = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.GetPropertiesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ud = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.GetPropertiesResponse\", () => [{\n    no: 1,\n    name: \"cloud_slam\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 2,\n    name: \"mapping_mode\",\n    kind: \"enum\",\n    T: s.getEnumType(md)\n  }, {\n    no: 3,\n    name: \"internal_state_file_type\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"sensor_info\",\n    kind: \"message\",\n    T: gd,\n    repeated: !0\n  }]),\n  gd = /* @__PURE__ */s.makeMessageType(\"viam.service.slam.v1.SensorInfo\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(cd)\n  }]),\n  SR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetInternalStateRequest: oo,\n    GetInternalStateResponse: pd,\n    GetPointCloudMapRequest: so,\n    GetPointCloudMapResponse: dd,\n    GetPositionRequest: to,\n    GetPositionResponse: ld,\n    GetPropertiesRequest: io,\n    GetPropertiesResponse: ud,\n    MappingMode: md,\n    SensorInfo: gd,\n    SensorType: cd\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Td = {\n    typeName: \"viam.service.slam.v1.SLAMService\",\n    methods: {\n      /**\n       * GetPosition returns the current estimated position of the robot with\n       * respect to a returned component reference.\n       *\n       * @generated from rpc viam.service.slam.v1.SLAMService.GetPosition\n       */\n      getPosition: {\n        name: \"GetPosition\",\n        I: to,\n        O: ld,\n        kind: m.Unary\n      },\n      /**\n       * GetPointCloudMap returns the latest pointcloud map available where XY is the ground\n       * plane and positive Z is up, following the Right Hand Rule.\n       *\n       * @generated from rpc viam.service.slam.v1.SLAMService.GetPointCloudMap\n       */\n      getPointCloudMap: {\n        name: \"GetPointCloudMap\",\n        I: so,\n        O: dd,\n        kind: m.ServerStreaming\n      },\n      /**\n       * GetInternalState returns the internal map as defined by the specified slam\n       * algorithm required to continue mapping/localizing.\n       * This endpoint is not intended for end users.\n       *\n       * @generated from rpc viam.service.slam.v1.SLAMService.GetInternalState\n       */\n      getInternalState: {\n        name: \"GetInternalState\",\n        I: oo,\n        O: pd,\n        kind: m.ServerStreaming\n      },\n      /**\n       * GetProperties returns properties of the current slam service including mapping_mode\n       * and cloud_slam, where mapping_mode is the type of mapping/localizing being performed\n       * and cloud_slam is a boolean representing if this SLAM service is being run in the cloud.\n       *\n       * @generated from rpc viam.service.slam.v1.SLAMService.GetProperties\n       */\n      getProperties: {\n        name: \"GetProperties\",\n        I: io,\n        O: ud,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands.\n       *\n       * @generated from rpc viam.service.slam.v1.SLAMService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  },\n  kd = /* @__PURE__ */s.makeEnum(\"viam.component.camera.v1.Format\", [{\n    no: 0,\n    name: \"FORMAT_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"FORMAT_RAW_RGBA\",\n    localName: \"RAW_RGBA\"\n  }, {\n    no: 2,\n    name: \"FORMAT_RAW_DEPTH\",\n    localName: \"RAW_DEPTH\"\n  }, {\n    no: 3,\n    name: \"FORMAT_JPEG\",\n    localName: \"JPEG\"\n  }, {\n    no: 4,\n    name: \"FORMAT_PNG\",\n    localName: \"PNG\"\n  }]),\n  ro = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.GetImageRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  yd = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.GetImageResponse\", () => [{\n    no: 1,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"image\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  vd = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.GetImagesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  hd = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.GetImagesResponse\", () => [{\n    no: 1,\n    name: \"images\",\n    kind: \"message\",\n    T: mo,\n    repeated: !0\n  }, {\n    no: 84260,\n    name: \"response_metadata\",\n    kind: \"message\",\n    T: fr\n  }]),\n  mo = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.Image\", () => [{\n    no: 1,\n    name: \"source_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"format\",\n    kind: \"enum\",\n    T: s.getEnumType(kd)\n  }, {\n    no: 3,\n    name: \"image\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  co = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.RenderFrameRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  lo = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.GetPointCloudRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  fd = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.GetPointCloudResponse\", () => [{\n    no: 1,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"point_cloud\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  Rd = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.GetPropertiesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  _d = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.GetPropertiesResponse\", () => [{\n    no: 1,\n    name: \"supports_pcd\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 2,\n    name: \"intrinsic_parameters\",\n    kind: \"message\",\n    T: Md\n  }, {\n    no: 3,\n    name: \"distortion_parameters\",\n    kind: \"message\",\n    T: bd\n  }, {\n    no: 4,\n    name: \"mime_types\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 5,\n    name: \"frame_rate\",\n    kind: \"scalar\",\n    T: 2,\n    opt: !0\n  }]),\n  IR = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.Webcams\", () => [{\n    no: 1,\n    name: \"webcams\",\n    kind: \"message\",\n    T: Sd,\n    repeated: !0\n  }]),\n  Sd = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.Webcam\", () => [{\n    no: 1,\n    name: \"label\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"status\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"properties\",\n    kind: \"message\",\n    T: Id,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Id = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.Property\", () => [{\n    no: 1,\n    name: \"width_px\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 2,\n    name: \"height_px\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 3,\n    name: \"frame_format\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"frame_rate\",\n    kind: \"scalar\",\n    T: 2\n    /* ScalarType.FLOAT */\n  }]),\n  Md = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.IntrinsicParameters\", () => [{\n    no: 1,\n    name: \"width_px\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }, {\n    no: 2,\n    name: \"height_px\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }, {\n    no: 3,\n    name: \"focal_x_px\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"focal_y_px\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 5,\n    name: \"center_x_px\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 6,\n    name: \"center_y_px\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  bd = /* @__PURE__ */s.makeMessageType(\"viam.component.camera.v1.DistortionParameters\", () => [{\n    no: 1,\n    name: \"model\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"parameters\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }]),\n  o_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    DistortionParameters: bd,\n    Format: kd,\n    GetImageRequest: ro,\n    GetImageResponse: yd,\n    GetImagesRequest: vd,\n    GetImagesResponse: hd,\n    GetPointCloudRequest: lo,\n    GetPointCloudResponse: fd,\n    GetPropertiesRequest: Rd,\n    GetPropertiesResponse: _d,\n    Image: mo,\n    IntrinsicParameters: Md,\n    Property: Id,\n    RenderFrameRequest: co,\n    Webcam: Sd,\n    Webcams: IR\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  po = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetDetectionsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"image\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }, {\n    no: 3,\n    name: \"width\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 4,\n    name: \"height\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 5,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  wd = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetDetectionsResponse\", () => [{\n    no: 1,\n    name: \"detections\",\n    kind: \"message\",\n    T: va,\n    repeated: !0\n  }]),\n  uo = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetDetectionsFromCameraRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"camera_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Ed = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetDetectionsFromCameraResponse\", () => [{\n    no: 1,\n    name: \"detections\",\n    kind: \"message\",\n    T: va,\n    repeated: !0\n  }]),\n  va = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.Detection\", () => [{\n    no: 1,\n    name: \"x_min\",\n    kind: \"scalar\",\n    T: 3,\n    opt: !0\n  }, {\n    no: 2,\n    name: \"y_min\",\n    kind: \"scalar\",\n    T: 3,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"x_max\",\n    kind: \"scalar\",\n    T: 3,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"y_max\",\n    kind: \"scalar\",\n    T: 3,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"confidence\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 6,\n    name: \"class_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"x_min_normalized\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 8,\n    name: \"y_min_normalized\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 9,\n    name: \"x_max_normalized\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 10,\n    name: \"y_max_normalized\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }]),\n  go = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetClassificationsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"image\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }, {\n    no: 3,\n    name: \"width\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 4,\n    name: \"height\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 5,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"n\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Od = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetClassificationsResponse\", () => [{\n    no: 1,\n    name: \"classifications\",\n    kind: \"message\",\n    T: ha,\n    repeated: !0\n  }]),\n  To = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetClassificationsFromCameraRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"camera_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"n\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Cd = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetClassificationsFromCameraResponse\", () => [{\n    no: 1,\n    name: \"classifications\",\n    kind: \"message\",\n    T: ha,\n    repeated: !0\n  }]),\n  ha = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.Classification\", () => [{\n    no: 1,\n    name: \"class_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"confidence\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  ko = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetObjectPointCloudsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"camera_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Nd = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetObjectPointCloudsResponse\", () => [{\n    no: 1,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"objects\",\n    kind: \"message\",\n    T: pt,\n    repeated: !0\n  }]),\n  yo = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetPropertiesRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  vo = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.CaptureAllFromCameraRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"camera_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"return_image\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 4,\n    name: \"return_classifications\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 5,\n    name: \"return_detections\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 6,\n    name: \"return_object_point_clouds\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Pd = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.CaptureAllFromCameraResponse\", () => [{\n    no: 1,\n    name: \"image\",\n    kind: \"message\",\n    T: mo\n  }, {\n    no: 2,\n    name: \"detections\",\n    kind: \"message\",\n    T: va,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"classifications\",\n    kind: \"message\",\n    T: ha,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"objects\",\n    kind: \"message\",\n    T: pt,\n    repeated: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  Ad = /* @__PURE__ */s.makeMessageType(\"viam.service.vision.v1.GetPropertiesResponse\", () => [{\n    no: 1,\n    name: \"classifications_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 2,\n    name: \"detections_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"object_point_clouds_supported\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  MR = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    CaptureAllFromCameraRequest: vo,\n    CaptureAllFromCameraResponse: Pd,\n    Classification: ha,\n    Detection: va,\n    GetClassificationsFromCameraRequest: To,\n    GetClassificationsFromCameraResponse: Cd,\n    GetClassificationsRequest: go,\n    GetClassificationsResponse: Od,\n    GetDetectionsFromCameraRequest: uo,\n    GetDetectionsFromCameraResponse: Ed,\n    GetDetectionsRequest: po,\n    GetDetectionsResponse: wd,\n    GetObjectPointCloudsRequest: ko,\n    GetObjectPointCloudsResponse: Nd,\n    GetPropertiesRequest: yo,\n    GetPropertiesResponse: Ad\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Dd = {\n    typeName: \"viam.service.vision.v1.VisionService\",\n    methods: {\n      /**\n       * GetDetectionsFromCamera will return a list of detections in the next image given a camera and a detector\n       *\n       * @generated from rpc viam.service.vision.v1.VisionService.GetDetectionsFromCamera\n       */\n      getDetectionsFromCamera: {\n        name: \"GetDetectionsFromCamera\",\n        I: uo,\n        O: Ed,\n        kind: m.Unary\n      },\n      /**\n       * GetDetections will return a list of detections in the next image given the image bytes and a detector\n       *\n       * @generated from rpc viam.service.vision.v1.VisionService.GetDetections\n       */\n      getDetections: {\n        name: \"GetDetections\",\n        I: po,\n        O: wd,\n        kind: m.Unary\n      },\n      /**\n       * GetClassificationsFromCamera will return a list of classifications in the next image given a camera and a classifier\n       *\n       * @generated from rpc viam.service.vision.v1.VisionService.GetClassificationsFromCamera\n       */\n      getClassificationsFromCamera: {\n        name: \"GetClassificationsFromCamera\",\n        I: To,\n        O: Cd,\n        kind: m.Unary\n      },\n      /**\n       * GetClassifications will return a list of classifications in the next image given the image bytes and a classifier\n       *\n       * @generated from rpc viam.service.vision.v1.VisionService.GetClassifications\n       */\n      getClassifications: {\n        name: \"GetClassifications\",\n        I: go,\n        O: Od,\n        kind: m.Unary\n      },\n      /**\n       * GetObjectPointClouds returns all the found objects in a pointcloud from a camera of the underlying robot,\n       * as well as the 3-vector center of each of the found objects.\n       * A specific MIME type can be requested but may not necessarily be the same one returned.\n       *\n       * @generated from rpc viam.service.vision.v1.VisionService.GetObjectPointClouds\n       */\n      getObjectPointClouds: {\n        name: \"GetObjectPointClouds\",\n        I: ko,\n        O: Nd,\n        kind: m.Unary\n      },\n      /**\n       * GetProperties will return the properties as booleans given the name of the vision service\n       *\n       * @generated from rpc viam.service.vision.v1.VisionService.GetProperties\n       */\n      getProperties: {\n        name: \"GetProperties\",\n        I: yo,\n        O: Ad,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.service.vision.v1.VisionService.CaptureAllFromCamera\n       */\n      captureAllFromCamera: {\n        name: \"CaptureAllFromCamera\",\n        I: vo,\n        O: Pd,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.service.vision.v1.VisionService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  },\n  bR = new Blob([`self.onmessage = function(e) {\n    setTimeout(() => self.postMessage(\"\"), e.data);\n  };`], {\n    type: \"text/javascript\"\n  });\nclass wR {\n  constructor(e, n, t = 1e4) {\n    this.deferredTransport = e, this.onDisconnect = n, this.heartbeatIntervalMs = t;\n  }\n  connecting;\n  get client() {\n    const e = this.deferredTransport();\n    return P(As, e);\n  }\n  heartbeat() {\n    let e;\n    const n = async () => {\n      try {\n        await this.client.getOperations({});\n      } catch {\n        this.onDisconnect();\n        return;\n      }\n      e ? e.postMessage(this.heartbeatIntervalMs) : setTimeout(() => {\n        n().catch(console.error);\n      }, this.heartbeatIntervalMs);\n    };\n    if (globalThis.Worker !== void 0) {\n      const t = window.URL.createObjectURL(bR);\n      e = new Worker(t), URL.revokeObjectURL(t), e.addEventListener(\"message\", () => {\n        n().catch(console.error);\n      });\n    }\n    n().catch(console.error);\n  }\n  async start() {\n    this.connecting && (await this.connecting), this.connecting = new Promise((e, n) => {\n      (async () => {\n        await this.client.getOperations({});\n      })().then(e).catch(n).finally(() => {\n        this.connecting = void 0;\n      });\n    });\n    try {\n      await this.connecting;\n    } finally {\n      this.connecting = void 0;\n    }\n    this.heartbeat();\n  }\n}\nconst ma = /* @__PURE__ */s.makeMessageType(\"grpc.reflection.v1.ServerReflectionRequest\", () => [{\n    no: 1,\n    name: \"host\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"file_by_filename\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"message_request\"\n  }, {\n    no: 4,\n    name: \"file_containing_symbol\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"message_request\"\n  }, {\n    no: 5,\n    name: \"file_containing_extension\",\n    kind: \"message\",\n    T: ER,\n    oneof: \"message_request\"\n  }, {\n    no: 6,\n    name: \"all_extension_numbers_of_type\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"message_request\"\n  }, {\n    no: 7,\n    name: \"list_services\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"message_request\"\n  }]),\n  ER = /* @__PURE__ */s.makeMessageType(\"grpc.reflection.v1.ExtensionRequest\", () => [{\n    no: 1,\n    name: \"containing_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"extension_number\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }]),\n  OR = /* @__PURE__ */s.makeMessageType(\"grpc.reflection.v1.ServerReflectionResponse\", () => [{\n    no: 1,\n    name: \"valid_host\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"original_request\",\n    kind: \"message\",\n    T: ma\n  }, {\n    no: 4,\n    name: \"file_descriptor_response\",\n    kind: \"message\",\n    T: CR,\n    oneof: \"message_response\"\n  }, {\n    no: 5,\n    name: \"all_extension_numbers_response\",\n    kind: \"message\",\n    T: NR,\n    oneof: \"message_response\"\n  }, {\n    no: 6,\n    name: \"list_services_response\",\n    kind: \"message\",\n    T: PR,\n    oneof: \"message_response\"\n  }, {\n    no: 7,\n    name: \"error_response\",\n    kind: \"message\",\n    T: DR,\n    oneof: \"message_response\"\n  }]),\n  CR = /* @__PURE__ */s.makeMessageType(\"grpc.reflection.v1.FileDescriptorResponse\", () => [{\n    no: 1,\n    name: \"file_descriptor_proto\",\n    kind: \"scalar\",\n    T: 12,\n    repeated: !0\n  }]),\n  NR = /* @__PURE__ */s.makeMessageType(\"grpc.reflection.v1.ExtensionNumberResponse\", () => [{\n    no: 1,\n    name: \"base_type_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"extension_number\",\n    kind: \"scalar\",\n    T: 5,\n    repeated: !0\n  }]),\n  PR = /* @__PURE__ */s.makeMessageType(\"grpc.reflection.v1.ListServiceResponse\", () => [{\n    no: 1,\n    name: \"service\",\n    kind: \"message\",\n    T: AR,\n    repeated: !0\n  }]),\n  AR = /* @__PURE__ */s.makeMessageType(\"grpc.reflection.v1.ServiceResponse\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  DR = /* @__PURE__ */s.makeMessageType(\"grpc.reflection.v1.ErrorResponse\", () => [{\n    no: 1,\n    name: \"error_code\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 2,\n    name: \"error_message\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  qR = {\n    typeName: \"grpc.reflection.v1.ServerReflection\",\n    methods: {\n      /**\n       * The reflection service is structured as a bidirectional stream, ensuring\n       * all related requests go to a single server.\n       *\n       * @generated from rpc grpc.reflection.v1.ServerReflection.ServerReflectionInfo\n       */\n      serverReflectionInfo: {\n        name: \"ServerReflectionInfo\",\n        I: ma,\n        O: OR,\n        kind: m.BiDiStreaming\n      }\n    }\n  };\nclass UR {\n  constructor(e, n) {\n    this.deferredTransport = e, this.sessionManager = n;\n  }\n  async getSessionMetadata() {\n    try {\n      return await this.sessionManager.getSessionMetadata();\n    } catch (e) {\n      throw e instanceof C && e.code === E.InvalidArgument && e.message === \"SESSION_EXPIRED\" && this.sessionManager.reset(), e;\n    }\n  }\n  async unary(e, n, t, o, i, r, c) {\n    const p = Mn(i),\n      d = `/${e.typeName}/${n.name}`;\n    if (je.heartbeatMonitoredMethods[d] ?? !1) {\n      const T = await this.getSessionMetadata();\n      for (const [f, S] of T) p.set(f, S);\n    }\n    return this.deferredTransport().unary(e, n, t, o, p, r, c);\n  }\n  async stream(e, n, t, o, i, r, c) {\n    const p = Mn(i),\n      d = `/${e.typeName}/${n.name}`;\n    if (je.heartbeatMonitoredMethods[d] ?? !1) {\n      const T = await this.getSessionMetadata();\n      for (const [f, S] of T) p.set(f, S);\n    }\n    return this.deferredTransport().stream(e, n, t, o, p, r, c);\n  }\n}\nconst GR = new Blob([`self.onmessage = function(e) {\n  setTimeout(() => self.postMessage(\"\"), e.data);\n};`], {\n  type: \"text/javascript\"\n});\nclass je {\n  constructor(e, n) {\n    this.deferredTransport = n, this.host = e, this.transport = new UR(this.deferredTransport, this);\n  }\n  static heartbeatMonitoredMethods = {};\n  transport;\n  currentSessionID = \"\";\n  sessionsSupported;\n  heartbeatIntervalMs;\n  host = \"\";\n  starting;\n  get client() {\n    const e = this.deferredTransport();\n    return na(As, e);\n  }\n  get sessionID() {\n    return this.currentSessionID;\n  }\n  getSessionMetadataInner() {\n    const e = new Headers();\n    return this.sessionsSupported && this.currentSessionID !== \"\" && e.set(\"viam-sid\", this.currentSessionID), e;\n  }\n  reset() {\n    this.starting || (this.sessionsSupported = void 0);\n  }\n  // Note: maybe support non-worker for foreground presence.\n  backgroundHeartbeat = !0;\n  async heartbeat() {\n    if (!this.sessionsSupported || this.currentSessionID === \"\") return;\n    for (; this.starting;) await this.starting;\n    let e;\n    const n = async () => {\n      const t = new Cs({\n        id: this.currentSessionID\n      });\n      try {\n        await this.client.sendSessionHeartbeat(t);\n      } catch (o) {\n        if (o instanceof C && o.code === E.Unimplemented) {\n          console.error(\"sessions unsupported; will not try again\"), this.sessionsSupported = !1;\n          return;\n        }\n        if (o instanceof De || o instanceof C && o.rawMessage === \"closed\") {\n          this.reset();\n          return;\n        }\n      }\n      e ? e.postMessage(this.heartbeatIntervalMs) : setTimeout(() => {\n        n().catch(console.error);\n      }, this.heartbeatIntervalMs);\n    };\n    if (this.backgroundHeartbeat && globalThis.Worker !== void 0) {\n      const t = window.URL.createObjectURL(GR);\n      e = new Worker(t), URL.revokeObjectURL(t), e.addEventListener(\"message\", () => {\n        n().catch(console.error);\n      });\n    }\n    n().catch(console.error);\n  }\n  async getSessionMetadata() {\n    for (; this.starting;) await this.starting;\n    return this.sessionsSupported !== void 0 ? this.getSessionMetadataInner() : (this.starting = new Promise((e, n) => {\n      (async () => {\n        const t = new Os();\n        this.currentSessionID !== \"\" && (t.resume = this.currentSessionID);\n        let o;\n        try {\n          o = await this.client.startSession(t);\n        } catch (r) {\n          if (r instanceof C && r.code === E.Unimplemented) {\n            console.error(\"sessions unsupported; will not try again\"), this.sessionsSupported = !1;\n            return;\n          }\n          throw r;\n        }\n        const {\n          heartbeatWindow: i\n        } = o;\n        if (!i) throw new Error(\"expected heartbeat window in response to start session\");\n        this.sessionsSupported = !0, this.currentSessionID = o.id, this.heartbeatIntervalMs = (Number(i.seconds) * 1e3 + i.nanos / 1e6) / 5, await this.applyHeartbeatMonitoredMethods(), e(), this.heartbeat().catch(console.error);\n      })().then(e).catch(n).finally(() => {\n        this.starting = void 0;\n      });\n    }), await this.starting, this.getSessionMetadataInner());\n  }\n  async applyHeartbeatMonitoredMethods() {\n    try {\n      const e = na(qR, this.transport),\n        n = new ma({\n          host: this.host,\n          messageRequest: {\n            case: \"listServices\",\n            value: \"\"\n          }\n        }),\n        t = e.serverReflectionInfo(Ba([n]), {\n          timeoutMs: 1e4\n        });\n      for await (const o of t) {\n        const i = o.messageResponse.value.service.map(c => new ma({\n            messageRequest: {\n              case: \"fileContainingSymbol\",\n              value: c.name\n            }\n          })),\n          r = e.serverReflectionInfo(Ba(i), {\n            timeoutMs: 1e4\n          });\n        for await (const c of r) for (const p of c.messageResponse.value.fileDescriptorProto) {\n          const d = se.fromBinary(p);\n          for (const T of d.service) for (const f of T.method) je.heartbeatMonitoredMethods[`/${d.package}.${T.name}/${f.name}`] = je.hasHeartbeatOption(f.options);\n        }\n      }\n    } catch {\n      je.heartbeatMonitoredMethods = {\n        \"/viam.component.arm.v1.ArmService/MoveToPosition\": !0,\n        \"/viam.component.arm.v1.ArmService/MoveToJointPositions\": !0,\n        \"/viam.component.arm.v1.ArmService/MoveThroughJointPositions\": !0,\n        \"/viam.component.base.v1.BaseService/MoveStraight\": !0,\n        \"/viam.component.base.v1.BaseService/Spin\": !0,\n        \"/viam.component.base.v1.BaseService/SetPower\": !0,\n        \"/viam.component.base.v1.BaseService/SetVelocity\": !0,\n        \"/viam.component.gantry.v1.GantryService/MoveToPosition\": !0,\n        \"/viam.component.gripper.v1.GripperService/Open\": !0,\n        \"/viam.component.gripper.v1.GripperService/Grab\": !0,\n        \"/viam.component.motor.v1.MotorService/SetPower\": !0,\n        \"/viam.component.motor.v1.MotorService/GoFor\": !0,\n        \"/viam.component.motor.v1.MotorService/GoTo\": !0,\n        \"/viam.component.motor.v1.MotorService/SetRPM\": !0,\n        \"/viam.component.servo.v1.ServoService/Move\": !0\n      };\n    }\n  }\n  static hasHeartbeatOption(e) {\n    if (!e) return !1;\n    const n = new Ai(e.toBinary());\n    for (; n.pos < n.len;) {\n      const t = n.tag(),\n        [o] = t;\n      if (o === Sr.field.no) return !0;\n      n.string();\n    }\n    return !1;\n  }\n}\nconst LR = /* @__PURE__ */s.makeEnum(\"viam.service.mlmodel.v1.LabelType\", [{\n    no: 0,\n    name: \"LABEL_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"LABEL_TYPE_TENSOR_VALUE\",\n    localName: \"TENSOR_VALUE\"\n  }, {\n    no: 2,\n    name: \"LABEL_TYPE_TENSOR_AXIS\",\n    localName: \"TENSOR_AXIS\"\n  }]),\n  qd = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.InferRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"input_tensors\",\n    kind: \"message\",\n    T: Gd\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  BR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.InferResponse\", () => [{\n    no: 3,\n    name: \"output_tensors\",\n    kind: \"message\",\n    T: Gd\n  }]),\n  Ud = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.MetadataRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  xR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.MetadataResponse\", () => [{\n    no: 1,\n    name: \"metadata\",\n    kind: \"message\",\n    T: FR\n  }]),\n  FR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.Metadata\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"description\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"input_info\",\n    kind: \"message\",\n    T: hi,\n    repeated: !0\n  }, {\n    no: 5,\n    name: \"output_info\",\n    kind: \"message\",\n    T: hi,\n    repeated: !0\n  }]),\n  hi = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.TensorInfo\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"description\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"data_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"shape\",\n    kind: \"scalar\",\n    T: 5,\n    repeated: !0\n  }, {\n    no: 5,\n    name: \"associated_files\",\n    kind: \"message\",\n    T: JR,\n    repeated: !0\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  JR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.File\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"description\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"label_type\",\n    kind: \"enum\",\n    T: s.getEnumType(LR)\n  }]),\n  zR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataInt8\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  YR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataUInt8\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  $R = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataInt16\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 7,\n    repeated: !0\n  }]),\n  VR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataUInt16\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 7,\n    repeated: !0\n  }]),\n  WR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataInt32\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 15,\n    repeated: !0\n  }]),\n  jR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataUInt32\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 7,\n    repeated: !0\n  }]),\n  HR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataInt64\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 16,\n    repeated: !0\n  }]),\n  KR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataUInt64\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 6,\n    repeated: !0\n  }]),\n  XR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataFloat\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 2,\n    repeated: !0\n  }]),\n  QR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensorDataDouble\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 1,\n    repeated: !0\n  }]),\n  ZR = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensor\", () => [{\n    no: 1,\n    name: \"shape\",\n    kind: \"scalar\",\n    T: 6,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"int8_tensor\",\n    kind: \"message\",\n    T: zR,\n    oneof: \"tensor\"\n  }, {\n    no: 3,\n    name: \"uint8_tensor\",\n    kind: \"message\",\n    T: YR,\n    oneof: \"tensor\"\n  }, {\n    no: 4,\n    name: \"int16_tensor\",\n    kind: \"message\",\n    T: $R,\n    oneof: \"tensor\"\n  }, {\n    no: 5,\n    name: \"uint16_tensor\",\n    kind: \"message\",\n    T: VR,\n    oneof: \"tensor\"\n  }, {\n    no: 6,\n    name: \"int32_tensor\",\n    kind: \"message\",\n    T: WR,\n    oneof: \"tensor\"\n  }, {\n    no: 7,\n    name: \"uint32_tensor\",\n    kind: \"message\",\n    T: jR,\n    oneof: \"tensor\"\n  }, {\n    no: 8,\n    name: \"int64_tensor\",\n    kind: \"message\",\n    T: HR,\n    oneof: \"tensor\"\n  }, {\n    no: 9,\n    name: \"uint64_tensor\",\n    kind: \"message\",\n    T: KR,\n    oneof: \"tensor\"\n  }, {\n    no: 10,\n    name: \"float_tensor\",\n    kind: \"message\",\n    T: XR,\n    oneof: \"tensor\"\n  }, {\n    no: 11,\n    name: \"double_tensor\",\n    kind: \"message\",\n    T: QR,\n    oneof: \"tensor\"\n  }]),\n  Gd = /* @__PURE__ */s.makeMessageType(\"viam.service.mlmodel.v1.FlatTensors\", () => [{\n    no: 1,\n    name: \"tensors\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"message\",\n      T: ZR\n    }\n  }]),\n  Ld = {\n    typeName: \"viam.service.mlmodel.v1.MLModelService\",\n    methods: {\n      /**\n       * Infer takes an already ordered input tensor as a map, makes an inference on the model, and returns an output data map.\n       *\n       * @generated from rpc viam.service.mlmodel.v1.MLModelService.Infer\n       */\n      infer: {\n        name: \"Infer\",\n        I: qd,\n        O: BR,\n        kind: m.Unary\n      },\n      /**\n       * Metadata returns the metadata associated with the ML model.\n       *\n       * @generated from rpc viam.service.mlmodel.v1.MLModelService.Metadata\n       */\n      metadata: {\n        name: \"Metadata\",\n        I: Ud,\n        O: xR,\n        kind: m.Unary\n      }\n    }\n  };\nclass D extends Mr {\n  serviceHost;\n  webrtcOptions;\n  directOptions;\n  sessionOptions;\n  gRPCConnectionManager;\n  sessionManager;\n  peerConn;\n  transport;\n  connecting;\n  connectResolve;\n  savedCreds;\n  closed;\n  robotServiceClient;\n  armServiceClient;\n  baseServiceClient;\n  boardServiceClient;\n  encoderServiceClient;\n  gantryServiceClient;\n  genericServiceClient;\n  gripperServiceClient;\n  mlModelServiceClient;\n  movementSensorServiceClient;\n  powerSensorServiceClient;\n  inputControllerServiceClient;\n  motorServiceClient;\n  navigationServiceClient;\n  discoveryServiceClient;\n  motionServiceClient;\n  visionServiceClient;\n  servoServiceClient;\n  slamServiceClient;\n  constructor(e, n, t, o) {\n    super(), this.serviceHost = e, this.webrtcOptions = n, this.directOptions = o, this.sessionOptions = t, this.gRPCConnectionManager = new wR(() => {\n      if (!this.transport) throw new Error(D.notConnectedYetStr);\n      return this.transport;\n    }, () => {\n      this.onDisconnect();\n    }), this.sessionManager = new je(this.serviceHost, () => {\n      if (!this.transport) throw new Error(D.notConnectedYetStr);\n      return this.transport;\n    });\n    for (const i of Object.values(ae)) this.on(i, () => {\n      this.emit(\"connectionstatechange\", {\n        eventType: i\n      });\n    });\n    this.closed = !1;\n  }\n  onDisconnect(e) {\n    if (this.emit(ae.DISCONNECTED, e ?? {}), this.noReconnect !== void 0 && this.noReconnect || this.closed) return;\n    console.debug(\"Connection closed, will try to reconnect\");\n    const n = {\n      retry: (t, o) => (console.debug(`Failed to connect, attempt ${o} with backoff`, t), !0)\n    };\n    this.reconnectMaxWait !== void 0 && (n.maxDelay = this.reconnectMaxWait), this.reconnectMaxAttempts !== void 0 && (n.numOfAttempts = this.reconnectMaxAttempts), za(async () => this.connect(), n).then(() => {\n      console.debug(\"Reconnected successfully!\");\n    }).catch(() => {\n      console.debug(`Reached max attempts: ${this.reconnectMaxAttempts}`);\n    });\n  }\n  get noReconnect() {\n    return this.webrtcOptions?.noReconnect ?? this.directOptions?.noReconnect;\n  }\n  get reconnectMaxAttempts() {\n    return this.webrtcOptions?.reconnectMaxAttempts ?? this.directOptions?.reconnectMaxAttempts;\n  }\n  get reconnectMaxWait() {\n    return this.webrtcOptions?.reconnectMaxWait ?? this.directOptions?.reconnectMaxWait;\n  }\n  get sessionId() {\n    return this.sessionManager.sessionID;\n  }\n  static notConnectedYetStr = \"not connected yet\";\n  get robotService() {\n    if (!this.robotServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.robotServiceClient;\n  }\n  get armService() {\n    if (!this.armServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.armServiceClient;\n  }\n  get baseService() {\n    if (!this.baseServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.baseServiceClient;\n  }\n  get boardService() {\n    if (!this.boardServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.boardServiceClient;\n  }\n  get encoderService() {\n    if (!this.encoderServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.encoderServiceClient;\n  }\n  get gantryService() {\n    if (!this.gantryServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.gantryServiceClient;\n  }\n  get genericService() {\n    if (!this.genericServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.genericServiceClient;\n  }\n  get gripperService() {\n    if (!this.gripperServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.gripperServiceClient;\n  }\n  get mlModelService() {\n    if (!this.mlModelServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.mlModelServiceClient;\n  }\n  get movementSensorService() {\n    if (!this.movementSensorServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.movementSensorServiceClient;\n  }\n  get powerSensorService() {\n    if (!this.powerSensorServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.powerSensorServiceClient;\n  }\n  get inputControllerService() {\n    if (!this.inputControllerServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.inputControllerServiceClient;\n  }\n  get motorService() {\n    if (!this.motorServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.motorServiceClient;\n  }\n  get navigationService() {\n    if (!this.navigationServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.navigationServiceClient;\n  }\n  get discoveryService() {\n    if (!this.discoveryServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.discoveryServiceClient;\n  }\n  get motionService() {\n    if (!this.motionServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.motionServiceClient;\n  }\n  get visionService() {\n    if (!this.visionServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.visionServiceClient;\n  }\n  get servoService() {\n    if (!this.servoServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.servoServiceClient;\n  }\n  get slamService() {\n    if (!this.slamServiceClient) throw new Error(D.notConnectedYetStr);\n    return this.slamServiceClient;\n  }\n  createServiceClient(e) {\n    const n = this.sessionOptions?.disabled ? this.transport : this.sessionManager.transport;\n    if (!n) throw new Error(D.notConnectedYetStr);\n    return P(e, n);\n  }\n  get peerConnection() {\n    return this.peerConn;\n  }\n  async disconnect() {\n    for (this.emit(ae.DISCONNECTING, {}); this.connecting;) await this.connecting;\n    this.peerConn && (this.peerConn.close(), this.peerConn = void 0), this.sessionManager.reset(), this.closed = !0, this.emit(ae.DISCONNECTED, {});\n  }\n  isConnected() {\n    return this.peerConn?.iceConnectionState === \"connected\";\n  }\n  // TODO(RSDK-7672): refactor due to cognitive complexity\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  async connect({\n    creds: e = this.savedCreds,\n    priority: n,\n    dialTimeout: t\n  } = {}) {\n    if (this.emit(ae.CONNECTING, {}), this.closed = !1, this.connecting) {\n      for (; this.connecting !== void 0;) await this.connecting;\n      return;\n    }\n    this.connecting = new Promise(o => {\n      this.connectResolve = o;\n    }), this.peerConn && (this.peerConn.close(), this.peerConn = void 0), this.sessionManager.reset();\n    try {\n      const o = {\n        webrtcOptions: {\n          disableTrickleICE: !1,\n          rtcConfig: this.webrtcOptions?.rtcConfig\n        },\n        dialTimeout: t ?? ut,\n        extraHeaders: Ka\n      };\n      if (e && (Cn(e) ? o.credentials = e : o.accessToken = e.payload), n !== void 0 && o.webrtcOptions && (o.webrtcOptions.additionalSdpFields = {\n        \"x-priority\": n\n      }), this.savedCreds = e, this.webrtcOptions?.enabled) {\n        o.webrtcOptions && (o.webrtcOptions.signalingCredentials = o.credentials);\n        const r = await Hf(this.webrtcOptions.signalingAddress || this.serviceHost, this.webrtcOptions.host, o);\n        this.peerConn = r.peerConnection, this.peerConn.addEventListener(\"iceconnectionstatechange\", () => {\n          this.peerConn?.iceConnectionState === \"connected\" ? this.emit(ae.CONNECTED, {}) : this.peerConn?.iceConnectionState === \"closed\" && this.onDisconnect();\n        }), r.dataChannel.addEventListener(\"close\", c => {\n          this.onDisconnect(c);\n        }), this.transport = r.transport, r.peerConnection.addEventListener(\"track\", c => {\n          const [p] = c.streams;\n          if (!p) throw this.emit(\"track\", c), new Error(\"expected event stream to exist\");\n          const d = p.id.replaceAll(\"+\", \":\");\n          Object.defineProperty(p, \"id\", {\n            value: d\n          }), this.emit(\"track\", c);\n        });\n      } else this.transport = await In(this.serviceHost, o), await this.gRPCConnectionManager.start();\n      const i = this.sessionOptions?.disabled ? this.transport : this.sessionManager.transport;\n      this.robotServiceClient = P(As, i), this.armServiceClient = P(qr, i), this.baseServiceClient = P(zr, i), this.boardServiceClient = P(am, i), this.encoderServiceClient = P(im, i), this.gantryServiceClient = P(um, i), this.genericServiceClient = P(Wt, i), this.gripperServiceClient = P(vm, i), this.mlModelServiceClient = P(Ld, i), this.movementSensorServiceClient = P(Vm, i), this.powerSensorServiceClient = P(Km, i), this.inputControllerServiceClient = P(bm, i), this.motorServiceClient = P(Gm, i), this.navigationServiceClient = P(rd, i), this.motionServiceClient = P(jl, i), this.visionServiceClient = P(Dd, i), this.servoServiceClient = P(nc, i), this.slamServiceClient = P(Td, i), this.discoveryServiceClient = P(Ol, i), this.emit(ae.CONNECTED, {});\n    } catch (o) {\n      throw this.emit(ae.DISCONNECTED, {}), o;\n    } finally {\n      this.connectResolve?.(), this.connectResolve = void 0, this.connecting = void 0;\n    }\n  }\n  // SESSIONS\n  async getSessions() {\n    return (await this.robotService.getSessions({})).sessions;\n  }\n  // OPERATIONS\n  async getOperations() {\n    return (await this.robotService.getOperations({})).operations;\n  }\n  async cancelOperation(e) {\n    await this.robotService.cancelOperation({\n      id: e\n    });\n  }\n  async blockForOperation(e) {\n    await this.robotService.blockForOperation({\n      id: e\n    });\n  }\n  async stopAll() {\n    await this.robotService.stopAll({});\n  }\n  // FRAME SYSTEM\n  async frameSystemConfig(e) {\n    return (await this.robotService.frameSystemConfig({\n      supplementalTransforms: e\n    })).frameSystemConfigs;\n  }\n  async transformPose(e, n, t) {\n    const o = new Ms({\n        source: e,\n        destination: n,\n        supplementalTransforms: t\n      }),\n      r = (await this.robotService.transformPose(o)).pose;\n    if (!r) throw new Error(\"no pose\");\n    return r;\n  }\n  async transformPCD(e, n, t) {\n    const o = new bs({\n      pointCloudPcd: e,\n      source: n,\n      destination: t\n    });\n    return (await this.robotService.transformPCD(o)).pointCloudPcd;\n  }\n  // GET MODELS FROM MODULES\n  async getModelsFromModules() {\n    const e = new ws({});\n    return (await this.robotService.getModelsFromModules(e)).models;\n  }\n  // GET CLOUD METADATA\n  async getCloudMetadata() {\n    return this.robotService.getCloudMetadata({});\n  }\n  // RESOURCES\n  async resourceNames() {\n    return (await this.robotService.resourceNames({})).resources;\n  }\n  async resourceRPCSubtypes() {\n    return (await this.robotService.resourceRPCSubtypes({})).resourceRpcSubtypes;\n  }\n  // MACHINE STATUS\n  async getMachineStatus() {\n    return this.robotService.getMachineStatus({});\n  }\n  // VERSION INFO\n  async getVersion() {\n    return this.robotService.getVersion({});\n  }\n  // MODULES\n  async restartModule(e, n) {\n    const t = new Ps();\n    e !== void 0 && (t.idOrName.case = \"moduleId\", t.idOrName.value = e), n !== void 0 && (t.idOrName.case = \"moduleName\", t.idOrName.value = n), await this.robotService.restartModule(t);\n  }\n}\nconst fi = a => !!(a > 0 && Number.isInteger(a)),\n  e1 = a => a.includes(\"local\"),\n  Ri = async a => {\n    if (console.debug(\"dialing via gRPC...\"), !e1(a.host)) throw new Error(`cannot dial \"${a.host}\" directly, please use a local url instead.`);\n    const e = {\n      noReconnect: a.noReconnect,\n      reconnectMaxWait: a.reconnectMaxWait,\n      reconnectMaxAttempts: a.reconnectMaxAttempts\n    };\n    let n;\n    a.disableSessions && (n = {\n      disabled: !0\n    });\n    const t = new D(a.host, void 0, n, e);\n    return await t.connect({\n      creds: a.credentials,\n      dialTimeout: a.dialTimeout ?? ut\n    }), console.debug(\"connected via gRPC\"), t;\n  },\n  _i = async a => {\n    console.debug(\"dialing via WebRTC...\");\n    const e = a.serviceHost ?? a.host,\n      {\n        signalingAddress: n\n      } = a,\n      o = {\n        iceServers: a.iceServers ?? []\n      },\n      i = {\n        enabled: !0,\n        host: a.host,\n        signalingAddress: n,\n        rtcConfig: o,\n        noReconnect: a.noReconnect,\n        reconnectMaxWait: a.reconnectMaxWait,\n        reconnectMaxAttempts: a.reconnectMaxAttempts\n      };\n    let r;\n    a.disableSessions && (r = {\n      disabled: !0\n    });\n    const c = new D(e, i, r);\n    return await c.connect({\n      priority: a.priority,\n      dialTimeout: a.dialTimeout ?? ut,\n      creds: a.credentials\n    }), console.debug(\"connected via WebRTC\"), c;\n  },\n  n1 = a => {\n    const e = a;\n    return typeof e.signalingAddress != \"string\" ? !1 : !e.iceServers || Array.isArray(e.iceServers);\n  },\n  a1 = async a => {\n    t1(a);\n    const e = {\n      retry: (n, t) => (console.debug(`Failed to connect, attempt ${t} with backoff`, n), !a.reconnectAbortSignal?.abort)\n    };\n    if (a.reconnectMaxWait !== void 0 && (e.maxDelay = a.reconnectMaxWait), a.reconnectMaxAttempts !== void 0 && (e.numOfAttempts = a.reconnectMaxAttempts), n1(a) && !a.reconnectAbortSignal?.abort) try {\n      return a.noReconnect ? await _i(a) : await za(async () => _i(a), e);\n    } catch {\n      console.debug(\"Failed to connect via WebRTC\");\n    }\n    if (!a.reconnectAbortSignal?.abort) try {\n      return a.noReconnect ? await Ri(a) : await za(async () => Ri(a), e);\n    } catch {\n      console.debug(\"Failed to connect via gRPC\");\n    }\n    throw new Error(\"Failed to connect to robot\");\n  },\n  t1 = a => {\n    if (a.credentials && Cn(a.credentials)) try {\n      a.credentials.authEntity = new URL(a.credentials.authEntity).host;\n    } catch (e) {\n      if (!(e instanceof TypeError)) throw e;\n    }\n    if (a.reconnectMaxAttempts !== void 0 && !fi(a.reconnectMaxAttempts)) throw new Error(`Value of max reconnect attempts (${a.reconnectMaxAttempts}) should be a positive integer`);\n    if (a.reconnectMaxWait !== void 0 && !fi(a.reconnectMaxWait)) throw new Error(`Value of max reconnect wait (${a.reconnectMaxWait}) should be a positive integer`);\n  },\n  Xe = /* @__PURE__ */s.makeEnum(\"viam.app.mltraining.v1.ModelType\", [{\n    no: 0,\n    name: \"MODEL_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"MODEL_TYPE_SINGLE_LABEL_CLASSIFICATION\",\n    localName: \"SINGLE_LABEL_CLASSIFICATION\"\n  }, {\n    no: 2,\n    name: \"MODEL_TYPE_MULTI_LABEL_CLASSIFICATION\",\n    localName: \"MULTI_LABEL_CLASSIFICATION\"\n  }, {\n    no: 3,\n    name: \"MODEL_TYPE_OBJECT_DETECTION\",\n    localName: \"OBJECT_DETECTION\"\n  }]),\n  Qe = /* @__PURE__ */s.makeEnum(\"viam.app.mltraining.v1.ModelFramework\", [{\n    no: 0,\n    name: \"MODEL_FRAMEWORK_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"MODEL_FRAMEWORK_TFLITE\",\n    localName: \"TFLITE\"\n  }, {\n    no: 2,\n    name: \"MODEL_FRAMEWORK_TENSORFLOW\",\n    localName: \"TENSORFLOW\"\n  }, {\n    no: 3,\n    name: \"MODEL_FRAMEWORK_PYTORCH\",\n    localName: \"PYTORCH\"\n  }, {\n    no: 4,\n    name: \"MODEL_FRAMEWORK_ONNX\",\n    localName: \"ONNX\"\n  }]),\n  ho = /* @__PURE__ */s.makeEnum(\"viam.app.mltraining.v1.TrainingStatus\", [{\n    no: 0,\n    name: \"TRAINING_STATUS_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"TRAINING_STATUS_PENDING\",\n    localName: \"PENDING\"\n  }, {\n    no: 2,\n    name: \"TRAINING_STATUS_IN_PROGRESS\",\n    localName: \"IN_PROGRESS\"\n  }, {\n    no: 3,\n    name: \"TRAINING_STATUS_COMPLETED\",\n    localName: \"COMPLETED\"\n  }, {\n    no: 4,\n    name: \"TRAINING_STATUS_FAILED\",\n    localName: \"FAILED\"\n  }, {\n    no: 5,\n    name: \"TRAINING_STATUS_CANCELED\",\n    localName: \"CANCELED\"\n  }, {\n    no: 6,\n    name: \"TRAINING_STATUS_CANCELING\",\n    localName: \"CANCELING\"\n  }]),\n  Bd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.SubmitTrainingJobRequest\", () => [{\n    no: 7,\n    name: \"dataset_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"model_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"model_version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"model_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Xe)\n  }, {\n    no: 8,\n    name: \"model_framework\",\n    kind: \"enum\",\n    T: s.getEnumType(Qe)\n  }, {\n    no: 6,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  xd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.SubmitTrainingJobResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Fd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.SubmitCustomTrainingJobRequest\", () => [{\n    no: 1,\n    name: \"dataset_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"registry_item_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"registry_item_version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"model_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"model_version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"arguments\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  }]),\n  Jd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.SubmitCustomTrainingJobResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  zd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.GetTrainingJobRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Yd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.GetTrainingJobResponse\", () => [{\n    no: 1,\n    name: \"metadata\",\n    kind: \"message\",\n    T: fo\n  }]),\n  $d = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.ListTrainingJobsRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"status\",\n    kind: \"enum\",\n    T: s.getEnumType(ho)\n  }]),\n  Vd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.ListTrainingJobsResponse\", () => [{\n    no: 1,\n    name: \"jobs\",\n    kind: \"message\",\n    T: fo,\n    repeated: !0\n  }]),\n  fo = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.TrainingJobMetadata\", () => [{\n    no: 7,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 11,\n    name: \"dataset_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 12,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 13,\n    name: \"model_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 14,\n    name: \"model_version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 15,\n    name: \"model_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Xe)\n  }, {\n    no: 17,\n    name: \"model_framework\",\n    kind: \"enum\",\n    T: s.getEnumType(Qe)\n  }, {\n    no: 18,\n    name: \"is_custom_job\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 19,\n    name: \"registry_item_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 20,\n    name: \"registry_item_version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"status\",\n    kind: \"enum\",\n    T: s.getEnumType(ho)\n  }, {\n    no: 8,\n    name: \"error_status\",\n    kind: \"message\",\n    T: sn\n  }, {\n    no: 3,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"last_modified\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 9,\n    name: \"training_started\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 10,\n    name: \"training_ended\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 5,\n    name: \"synced_model_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 16,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Wd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.CancelTrainingJobRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  jd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.CancelTrainingJobResponse\", []),\n  Hd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.DeleteCompletedTrainingJobRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Kd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.DeleteCompletedTrainingJobResponse\", []),\n  Xd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.TrainingJobLogEntry\", () => [{\n    no: 1,\n    name: \"level\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"time\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 3,\n    name: \"message\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Qd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.GetTrainingJobLogsRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"page_token\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  Zd = /* @__PURE__ */s.makeMessageType(\"viam.app.mltraining.v1.GetTrainingJobLogsResponse\", () => [{\n    no: 1,\n    name: \"logs\",\n    kind: \"message\",\n    T: Xd,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"next_page_token\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  i_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    CancelTrainingJobRequest: Wd,\n    CancelTrainingJobResponse: jd,\n    DeleteCompletedTrainingJobRequest: Hd,\n    DeleteCompletedTrainingJobResponse: Kd,\n    GetTrainingJobLogsRequest: Qd,\n    GetTrainingJobLogsResponse: Zd,\n    GetTrainingJobRequest: zd,\n    GetTrainingJobResponse: Yd,\n    ListTrainingJobsRequest: $d,\n    ListTrainingJobsResponse: Vd,\n    ModelFramework: Qe,\n    ModelType: Xe,\n    SubmitCustomTrainingJobRequest: Fd,\n    SubmitCustomTrainingJobResponse: Jd,\n    SubmitTrainingJobRequest: Bd,\n    SubmitTrainingJobResponse: xd,\n    TrainingJobLogEntry: Xd,\n    TrainingJobMetadata: fo,\n    TrainingStatus: ho\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  fa = /* @__PURE__ */s.makeEnum(\"viam.app.packages.v1.PackageType\", [{\n    no: 0,\n    name: \"PACKAGE_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"PACKAGE_TYPE_ARCHIVE\",\n    localName: \"ARCHIVE\"\n  }, {\n    no: 2,\n    name: \"PACKAGE_TYPE_ML_MODEL\",\n    localName: \"ML_MODEL\"\n  }, {\n    no: 3,\n    name: \"PACKAGE_TYPE_MODULE\",\n    localName: \"MODULE\"\n  }, {\n    no: 4,\n    name: \"PACKAGE_TYPE_SLAM_MAP\",\n    localName: \"SLAM_MAP\"\n  }, {\n    no: 5,\n    name: \"PACKAGE_TYPE_ML_TRAINING\",\n    localName: \"ML_TRAINING\"\n  }]),\n  ep = /* @__PURE__ */s.makeEnum(\"viam.app.v1.AuthenticationType\", [{\n    no: 0,\n    name: \"AUTHENTICATION_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"AUTHENTICATION_TYPE_WEB_OAUTH\",\n    localName: \"WEB_OAUTH\"\n  }, {\n    no: 2,\n    name: \"AUTHENTICATION_TYPE_API_KEY\",\n    localName: \"API_KEY\"\n  }, {\n    no: 3,\n    name: \"AUTHENTICATION_TYPE_ROBOT_PART_SECRET\",\n    localName: \"ROBOT_PART_SECRET\"\n  }, {\n    no: 4,\n    name: \"AUTHENTICATION_TYPE_LOCATION_SECRET\",\n    localName: \"LOCATION_SECRET\"\n  }]),\n  Pn = /* @__PURE__ */s.makeEnum(\"viam.app.v1.FragmentVisibility\", [{\n    no: 0,\n    name: \"FRAGMENT_VISIBILITY_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"FRAGMENT_VISIBILITY_PRIVATE\",\n    localName: \"PRIVATE\"\n  }, {\n    no: 2,\n    name: \"FRAGMENT_VISIBILITY_PUBLIC\",\n    localName: \"PUBLIC\"\n  }, {\n    no: 3,\n    name: \"FRAGMENT_VISIBILITY_PUBLIC_UNLISTED\",\n    localName: \"PUBLIC_UNLISTED\"\n  }]),\n  np = /* @__PURE__ */s.makeEnum(\"viam.app.v1.FragmentErrorType\", [{\n    no: 0,\n    name: \"FRAGMENT_ERROR_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"FRAGMENT_ERROR_TYPE_NO_ACCESS\",\n    localName: \"NO_ACCESS\"\n  }, {\n    no: 2,\n    name: \"FRAGMENT_ERROR_TYPE_NESTING_LIMIT_EXCEEDED\",\n    localName: \"NESTING_LIMIT_EXCEEDED\"\n  }, {\n    no: 3,\n    name: \"FRAGMENT_ERROR_TYPE_CHILD_ID_INVALID\",\n    localName: \"CHILD_ID_INVALID\"\n  }, {\n    no: 4,\n    name: \"FRAGMENT_ERROR_TYPE_CYCLE_DETECTED\",\n    localName: \"CYCLE_DETECTED\"\n  }]),\n  ap = /* @__PURE__ */s.makeEnum(\"viam.app.v1.RegistryItemStatus\", [{\n    no: 0,\n    name: \"REGISTRY_ITEM_STATUS_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"REGISTRY_ITEM_STATUS_PUBLISHED\",\n    localName: \"PUBLISHED\"\n  }, {\n    no: 2,\n    name: \"REGISTRY_ITEM_STATUS_IN_DEVELOPMENT\",\n    localName: \"IN_DEVELOPMENT\"\n  }]),\n  cn = /* @__PURE__ */s.makeEnum(\"viam.app.v1.Visibility\", [{\n    no: 0,\n    name: \"VISIBILITY_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"VISIBILITY_PRIVATE\",\n    localName: \"PRIVATE\"\n  }, {\n    no: 2,\n    name: \"VISIBILITY_PUBLIC\",\n    localName: \"PUBLIC\"\n  }, {\n    no: 3,\n    name: \"VISIBILITY_PUBLIC_UNLISTED\",\n    localName: \"PUBLIC_UNLISTED\"\n  }]),\n  tp = /* @__PURE__ */s.makeEnum(\"viam.app.v1.ClientAuthentication\", [{\n    no: 0,\n    name: \"CLIENT_AUTHENTICATION_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"CLIENT_AUTHENTICATION_REQUIRED\",\n    localName: \"REQUIRED\"\n  }, {\n    no: 2,\n    name: \"CLIENT_AUTHENTICATION_NOT_REQUIRED\",\n    localName: \"NOT_REQUIRED\"\n  }, {\n    no: 3,\n    name: \"CLIENT_AUTHENTICATION_NOT_REQUIRED_WHEN_USING_PKCE\",\n    localName: \"NOT_REQUIRED_WHEN_USING_PKCE\"\n  }]),\n  sp = /* @__PURE__ */s.makeEnum(\"viam.app.v1.PKCE\", [{\n    no: 0,\n    name: \"PKCE_UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"PKCE_REQUIRED\"\n  }, {\n    no: 2,\n    name: \"PKCE_NOT_REQUIRED\"\n  }, {\n    no: 3,\n    name: \"PKCE_NOT_REQUIRED_WHEN_USING_CLIENT_AUTHENTICATION\"\n  }]),\n  op = /* @__PURE__ */s.makeEnum(\"viam.app.v1.URLValidation\", [{\n    no: 0,\n    name: \"URL_VALIDATION_UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"URL_VALIDATION_EXACT_MATCH\"\n  }, {\n    no: 2,\n    name: \"URL_VALIDATION_ALLOW_WILDCARDS\"\n  }]),\n  ip = /* @__PURE__ */s.makeEnum(\"viam.app.v1.EnabledGrant\", [{\n    no: 0,\n    name: \"ENABLED_GRANT_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"ENABLED_GRANT_AUTHORIZATION_CODE\",\n    localName: \"AUTHORIZATION_CODE\"\n  }, {\n    no: 2,\n    name: \"ENABLED_GRANT_IMPLICIT\",\n    localName: \"IMPLICIT\"\n  }, {\n    no: 3,\n    name: \"ENABLED_GRANT_PASSWORD\",\n    localName: \"PASSWORD\"\n  }, {\n    no: 4,\n    name: \"ENABLED_GRANT_REFRESH_TOKEN\",\n    localName: \"REFRESH_TOKEN\"\n  }, {\n    no: 5,\n    name: \"ENABLED_GRANT_DEVICE_CODE\",\n    localName: \"DEVICE_CODE\"\n  }]),\n  Ra = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Robot\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"location\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"last_access\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 5,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }]),\n  ln = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RobotPart\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 10,\n    name: \"dns_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"robot\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 12,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"robot_config\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 6,\n    name: \"last_access\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 7,\n    name: \"user_supplied_info\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 8,\n    name: \"main_part\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 9,\n    name: \"fqdn\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 11,\n    name: \"local_fqdn\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 13,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 14,\n    name: \"secrets\",\n    kind: \"message\",\n    T: So,\n    repeated: !0\n  }, {\n    no: 15,\n    name: \"last_updated\",\n    kind: \"message\",\n    T: _\n  }]),\n  rp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RobotPartHistoryEntry\", () => [{\n    no: 1,\n    name: \"part\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"robot\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"when\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"old\",\n    kind: \"message\",\n    T: ln\n  }, {\n    no: 5,\n    name: \"edited_by\",\n    kind: \"message\",\n    T: Ro\n  }]),\n  Ro = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AuthenticatorInfo\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(ep)\n  }, {\n    no: 2,\n    name: \"value\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"is_deactivated\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  mp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListOrganizationsRequest\", []),\n  dn = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Organization\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"public_namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"default_region\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"cid\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  cp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationMember\", () => [{\n    no: 1,\n    name: \"user_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"emails\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"date_added\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"last_login\",\n    kind: \"message\",\n    T: _,\n    opt: !0\n  }]),\n  lp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListOrganizationsResponse\", () => [{\n    no: 1,\n    name: \"organizations\",\n    kind: \"message\",\n    T: dn,\n    repeated: !0\n  }]),\n  An = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationInvite\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"authorizations\",\n    kind: \"message\",\n    T: Q,\n    repeated: !0\n  }]),\n  dp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateOrganizationRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  pp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateOrganizationResponse\", () => [{\n    no: 1,\n    name: \"organization\",\n    kind: \"message\",\n    T: dn\n  }]),\n  up = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrganizationRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  gp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrganizationResponse\", () => [{\n    no: 1,\n    name: \"organization\",\n    kind: \"message\",\n    T: dn\n  }]),\n  Tp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrganizationNamespaceAvailabilityRequest\", () => [{\n    no: 1,\n    name: \"public_namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  kp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrganizationNamespaceAvailabilityResponse\", () => [{\n    no: 1,\n    name: \"available\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  yp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"public_namespace\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"region\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"cid\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  vp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationResponse\", () => [{\n    no: 1,\n    name: \"organization\",\n    kind: \"message\",\n    T: dn\n  }]),\n  hp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationNamespaceRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"new_public_namespace\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  fp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationNamespaceResponse\", () => [{\n    no: 1,\n    name: \"organization\",\n    kind: \"message\",\n    T: dn\n  }]),\n  Rp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteOrganizationRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  _p = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteOrganizationResponse\", []),\n  Sp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrganizationMetadataRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ip = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrganizationMetadataResponse\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }]),\n  Mp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationMetadataRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }]),\n  bp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationMetadataResponse\", []),\n  wp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListOrganizationMembersRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ep = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListOrganizationMembersResponse\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"members\",\n    kind: \"message\",\n    T: cp,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"invites\",\n    kind: \"message\",\n    T: An,\n    repeated: !0\n  }]),\n  Op = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateOrganizationInviteRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"authorizations\",\n    kind: \"message\",\n    T: Q,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"send_email_invite\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }]),\n  Cp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateOrganizationInviteResponse\", () => [{\n    no: 1,\n    name: \"invite\",\n    kind: \"message\",\n    T: An\n  }]),\n  Np = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"add_authorizations\",\n    kind: \"message\",\n    T: Q,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"remove_authorizations\",\n    kind: \"message\",\n    T: Q,\n    repeated: !0\n  }]),\n  Pp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse\", () => [{\n    no: 1,\n    name: \"invite\",\n    kind: \"message\",\n    T: An\n  }]),\n  Ap = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteOrganizationInviteRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Dp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteOrganizationInviteResponse\", []),\n  qp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ResendOrganizationInviteRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Up = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ResendOrganizationInviteResponse\", () => [{\n    no: 1,\n    name: \"invite\",\n    kind: \"message\",\n    T: An\n  }]),\n  Gp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteOrganizationMemberRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"user_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Lp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteOrganizationMemberResponse\", []),\n  _a = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.BillingAddress\", () => [{\n    no: 1,\n    name: \"address_line_1\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"address_line_2\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"city\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"state\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"zipcode\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"country\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Bp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.EnableBillingServiceRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"billing_address\",\n    kind: \"message\",\n    T: _a\n  }]),\n  xp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.EnableBillingServiceResponse\", []),\n  Fp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateBillingServiceRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"billing_address\",\n    kind: \"message\",\n    T: _a\n  }]),\n  Jp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateBillingServiceResponse\", []),\n  zp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetBillingServiceConfigRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Yp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetBillingServiceConfigResponse\", () => [{\n    no: 1,\n    name: \"billing_address\",\n    kind: \"message\",\n    T: _a\n  }, {\n    no: 2,\n    name: \"support_email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"logo_url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"billing_dashboard_url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  $p = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DisableBillingServiceRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Vp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DisableBillingServiceResponse\", []),\n  Wp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationSetSupportEmailRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  jp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationSetSupportEmailResponse\", []),\n  Hp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationGetSupportEmailRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Kp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationGetSupportEmailResponse\", () => [{\n    no: 1,\n    name: \"email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  _o = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationIdentity\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Xp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LocationOrganization\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"primary\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Sa = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LocationAuth\", () => [{\n    no: 1,\n    name: \"secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"secrets\",\n    kind: \"message\",\n    T: So,\n    repeated: !0\n  }]),\n  Qp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.StorageConfig\", () => [{\n    no: 1,\n    name: \"region\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Dn = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Location\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"parent_location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"auth\",\n    kind: \"message\",\n    T: Sa\n  }, {\n    no: 6,\n    name: \"organizations\",\n    kind: \"message\",\n    T: Xp,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 7,\n    name: \"robot_count\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 8,\n    name: \"config\",\n    kind: \"message\",\n    T: Qp\n  }, {\n    no: 9,\n    name: \"primary_org_identity\",\n    kind: \"message\",\n    T: _o,\n    opt: !0\n  }]),\n  So = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.SharedSecret\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"state\",\n    kind: \"enum\",\n    T: s.getEnumType(Io)\n  }]),\n  Io = /* @__PURE__ */s.makeEnum(\"viam.app.v1.SharedSecret.State\", [{\n    no: 0,\n    name: \"STATE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"STATE_ENABLED\",\n    localName: \"ENABLED\"\n  }, {\n    no: 2,\n    name: \"STATE_DISABLED\",\n    localName: \"DISABLED\"\n  }]),\n  Zp = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateLocationRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"parent_location_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  eu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateLocationResponse\", () => [{\n    no: 1,\n    name: \"location\",\n    kind: \"message\",\n    T: Dn\n  }]),\n  nu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetLocationRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  au = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetLocationResponse\", () => [{\n    no: 1,\n    name: \"location\",\n    kind: \"message\",\n    T: Dn\n  }]),\n  tu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateLocationRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"parent_location_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"region\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  su = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateLocationResponse\", () => [{\n    no: 1,\n    name: \"location\",\n    kind: \"message\",\n    T: Dn\n  }]),\n  ou = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteLocationRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  iu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteLocationResponse\", []),\n  ru = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetLocationMetadataRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  mu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetLocationMetadataResponse\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }]),\n  cu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateLocationMetadataRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }]),\n  lu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateLocationMetadataResponse\", []),\n  du = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrganizationsWithAccessToLocationRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  pu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrganizationsWithAccessToLocationResponse\", () => [{\n    no: 1,\n    name: \"organization_identities\",\n    kind: \"message\",\n    T: _o,\n    repeated: !0\n  }]),\n  uu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListLocationsRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  gu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ShareLocationRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Tu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ShareLocationResponse\", []),\n  ku = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UnshareLocationRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  yu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UnshareLocationResponse\", []),\n  vu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListLocationsResponse\", () => [{\n    no: 1,\n    name: \"locations\",\n    kind: \"message\",\n    T: Dn,\n    repeated: !0\n  }]),\n  hu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateLocationSecretRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  fu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateLocationSecretResponse\", () => [{\n    no: 1,\n    name: \"auth\",\n    kind: \"message\",\n    T: Sa\n  }]),\n  Ru = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteLocationSecretRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"secret_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  _u = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteLocationSecretResponse\", []),\n  Su = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LocationAuthRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Iu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LocationAuthResponse\", () => [{\n    no: 1,\n    name: \"auth\",\n    kind: \"message\",\n    T: Sa\n  }]),\n  Mu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  bu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRoverRentalRobotsRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  wu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RoverRentalRobot\", () => [{\n    no: 1,\n    name: \"robot_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"robot_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"robot_main_part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Eu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRoverRentalRobotsResponse\", () => [{\n    no: 1,\n    name: \"robots\",\n    kind: \"message\",\n    T: wu,\n    repeated: !0\n  }]),\n  Ou = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotResponse\", () => [{\n    no: 1,\n    name: \"robot\",\n    kind: \"message\",\n    T: Ra\n  }]),\n  Cu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartsRequest\", () => [{\n    no: 1,\n    name: \"robot_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Nu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartsResponse\", () => [{\n    no: 1,\n    name: \"parts\",\n    kind: \"message\",\n    T: ln,\n    repeated: !0\n  }]),\n  Pu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Au = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartResponse\", () => [{\n    no: 1,\n    name: \"part\",\n    kind: \"message\",\n    T: ln\n  }, {\n    no: 2,\n    name: \"config_json\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Du = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartLogsRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"errors_only\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"filter\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"page_token\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"levels\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 6,\n    name: \"start\",\n    kind: \"message\",\n    T: _,\n    opt: !0\n  }, {\n    no: 7,\n    name: \"end\",\n    kind: \"message\",\n    T: _,\n    opt: !0\n  }, {\n    no: 8,\n    name: \"limit\",\n    kind: \"scalar\",\n    T: 3,\n    opt: !0\n  }, {\n    no: 9,\n    name: \"source\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  qu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartLogsResponse\", () => [{\n    no: 1,\n    name: \"logs\",\n    kind: \"message\",\n    T: On,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"next_page_token\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Uu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.TailRobotPartLogsRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"errors_only\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"filter\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  Gu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.TailRobotPartLogsResponse\", () => [{\n    no: 1,\n    name: \"logs\",\n    kind: \"message\",\n    T: On,\n    repeated: !0\n  }]),\n  Lu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartHistoryRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Bu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartHistoryResponse\", () => [{\n    no: 1,\n    name: \"history\",\n    kind: \"message\",\n    T: rp,\n    repeated: !0\n  }]),\n  xu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRobotPartRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"robot_config\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 4,\n    name: \"last_known_update\",\n    kind: \"message\",\n    T: _,\n    opt: !0\n  }]),\n  Fu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRobotPartResponse\", () => [{\n    no: 1,\n    name: \"part\",\n    kind: \"message\",\n    T: ln\n  }]),\n  Ju = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.NewRobotPartRequest\", () => [{\n    no: 1,\n    name: \"robot_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"part_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  zu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.NewRobotPartResponse\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Yu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteRobotPartRequest\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  $u = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartMetadataRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Vu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotPartMetadataResponse\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }]),\n  Wu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRobotPartMetadataRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }]),\n  ju = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRobotPartMetadataResponse\", []),\n  Hu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotAPIKeysRequest\", () => [{\n    no: 1,\n    name: \"robot_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ku = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.APIKey\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"key\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }]),\n  Xu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotAPIKeysResponse\", () => [{\n    no: 1,\n    name: \"api_keys\",\n    kind: \"message\",\n    T: No,\n    repeated: !0\n  }]),\n  Qu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteRobotPartResponse\", []),\n  Ye = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Fragment\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"fragment\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 4,\n    name: \"organization_owner\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"public\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 6,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 7,\n    name: \"organization_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 9,\n    name: \"robot_part_count\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 10,\n    name: \"organization_count\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 11,\n    name: \"only_used_by_owner\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 12,\n    name: \"visibility\",\n    kind: \"enum\",\n    T: s.getEnumType(Pn)\n  }, {\n    no: 13,\n    name: \"last_updated\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 14,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Zu = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.FragmentHistoryEntry\", () => [{\n    no: 1,\n    name: \"fragment\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"edited_on\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 3,\n    name: \"old\",\n    kind: \"message\",\n    T: Ye\n  }, {\n    no: 4,\n    name: \"edited_by\",\n    kind: \"message\",\n    T: Ro\n  }, {\n    no: 5,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"config\",\n    kind: \"message\",\n    T: l\n  }]),\n  eg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.FragmentRevision\", () => [{\n    no: 1,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"created_at\",\n    kind: \"message\",\n    T: _\n  }]),\n  Ia = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.FragmentTag\", () => [{\n    no: 1,\n    name: \"tag\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ng = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.FragmentError\", () => [{\n    no: 1,\n    name: \"error_type\",\n    kind: \"enum\",\n    T: s.getEnumType(np)\n  }, {\n    no: 2,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"detail\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ma = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.FragmentUsage\", () => [{\n    no: 1,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"organizations\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 3,\n    name: \"machines\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 4,\n    name: \"machines_in_current_org\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 5,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  Mo = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ResolvedFragment\", () => [{\n    no: 1,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"resolved_config\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 3,\n    name: \"error\",\n    kind: \"message\",\n    T: ng\n  }, {\n    no: 4,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ag = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListFragmentsRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"show_public\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"fragment_visibility\",\n    kind: \"enum\",\n    T: s.getEnumType(Pn),\n    repeated: !0\n  }]),\n  tg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListFragmentsResponse\", () => [{\n    no: 1,\n    name: \"fragments\",\n    kind: \"message\",\n    T: Ye,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"fragment_usages\",\n    kind: \"message\",\n    T: Ma,\n    repeated: !0\n  }]),\n  sg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetFragmentRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"current_organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  og = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetFragmentResponse\", () => [{\n    no: 1,\n    name: \"fragment\",\n    kind: \"message\",\n    T: Ye\n  }, {\n    no: 2,\n    name: \"fragment_usage\",\n    kind: \"message\",\n    T: Ma\n  }, {\n    no: 3,\n    name: \"revisions\",\n    kind: \"message\",\n    T: eg,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"tags\",\n    kind: \"message\",\n    T: Ia,\n    repeated: !0\n  }]),\n  ig = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateFragmentRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"config\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 3,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"visibility\",\n    kind: \"enum\",\n    T: s.getEnumType(Pn),\n    opt: !0\n  }]),\n  rg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateFragmentResponse\", () => [{\n    no: 1,\n    name: \"fragment\",\n    kind: \"message\",\n    T: Ye\n  }]),\n  mg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateFragmentRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"config\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 4,\n    name: \"public\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"visibility\",\n    kind: \"enum\",\n    T: s.getEnumType(Pn),\n    opt: !0\n  }, {\n    no: 6,\n    name: \"last_known_update\",\n    kind: \"message\",\n    T: _,\n    opt: !0\n  }]),\n  cg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateFragmentResponse\", () => [{\n    no: 1,\n    name: \"fragment\",\n    kind: \"message\",\n    T: Ye\n  }]),\n  lg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteFragmentRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  dg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteFragmentResponse\", []),\n  pg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetFragmentHistoryRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"page_token\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"page_limit\",\n    kind: \"scalar\",\n    T: 3,\n    opt: !0\n  }]),\n  ug = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetFragmentHistoryResponse\", () => [{\n    no: 1,\n    name: \"history\",\n    kind: \"message\",\n    T: Zu,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"next_page_token\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  gg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetFragmentUsageRequest\", () => [{\n    no: 1,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Tg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetFragmentUsageResponse\", () => [{\n    no: 1,\n    name: \"version_usages\",\n    kind: \"message\",\n    T: Ma,\n    repeated: !0\n  }]),\n  kg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.SetFragmentTagRequest\", () => [{\n    no: 1,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"tag\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"revision\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  yg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.SetFragmentTagResponse\", () => [{\n    no: 1,\n    name: \"tags\",\n    kind: \"message\",\n    T: Ia,\n    repeated: !0\n  }]),\n  vg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteFragmentTagRequest\", () => [{\n    no: 1,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"tag\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  hg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteFragmentTagResponse\", () => [{\n    no: 1,\n    name: \"tags\",\n    kind: \"message\",\n    T: Ia,\n    repeated: !0\n  }]),\n  fg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListRobotsRequest\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  bo = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AdditionalFragment\", () => [{\n    no: 1,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  Rg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListNestedFragmentsRequest\", () => [{\n    no: 1,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 2,\n    name: \"additional_fragments\",\n    kind: \"message\",\n    T: bo,\n    repeated: !0\n  }]),\n  _g = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListNestedFragmentsResponse\", () => [{\n    no: 1,\n    name: \"fragments\",\n    kind: \"message\",\n    T: Ye,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"resolved_fragments\",\n    kind: \"message\",\n    T: Mo,\n    repeated: !0\n  }]),\n  Sg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListMachineFragmentsRequest\", () => [{\n    no: 1,\n    name: \"machine_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"additional_fragment_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"additional_fragments\",\n    kind: \"message\",\n    T: bo,\n    repeated: !0\n  }]),\n  Ig = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListMachineFragmentsResponse\", () => [{\n    no: 1,\n    name: \"fragments\",\n    kind: \"message\",\n    T: Ye,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"resolved_fragments\",\n    kind: \"message\",\n    T: Mo,\n    repeated: !0\n  }]),\n  Mg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListMachineSummariesRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  bg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListMachineSummariesResponse\", () => [{\n    no: 1,\n    name: \"location_summaries\",\n    kind: \"message\",\n    T: wg,\n    repeated: !0\n  }]),\n  wg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.LocationSummary\", () => [{\n    no: 1,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"location_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"machine_summaries\",\n    kind: \"message\",\n    T: Eg,\n    repeated: !0\n  }]),\n  Eg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MachineSummary\", () => [{\n    no: 1,\n    name: \"machine_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"machine_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"part_summaries\",\n    kind: \"message\",\n    T: Pg,\n    repeated: !0\n  }]),\n  Og = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.FragmentSummary\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Cg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ViamServerVersion\", () => [{\n    no: 1,\n    name: \"major\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"version\"\n  }, {\n    no: 2,\n    name: \"minor\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"version\"\n  }]),\n  Ng = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ViamAgentVersion\", () => [{\n    no: 1,\n    name: \"major\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"version\"\n  }, {\n    no: 2,\n    name: \"minor\",\n    kind: \"scalar\",\n    T: 9,\n    oneof: \"version\"\n  }]),\n  Pg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.PartSummary\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"part_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"last_online\",\n    kind: \"message\",\n    T: _,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"viam_server_version\",\n    kind: \"message\",\n    T: Cg,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"viam_agent_version\",\n    kind: \"message\",\n    T: Ng,\n    opt: !0\n  }, {\n    no: 6,\n    name: \"os\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 7,\n    name: \"platform\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 8,\n    name: \"public_ip_address\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 9,\n    name: \"fragments\",\n    kind: \"message\",\n    T: Og,\n    repeated: !0\n  }]),\n  Ag = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListRobotsResponse\", () => [{\n    no: 1,\n    name: \"robots\",\n    kind: \"message\",\n    T: Ra,\n    repeated: !0\n  }]),\n  Dg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.NewRobotRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"location\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  qg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.NewRobotResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ug = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRobotRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"location\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Gg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRobotResponse\", () => [{\n    no: 1,\n    name: \"robot\",\n    kind: \"message\",\n    T: Ra\n  }]),\n  Lg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteRobotRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Bg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteRobotResponse\", []),\n  xg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotMetadataRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Fg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRobotMetadataResponse\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }]),\n  Jg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRobotMetadataRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }]),\n  zg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRobotMetadataResponse\", []),\n  Yg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MarkPartAsMainRequest\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  $g = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MarkPartAsMainResponse\", []),\n  Vg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MarkPartForRestartRequest\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Wg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MarkPartForRestartResponse\", []),\n  jg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateRobotPartSecretRequest\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Hg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateRobotPartSecretResponse\", () => [{\n    no: 1,\n    name: \"part\",\n    kind: \"message\",\n    T: ln\n  }]),\n  Kg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteRobotPartSecretRequest\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"secret_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Xg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteRobotPartSecretResponse\", []),\n  Q = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Authorization\", () => [{\n    no: 1,\n    name: \"authorization_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"authorization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"resource_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"resource_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"identity_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"identity_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Qg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AddRoleRequest\", () => [{\n    no: 1,\n    name: \"authorization\",\n    kind: \"message\",\n    T: Q\n  }]),\n  Zg = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AddRoleResponse\", []),\n  eT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RemoveRoleRequest\", () => [{\n    no: 1,\n    name: \"authorization\",\n    kind: \"message\",\n    T: Q\n  }]),\n  nT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RemoveRoleResponse\", []),\n  aT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ChangeRoleRequest\", () => [{\n    no: 1,\n    name: \"old_authorization\",\n    kind: \"message\",\n    T: Q\n  }, {\n    no: 2,\n    name: \"new_authorization\",\n    kind: \"message\",\n    T: Q\n  }]),\n  tT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ChangeRoleResponse\", []),\n  sT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListAuthorizationsRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"resource_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  oT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListAuthorizationsResponse\", () => [{\n    no: 1,\n    name: \"authorizations\",\n    kind: \"message\",\n    T: Q,\n    repeated: !0\n  }]),\n  iT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CheckPermissionsRequest\", () => [{\n    no: 1,\n    name: \"permissions\",\n    kind: \"message\",\n    T: wo,\n    repeated: !0\n  }]),\n  wo = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AuthorizedPermissions\", () => [{\n    no: 1,\n    name: \"resource_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"resource_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"permissions\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  rT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CheckPermissionsResponse\", () => [{\n    no: 1,\n    name: \"authorized_permissions\",\n    kind: \"message\",\n    T: wo,\n    repeated: !0\n  }]),\n  mT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ModuleVersion\", () => [{\n    no: 1,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"files\",\n    kind: \"message\",\n    T: Oo,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"models\",\n    kind: \"message\",\n    T: Ze,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"entrypoint\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"first_run\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 6,\n    name: \"markdown_description\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  cT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ModuleMetadata\", () => [{\n    no: 1,\n    name: \"models\",\n    kind: \"message\",\n    T: Ze,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"versions\",\n    kind: \"message\",\n    T: mT,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"entrypoint\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"first_run\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"markdown_description\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  lT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MLModelMetadata\", () => [{\n    no: 1,\n    name: \"versions\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"model_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Xe)\n  }, {\n    no: 3,\n    name: \"model_framework\",\n    kind: \"enum\",\n    T: s.getEnumType(Qe)\n  }]),\n  dT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MLTrainingVersion\", () => [{\n    no: 1,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"created_on\",\n    kind: \"message\",\n    T: _\n  }]),\n  pT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.MLTrainingMetadata\", () => [{\n    no: 5,\n    name: \"versions\",\n    kind: \"message\",\n    T: dT,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"model_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Xe)\n  }, {\n    no: 3,\n    name: \"model_framework\",\n    kind: \"enum\",\n    T: s.getEnumType(Qe)\n  }, {\n    no: 4,\n    name: \"draft\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  ba = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RegistryItem\", () => [{\n    no: 1,\n    name: \"item_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"public_namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(fa)\n  }, {\n    no: 6,\n    name: \"visibility\",\n    kind: \"enum\",\n    T: s.getEnumType(cn)\n  }, {\n    no: 7,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 8,\n    name: \"description\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 9,\n    name: \"total_robot_usage\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 13,\n    name: \"total_external_robot_usage\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 10,\n    name: \"total_organization_usage\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 14,\n    name: \"total_external_organization_usage\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 11,\n    name: \"module_metadata\",\n    kind: \"message\",\n    T: cT,\n    oneof: \"metadata\"\n  }, {\n    no: 12,\n    name: \"ml_model_metadata\",\n    kind: \"message\",\n    T: lT,\n    oneof: \"metadata\"\n  }, {\n    no: 18,\n    name: \"ml_training_metadata\",\n    kind: \"message\",\n    T: pT,\n    oneof: \"metadata\"\n  }, {\n    no: 15,\n    name: \"created_at\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 16,\n    name: \"updated_at\",\n    kind: \"message\",\n    T: _\n  }]),\n  uT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRegistryItemRequest\", () => [{\n    no: 1,\n    name: \"item_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"include_markdown_documentation\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }]),\n  gT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetRegistryItemResponse\", () => [{\n    no: 1,\n    name: \"item\",\n    kind: \"message\",\n    T: ba\n  }]),\n  TT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateRegistryItemRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(fa)\n  }]),\n  kT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateRegistryItemResponse\", []),\n  yT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRegistryItemRequest\", () => [{\n    no: 1,\n    name: \"item_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(fa)\n  }, {\n    no: 3,\n    name: \"description\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"visibility\",\n    kind: \"enum\",\n    T: s.getEnumType(cn)\n  }, {\n    no: 5,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 6,\n    name: \"update_module_metadata\",\n    kind: \"message\",\n    T: PT,\n    oneof: \"metadata\"\n  }, {\n    no: 7,\n    name: \"update_ml_model_metadata\",\n    kind: \"message\",\n    T: AT,\n    oneof: \"metadata\"\n  }, {\n    no: 8,\n    name: \"update_ml_training_metadata\",\n    kind: \"message\",\n    T: DT,\n    oneof: \"metadata\"\n  }, {\n    no: 9,\n    name: \"markdown_description\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  vT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateRegistryItemResponse\", []),\n  hT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListRegistryItemsRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 2,\n    name: \"types\",\n    kind: \"enum\",\n    T: s.getEnumType(fa),\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"visibilities\",\n    kind: \"enum\",\n    T: s.getEnumType(cn),\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"platforms\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 5,\n    name: \"statuses\",\n    kind: \"enum\",\n    T: s.getEnumType(ap),\n    repeated: !0\n  }, {\n    no: 6,\n    name: \"search_term\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 7,\n    name: \"page_token\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 8,\n    name: \"public_namespaces\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 9,\n    name: \"include_markdown_documentation\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }]),\n  fT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListRegistryItemsResponse\", () => [{\n    no: 1,\n    name: \"items\",\n    kind: \"message\",\n    T: ba,\n    repeated: !0\n  }]),\n  RT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteRegistryItemRequest\", () => [{\n    no: 1,\n    name: \"item_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  _T = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteRegistryItemResponse\", []),\n  ST = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RenameRegistryItemRequest\", () => [{\n    no: 1,\n    name: \"item_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"new_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  IT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RenameRegistryItemResponse\", () => [{\n    no: 1,\n    name: \"item\",\n    kind: \"message\",\n    T: ba\n  }]),\n  MT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.TransferRegistryItemRequest\", () => [{\n    no: 1,\n    name: \"item_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"new_public_namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  bT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.TransferRegistryItemResponse\", []),\n  wT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateModuleRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ET = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateModuleResponse\", () => [{\n    no: 1,\n    name: \"module_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  OT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateModuleRequest\", () => [{\n    no: 1,\n    name: \"module_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"visibility\",\n    kind: \"enum\",\n    T: s.getEnumType(cn)\n  }, {\n    no: 3,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"description\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"models\",\n    kind: \"message\",\n    T: Ze,\n    repeated: !0\n  }, {\n    no: 6,\n    name: \"entrypoint\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"first_run\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 8,\n    name: \"apps\",\n    kind: \"message\",\n    T: CT,\n    repeated: !0\n  }, {\n    no: 9,\n    name: \"markdown_description\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  CT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.App\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"entrypoint\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  NT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateModuleResponse\", () => [{\n    no: 1,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  PT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateModuleMetadata\", () => [{\n    no: 1,\n    name: \"models\",\n    kind: \"message\",\n    T: Ze,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"entrypoint\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  AT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateMLModelMetadata\", () => [{\n    no: 1,\n    name: \"model_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Xe)\n  }, {\n    no: 2,\n    name: \"model_framework\",\n    kind: \"enum\",\n    T: s.getEnumType(Qe)\n  }]),\n  DT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateMLTrainingMetadata\", () => [{\n    no: 1,\n    name: \"model_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Xe)\n  }, {\n    no: 2,\n    name: \"model_framework\",\n    kind: \"enum\",\n    T: s.getEnumType(Qe)\n  }, {\n    no: 3,\n    name: \"draft\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Ze = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Model\", () => [{\n    no: 1,\n    name: \"api\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"model\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"markdown_documentation\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"description\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"supported_hardware\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  qT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ModuleFileInfo\", () => [{\n    no: 1,\n    name: \"module_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"platform\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"platform_tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  UT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UploadModuleFileRequest\", () => [{\n    no: 1,\n    name: \"module_file_info\",\n    kind: \"message\",\n    T: qT,\n    oneof: \"module_file\"\n  }, {\n    no: 2,\n    name: \"file\",\n    kind: \"scalar\",\n    T: 12,\n    oneof: \"module_file\"\n  }]),\n  GT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UploadModuleFileResponse\", () => [{\n    no: 1,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  LT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetModuleRequest\", () => [{\n    no: 1,\n    name: \"module_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"include_markdown_documentation\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }]),\n  BT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetModuleResponse\", () => [{\n    no: 1,\n    name: \"module\",\n    kind: \"message\",\n    T: Eo\n  }]),\n  Eo = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Module\", () => [{\n    no: 1,\n    name: \"module_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"visibility\",\n    kind: \"enum\",\n    T: s.getEnumType(cn)\n  }, {\n    no: 4,\n    name: \"versions\",\n    kind: \"message\",\n    T: xT,\n    repeated: !0\n  }, {\n    no: 5,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"description\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"models\",\n    kind: \"message\",\n    T: Ze,\n    repeated: !0\n  }, {\n    no: 8,\n    name: \"total_robot_usage\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 9,\n    name: \"total_organization_usage\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }, {\n    no: 10,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 11,\n    name: \"entrypoint\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 12,\n    name: \"public_namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 13,\n    name: \"first_run\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 14,\n    name: \"markdown_description\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  xT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.VersionHistory\", () => [{\n    no: 1,\n    name: \"version\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"files\",\n    kind: \"message\",\n    T: Oo,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"models\",\n    kind: \"message\",\n    T: Ze,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"entrypoint\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"first_run\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 6,\n    name: \"markdown_description\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  Oo = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.Uploads\", () => [{\n    no: 1,\n    name: \"platform\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"uploaded_at\",\n    kind: \"message\",\n    T: _\n  }]),\n  FT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListModulesRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 2,\n    name: \"include_markdown_documentation\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }]),\n  JT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListModulesResponse\", () => [{\n    no: 1,\n    name: \"modules\",\n    kind: \"message\",\n    T: Eo,\n    repeated: !0\n  }]),\n  zT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetUserIDByEmailRequest\", () => [{\n    no: 1,\n    name: \"email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  YT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetUserIDByEmailResponse\", () => [{\n    no: 1,\n    name: \"user_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  $T = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListOrganizationsByUserRequest\", () => [{\n    no: 1,\n    name: \"user_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Co = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrgDetails\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"org_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"org_cid\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"public_namespace\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"billing_tier\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  VT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListOrganizationsByUserResponse\", () => [{\n    no: 1,\n    name: \"orgs\",\n    kind: \"message\",\n    T: Co,\n    repeated: !0\n  }]),\n  WT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.SearchOrganizationsRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 2,\n    name: \"org_name\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 3,\n    name: \"cid\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"public_namespace\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  jT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.SearchOrganizationsResponse\", () => [{\n    no: 1,\n    name: \"organizations\",\n    kind: \"message\",\n    T: Co,\n    repeated: !0\n  }]),\n  HT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateKeyRequest\", () => [{\n    no: 1,\n    name: \"authorizations\",\n    kind: \"message\",\n    T: Q,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  KT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateKeyResponse\", () => [{\n    no: 1,\n    name: \"key\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  XT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteKeyRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  QT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteKeyResponse\", []),\n  ZT = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RenameKeyRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ek = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RenameKeyResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  nk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.AuthorizationDetails\", () => [{\n    no: 1,\n    name: \"authorization_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"authorization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"resource_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"resource_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  No = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.APIKeyWithAuthorizations\", () => [{\n    no: 1,\n    name: \"api_key\",\n    kind: \"message\",\n    T: Ku\n  }, {\n    no: 2,\n    name: \"authorizations\",\n    kind: \"message\",\n    T: nk,\n    repeated: !0\n  }]),\n  ak = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListKeysRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  tk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListKeysResponse\", () => [{\n    no: 1,\n    name: \"api_keys\",\n    kind: \"message\",\n    T: No,\n    repeated: !0\n  }]),\n  sk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RotateKeyRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ok = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.RotateKeyResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"key\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ik = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  rk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"key\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  mk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetAppContentRequest\", () => [{\n    no: 1,\n    name: \"public_namespace\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  ck = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetAppContentResponse\", () => [{\n    no: 1,\n    name: \"blob_path\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"entrypoint\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  lk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationSetLogoRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"logo\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  dk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationSetLogoResponse\", []),\n  pk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationGetLogoRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  uk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OrganizationGetLogoResponse\", () => [{\n    no: 1,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  gk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.EnableAuthServiceRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Tk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.EnableAuthServiceResponse\", []),\n  kk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DisableAuthServiceRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  yk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DisableAuthServiceResponse\", []),\n  vk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateOAuthAppRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"client_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"oauth_config\",\n    kind: \"message\",\n    T: wa\n  }]),\n  hk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.CreateOAuthAppResponse\", () => [{\n    no: 1,\n    name: \"client_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"client_secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  fk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ReadOAuthAppRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"client_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Rk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ReadOAuthAppResponse\", () => [{\n    no: 1,\n    name: \"client_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"client_secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"oauth_config\",\n    kind: \"message\",\n    T: wa\n  }]),\n  _k = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOAuthAppRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"client_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"client_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"oauth_config\",\n    kind: \"message\",\n    T: wa\n  }]),\n  Sk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOAuthAppResponse\", []),\n  Ik = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteOAuthAppRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"client_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Mk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.DeleteOAuthAppResponse\", []),\n  bk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListOAuthAppsRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  wk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ListOAuthAppsResponse\", () => [{\n    no: 1,\n    name: \"client_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  wa = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.OAuthConfig\", () => [{\n    no: 1,\n    name: \"client_authentication\",\n    kind: \"enum\",\n    T: s.getEnumType(tp)\n  }, {\n    no: 2,\n    name: \"pkce\",\n    kind: \"enum\",\n    T: s.getEnumType(sp)\n  }, {\n    no: 3,\n    name: \"url_validation\",\n    kind: \"enum\",\n    T: s.getEnumType(op)\n  }, {\n    no: 4,\n    name: \"origin_uris\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 5,\n    name: \"redirect_uris\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 6,\n    name: \"logout_uri\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"enabled_grants\",\n    kind: \"enum\",\n    T: s.getEnumType(ip),\n    repeated: !0\n  }]),\n  r_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    APIKey: Ku,\n    APIKeyWithAuthorizations: No,\n    AddRoleRequest: Qg,\n    AddRoleResponse: Zg,\n    AdditionalFragment: bo,\n    App: CT,\n    AuthenticationType: ep,\n    AuthenticatorInfo: Ro,\n    Authorization: Q,\n    AuthorizationDetails: nk,\n    AuthorizedPermissions: wo,\n    BillingAddress: _a,\n    ChangeRoleRequest: aT,\n    ChangeRoleResponse: tT,\n    CheckPermissionsRequest: iT,\n    CheckPermissionsResponse: rT,\n    ClientAuthentication: tp,\n    CreateFragmentRequest: ig,\n    CreateFragmentResponse: rg,\n    CreateKeyFromExistingKeyAuthorizationsRequest: ik,\n    CreateKeyFromExistingKeyAuthorizationsResponse: rk,\n    CreateKeyRequest: HT,\n    CreateKeyResponse: KT,\n    CreateLocationRequest: Zp,\n    CreateLocationResponse: eu,\n    CreateLocationSecretRequest: hu,\n    CreateLocationSecretResponse: fu,\n    CreateModuleRequest: wT,\n    CreateModuleResponse: ET,\n    CreateOAuthAppRequest: vk,\n    CreateOAuthAppResponse: hk,\n    CreateOrganizationInviteRequest: Op,\n    CreateOrganizationInviteResponse: Cp,\n    CreateOrganizationRequest: dp,\n    CreateOrganizationResponse: pp,\n    CreateRegistryItemRequest: TT,\n    CreateRegistryItemResponse: kT,\n    CreateRobotPartSecretRequest: jg,\n    CreateRobotPartSecretResponse: Hg,\n    DeleteFragmentRequest: lg,\n    DeleteFragmentResponse: dg,\n    DeleteFragmentTagRequest: vg,\n    DeleteFragmentTagResponse: hg,\n    DeleteKeyRequest: XT,\n    DeleteKeyResponse: QT,\n    DeleteLocationRequest: ou,\n    DeleteLocationResponse: iu,\n    DeleteLocationSecretRequest: Ru,\n    DeleteLocationSecretResponse: _u,\n    DeleteOAuthAppRequest: Ik,\n    DeleteOAuthAppResponse: Mk,\n    DeleteOrganizationInviteRequest: Ap,\n    DeleteOrganizationInviteResponse: Dp,\n    DeleteOrganizationMemberRequest: Gp,\n    DeleteOrganizationMemberResponse: Lp,\n    DeleteOrganizationRequest: Rp,\n    DeleteOrganizationResponse: _p,\n    DeleteRegistryItemRequest: RT,\n    DeleteRegistryItemResponse: _T,\n    DeleteRobotPartRequest: Yu,\n    DeleteRobotPartResponse: Qu,\n    DeleteRobotPartSecretRequest: Kg,\n    DeleteRobotPartSecretResponse: Xg,\n    DeleteRobotRequest: Lg,\n    DeleteRobotResponse: Bg,\n    DisableAuthServiceRequest: kk,\n    DisableAuthServiceResponse: yk,\n    DisableBillingServiceRequest: $p,\n    DisableBillingServiceResponse: Vp,\n    EnableAuthServiceRequest: gk,\n    EnableAuthServiceResponse: Tk,\n    EnableBillingServiceRequest: Bp,\n    EnableBillingServiceResponse: xp,\n    EnabledGrant: ip,\n    Fragment: Ye,\n    FragmentError: ng,\n    FragmentErrorType: np,\n    FragmentHistoryEntry: Zu,\n    FragmentRevision: eg,\n    FragmentSummary: Og,\n    FragmentTag: Ia,\n    FragmentUsage: Ma,\n    FragmentVisibility: Pn,\n    GetAppContentRequest: mk,\n    GetAppContentResponse: ck,\n    GetBillingServiceConfigRequest: zp,\n    GetBillingServiceConfigResponse: Yp,\n    GetFragmentHistoryRequest: pg,\n    GetFragmentHistoryResponse: ug,\n    GetFragmentRequest: sg,\n    GetFragmentResponse: og,\n    GetFragmentUsageRequest: gg,\n    GetFragmentUsageResponse: Tg,\n    GetLocationMetadataRequest: ru,\n    GetLocationMetadataResponse: mu,\n    GetLocationRequest: nu,\n    GetLocationResponse: au,\n    GetModuleRequest: LT,\n    GetModuleResponse: BT,\n    GetOrganizationMetadataRequest: Sp,\n    GetOrganizationMetadataResponse: Ip,\n    GetOrganizationNamespaceAvailabilityRequest: Tp,\n    GetOrganizationNamespaceAvailabilityResponse: kp,\n    GetOrganizationRequest: up,\n    GetOrganizationResponse: gp,\n    GetOrganizationsWithAccessToLocationRequest: du,\n    GetOrganizationsWithAccessToLocationResponse: pu,\n    GetRegistryItemRequest: uT,\n    GetRegistryItemResponse: gT,\n    GetRobotAPIKeysRequest: Hu,\n    GetRobotAPIKeysResponse: Xu,\n    GetRobotMetadataRequest: xg,\n    GetRobotMetadataResponse: Fg,\n    GetRobotPartHistoryRequest: Lu,\n    GetRobotPartHistoryResponse: Bu,\n    GetRobotPartLogsRequest: Du,\n    GetRobotPartLogsResponse: qu,\n    GetRobotPartMetadataRequest: $u,\n    GetRobotPartMetadataResponse: Vu,\n    GetRobotPartRequest: Pu,\n    GetRobotPartResponse: Au,\n    GetRobotPartsRequest: Cu,\n    GetRobotPartsResponse: Nu,\n    GetRobotRequest: Mu,\n    GetRobotResponse: Ou,\n    GetRoverRentalRobotsRequest: bu,\n    GetRoverRentalRobotsResponse: Eu,\n    GetUserIDByEmailRequest: zT,\n    GetUserIDByEmailResponse: YT,\n    ListAuthorizationsRequest: sT,\n    ListAuthorizationsResponse: oT,\n    ListFragmentsRequest: ag,\n    ListFragmentsResponse: tg,\n    ListKeysRequest: ak,\n    ListKeysResponse: tk,\n    ListLocationsRequest: uu,\n    ListLocationsResponse: vu,\n    ListMachineFragmentsRequest: Sg,\n    ListMachineFragmentsResponse: Ig,\n    ListMachineSummariesRequest: Mg,\n    ListMachineSummariesResponse: bg,\n    ListModulesRequest: FT,\n    ListModulesResponse: JT,\n    ListNestedFragmentsRequest: Rg,\n    ListNestedFragmentsResponse: _g,\n    ListOAuthAppsRequest: bk,\n    ListOAuthAppsResponse: wk,\n    ListOrganizationMembersRequest: wp,\n    ListOrganizationMembersResponse: Ep,\n    ListOrganizationsByUserRequest: $T,\n    ListOrganizationsByUserResponse: VT,\n    ListOrganizationsRequest: mp,\n    ListOrganizationsResponse: lp,\n    ListRegistryItemsRequest: hT,\n    ListRegistryItemsResponse: fT,\n    ListRobotsRequest: fg,\n    ListRobotsResponse: Ag,\n    Location: Dn,\n    LocationAuth: Sa,\n    LocationAuthRequest: Su,\n    LocationAuthResponse: Iu,\n    LocationOrganization: Xp,\n    LocationSummary: wg,\n    MLModelMetadata: lT,\n    MLTrainingMetadata: pT,\n    MLTrainingVersion: dT,\n    MachineSummary: Eg,\n    MarkPartAsMainRequest: Yg,\n    MarkPartAsMainResponse: $g,\n    MarkPartForRestartRequest: Vg,\n    MarkPartForRestartResponse: Wg,\n    Model: Ze,\n    Module: Eo,\n    ModuleFileInfo: qT,\n    ModuleMetadata: cT,\n    ModuleVersion: mT,\n    NewRobotPartRequest: Ju,\n    NewRobotPartResponse: zu,\n    NewRobotRequest: Dg,\n    NewRobotResponse: qg,\n    OAuthConfig: wa,\n    OrgDetails: Co,\n    Organization: dn,\n    OrganizationGetLogoRequest: pk,\n    OrganizationGetLogoResponse: uk,\n    OrganizationGetSupportEmailRequest: Hp,\n    OrganizationGetSupportEmailResponse: Kp,\n    OrganizationIdentity: _o,\n    OrganizationInvite: An,\n    OrganizationMember: cp,\n    OrganizationSetLogoRequest: lk,\n    OrganizationSetLogoResponse: dk,\n    OrganizationSetSupportEmailRequest: Wp,\n    OrganizationSetSupportEmailResponse: jp,\n    PKCE: sp,\n    PartSummary: Pg,\n    ReadOAuthAppRequest: fk,\n    ReadOAuthAppResponse: Rk,\n    RegistryItem: ba,\n    RegistryItemStatus: ap,\n    RemoveRoleRequest: eT,\n    RemoveRoleResponse: nT,\n    RenameKeyRequest: ZT,\n    RenameKeyResponse: ek,\n    RenameRegistryItemRequest: ST,\n    RenameRegistryItemResponse: IT,\n    ResendOrganizationInviteRequest: qp,\n    ResendOrganizationInviteResponse: Up,\n    ResolvedFragment: Mo,\n    Robot: Ra,\n    RobotPart: ln,\n    RobotPartHistoryEntry: rp,\n    RotateKeyRequest: sk,\n    RotateKeyResponse: ok,\n    RoverRentalRobot: wu,\n    SearchOrganizationsRequest: WT,\n    SearchOrganizationsResponse: jT,\n    SetFragmentTagRequest: kg,\n    SetFragmentTagResponse: yg,\n    ShareLocationRequest: gu,\n    ShareLocationResponse: Tu,\n    SharedSecret: So,\n    SharedSecret_State: Io,\n    StorageConfig: Qp,\n    TailRobotPartLogsRequest: Uu,\n    TailRobotPartLogsResponse: Gu,\n    TransferRegistryItemRequest: MT,\n    TransferRegistryItemResponse: bT,\n    URLValidation: op,\n    UnshareLocationRequest: ku,\n    UnshareLocationResponse: yu,\n    UpdateBillingServiceRequest: Fp,\n    UpdateBillingServiceResponse: Jp,\n    UpdateFragmentRequest: mg,\n    UpdateFragmentResponse: cg,\n    UpdateLocationMetadataRequest: cu,\n    UpdateLocationMetadataResponse: lu,\n    UpdateLocationRequest: tu,\n    UpdateLocationResponse: su,\n    UpdateMLModelMetadata: AT,\n    UpdateMLTrainingMetadata: DT,\n    UpdateModuleMetadata: PT,\n    UpdateModuleRequest: OT,\n    UpdateModuleResponse: NT,\n    UpdateOAuthAppRequest: _k,\n    UpdateOAuthAppResponse: Sk,\n    UpdateOrganizationInviteAuthorizationsRequest: Np,\n    UpdateOrganizationInviteAuthorizationsResponse: Pp,\n    UpdateOrganizationMetadataRequest: Mp,\n    UpdateOrganizationMetadataResponse: bp,\n    UpdateOrganizationNamespaceRequest: hp,\n    UpdateOrganizationNamespaceResponse: fp,\n    UpdateOrganizationRequest: yp,\n    UpdateOrganizationResponse: vp,\n    UpdateRegistryItemRequest: yT,\n    UpdateRegistryItemResponse: vT,\n    UpdateRobotMetadataRequest: Jg,\n    UpdateRobotMetadataResponse: zg,\n    UpdateRobotPartMetadataRequest: Wu,\n    UpdateRobotPartMetadataResponse: ju,\n    UpdateRobotPartRequest: xu,\n    UpdateRobotPartResponse: Fu,\n    UpdateRobotRequest: Ug,\n    UpdateRobotResponse: Gg,\n    UploadModuleFileRequest: UT,\n    UploadModuleFileResponse: GT,\n    Uploads: Oo,\n    VersionHistory: xT,\n    ViamAgentVersion: Ng,\n    ViamServerVersion: Cg,\n    Visibility: cn\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  s1 = {\n    typeName: \"viam.app.v1.AppService\",\n    methods: {\n      /**\n       * Get the id of the user with the email\n       *\n       * @generated from rpc viam.app.v1.AppService.GetUserIDByEmail\n       */\n      getUserIDByEmail: {\n        name: \"GetUserIDByEmail\",\n        I: zT,\n        O: YT,\n        kind: m.Unary\n      },\n      /**\n       * Create a new organization\n       *\n       * @generated from rpc viam.app.v1.AppService.CreateOrganization\n       */\n      createOrganization: {\n        name: \"CreateOrganization\",\n        I: dp,\n        O: pp,\n        kind: m.Unary\n      },\n      /**\n       * List organizations\n       *\n       * @generated from rpc viam.app.v1.AppService.ListOrganizations\n       */\n      listOrganizations: {\n        name: \"ListOrganizations\",\n        I: mp,\n        O: lp,\n        kind: m.Unary\n      },\n      /**\n       * Get all organizations that have access to a location.\n       *\n       * @generated from rpc viam.app.v1.AppService.GetOrganizationsWithAccessToLocation\n       */\n      getOrganizationsWithAccessToLocation: {\n        name: \"GetOrganizationsWithAccessToLocation\",\n        I: du,\n        O: pu,\n        kind: m.Unary\n      },\n      /**\n       * List the organizations a user belongs to\n       *\n       * @generated from rpc viam.app.v1.AppService.ListOrganizationsByUser\n       */\n      listOrganizationsByUser: {\n        name: \"ListOrganizationsByUser\",\n        I: $T,\n        O: VT,\n        kind: m.Unary\n      },\n      /**\n       * Search organizations by a couple fields\n       *\n       * @generated from rpc viam.app.v1.AppService.SearchOrganizations\n       */\n      searchOrganizations: {\n        name: \"SearchOrganizations\",\n        I: WT,\n        O: jT,\n        kind: m.Unary\n      },\n      /**\n       * Get an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.GetOrganization\n       */\n      getOrganization: {\n        name: \"GetOrganization\",\n        I: up,\n        O: gp,\n        kind: m.Unary\n      },\n      /**\n       * Checks for namespace availablity throughout all orgs.\n       *\n       * @generated from rpc viam.app.v1.AppService.GetOrganizationNamespaceAvailability\n       */\n      getOrganizationNamespaceAvailability: {\n        name: \"GetOrganizationNamespaceAvailability\",\n        I: Tp,\n        O: kp,\n        kind: m.Unary\n      },\n      /**\n       * Update an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateOrganization\n       */\n      updateOrganization: {\n        name: \"UpdateOrganization\",\n        I: yp,\n        O: vp,\n        kind: m.Unary\n      },\n      /**\n       * Update an organization's namespace if it's already been set.\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateOrganizationNamespace\n       */\n      updateOrganizationNamespace: {\n        name: \"UpdateOrganizationNamespace\",\n        I: hp,\n        O: fp,\n        kind: m.Unary\n      },\n      /**\n       * Delete an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteOrganization\n       */\n      deleteOrganization: {\n        name: \"DeleteOrganization\",\n        I: Rp,\n        O: _p,\n        kind: m.Unary\n      },\n      /**\n       * Get user-defined metadata for an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.GetOrganizationMetadata\n       */\n      getOrganizationMetadata: {\n        name: \"GetOrganizationMetadata\",\n        I: Sp,\n        O: Ip,\n        kind: m.Unary\n      },\n      /**\n       * Update user-defined metadata for an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateOrganizationMetadata\n       */\n      updateOrganizationMetadata: {\n        name: \"UpdateOrganizationMetadata\",\n        I: Mp,\n        O: bp,\n        kind: m.Unary\n      },\n      /**\n       * List all members of an organization and all invited members to the organization.\n       *\n       * @generated from rpc viam.app.v1.AppService.ListOrganizationMembers\n       */\n      listOrganizationMembers: {\n        name: \"ListOrganizationMembers\",\n        I: wp,\n        O: Ep,\n        kind: m.Unary\n      },\n      /**\n       * Create an organization invite to an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.CreateOrganizationInvite\n       */\n      createOrganizationInvite: {\n        name: \"CreateOrganizationInvite\",\n        I: Op,\n        O: Cp,\n        kind: m.Unary\n      },\n      /**\n       * Update the authorizations attached to an organization invite\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateOrganizationInviteAuthorizations\n       */\n      updateOrganizationInviteAuthorizations: {\n        name: \"UpdateOrganizationInviteAuthorizations\",\n        I: Np,\n        O: Pp,\n        kind: m.Unary\n      },\n      /**\n       * Delete an organization member from an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteOrganizationMember\n       */\n      deleteOrganizationMember: {\n        name: \"DeleteOrganizationMember\",\n        I: Gp,\n        O: Lp,\n        kind: m.Unary\n      },\n      /**\n       * Delete an organization invite\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteOrganizationInvite\n       */\n      deleteOrganizationInvite: {\n        name: \"DeleteOrganizationInvite\",\n        I: Ap,\n        O: Dp,\n        kind: m.Unary\n      },\n      /**\n       * Resend an organization invite\n       *\n       * @generated from rpc viam.app.v1.AppService.ResendOrganizationInvite\n       */\n      resendOrganizationInvite: {\n        name: \"ResendOrganizationInvite\",\n        I: qp,\n        O: Up,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.EnableBillingService\n       */\n      enableBillingService: {\n        name: \"EnableBillingService\",\n        I: Bp,\n        O: xp,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.DisableBillingService\n       */\n      disableBillingService: {\n        name: \"DisableBillingService\",\n        I: $p,\n        O: Vp,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.UpdateBillingService\n       */\n      updateBillingService: {\n        name: \"UpdateBillingService\",\n        I: Fp,\n        O: Jp,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.GetBillingServiceConfig\n       */\n      getBillingServiceConfig: {\n        name: \"GetBillingServiceConfig\",\n        I: zp,\n        O: Yp,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.OrganizationSetSupportEmail\n       */\n      organizationSetSupportEmail: {\n        name: \"OrganizationSetSupportEmail\",\n        I: Wp,\n        O: jp,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.OrganizationGetSupportEmail\n       */\n      organizationGetSupportEmail: {\n        name: \"OrganizationGetSupportEmail\",\n        I: Hp,\n        O: Kp,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.OrganizationSetLogo\n       */\n      organizationSetLogo: {\n        name: \"OrganizationSetLogo\",\n        I: lk,\n        O: dk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.OrganizationGetLogo\n       */\n      organizationGetLogo: {\n        name: \"OrganizationGetLogo\",\n        I: pk,\n        O: uk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.EnableAuthService\n       */\n      enableAuthService: {\n        name: \"EnableAuthService\",\n        I: gk,\n        O: Tk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.DisableAuthService\n       */\n      disableAuthService: {\n        name: \"DisableAuthService\",\n        I: kk,\n        O: yk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.CreateOAuthApp\n       */\n      createOAuthApp: {\n        name: \"CreateOAuthApp\",\n        I: vk,\n        O: hk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.ReadOAuthApp\n       */\n      readOAuthApp: {\n        name: \"ReadOAuthApp\",\n        I: fk,\n        O: Rk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.UpdateOAuthApp\n       */\n      updateOAuthApp: {\n        name: \"UpdateOAuthApp\",\n        I: _k,\n        O: Sk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.DeleteOAuthApp\n       */\n      deleteOAuthApp: {\n        name: \"DeleteOAuthApp\",\n        I: Ik,\n        O: Mk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.ListOAuthApps\n       */\n      listOAuthApps: {\n        name: \"ListOAuthApps\",\n        I: bk,\n        O: wk,\n        kind: m.Unary\n      },\n      /**\n       * Create a location\n       *\n       * @generated from rpc viam.app.v1.AppService.CreateLocation\n       */\n      createLocation: {\n        name: \"CreateLocation\",\n        I: Zp,\n        O: eu,\n        kind: m.Unary\n      },\n      /**\n       * Get a location\n       *\n       * @generated from rpc viam.app.v1.AppService.GetLocation\n       */\n      getLocation: {\n        name: \"GetLocation\",\n        I: nu,\n        O: au,\n        kind: m.Unary\n      },\n      /**\n       * Update a location\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateLocation\n       */\n      updateLocation: {\n        name: \"UpdateLocation\",\n        I: tu,\n        O: su,\n        kind: m.Unary\n      },\n      /**\n       * Delete a location\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteLocation\n       */\n      deleteLocation: {\n        name: \"DeleteLocation\",\n        I: ou,\n        O: iu,\n        kind: m.Unary\n      },\n      /**\n       * Get user-defined metadata for a location\n       *\n       * @generated from rpc viam.app.v1.AppService.GetLocationMetadata\n       */\n      getLocationMetadata: {\n        name: \"GetLocationMetadata\",\n        I: ru,\n        O: mu,\n        kind: m.Unary\n      },\n      /**\n       * Update user-defined metadata for a location\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateLocationMetadata\n       */\n      updateLocationMetadata: {\n        name: \"UpdateLocationMetadata\",\n        I: cu,\n        O: lu,\n        kind: m.Unary\n      },\n      /**\n       * Get a list of locations\n       *\n       * @generated from rpc viam.app.v1.AppService.ListLocations\n       */\n      listLocations: {\n        name: \"ListLocations\",\n        I: uu,\n        O: vu,\n        kind: m.Unary\n      },\n      /**\n       * Share a location with an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.ShareLocation\n       */\n      shareLocation: {\n        name: \"ShareLocation\",\n        I: gu,\n        O: Tu,\n        kind: m.Unary\n      },\n      /**\n       * Stop sharing a location with an organization\n       *\n       * @generated from rpc viam.app.v1.AppService.UnshareLocation\n       */\n      unshareLocation: {\n        name: \"UnshareLocation\",\n        I: ku,\n        O: yu,\n        kind: m.Unary\n      },\n      /**\n       * Get a location's authorization secrets\n       *\n       * @generated from rpc viam.app.v1.AppService.LocationAuth\n       */\n      locationAuth: {\n        name: \"LocationAuth\",\n        I: Su,\n        O: Iu,\n        kind: m.Unary\n      },\n      /**\n       * Create a new generated Secret in the Location.\n       *  - Succeeds if there are no more than 2 active secrets after creation.\n       *\n       * @generated from rpc viam.app.v1.AppService.CreateLocationSecret\n       */\n      createLocationSecret: {\n        name: \"CreateLocationSecret\",\n        I: hu,\n        O: fu,\n        kind: m.Unary\n      },\n      /**\n       * Delete a Secret from the Location.\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteLocationSecret\n       */\n      deleteLocationSecret: {\n        name: \"DeleteLocationSecret\",\n        I: Ru,\n        O: _u,\n        kind: m.Unary\n      },\n      /**\n       * Get a specific robot by ID\n       *\n       * @generated from rpc viam.app.v1.AppService.GetRobot\n       */\n      getRobot: {\n        name: \"GetRobot\",\n        I: Mu,\n        O: Ou,\n        kind: m.Unary\n      },\n      /**\n       * Get user-defined metadata for a robot\n       *\n       * @generated from rpc viam.app.v1.AppService.GetRobotMetadata\n       */\n      getRobotMetadata: {\n        name: \"GetRobotMetadata\",\n        I: xg,\n        O: Fg,\n        kind: m.Unary\n      },\n      /**\n       * Update user-defined metadata for an robot\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateRobotMetadata\n       */\n      updateRobotMetadata: {\n        name: \"UpdateRobotMetadata\",\n        I: Jg,\n        O: zg,\n        kind: m.Unary\n      },\n      /**\n       * Get Rover Rental Location Robots\n       *\n       * @generated from rpc viam.app.v1.AppService.GetRoverRentalRobots\n       */\n      getRoverRentalRobots: {\n        name: \"GetRoverRentalRobots\",\n        I: bu,\n        O: Eu,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.GetRobotParts\n       */\n      getRobotParts: {\n        name: \"GetRobotParts\",\n        I: Cu,\n        O: Nu,\n        kind: m.Unary\n      },\n      /**\n       * Get a specific robot part by ID\n       *\n       * @generated from rpc viam.app.v1.AppService.GetRobotPart\n       */\n      getRobotPart: {\n        name: \"GetRobotPart\",\n        I: Pu,\n        O: Au,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.GetRobotPartLogs\n       */\n      getRobotPartLogs: {\n        name: \"GetRobotPartLogs\",\n        I: Du,\n        O: qu,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.TailRobotPartLogs\n       */\n      tailRobotPartLogs: {\n        name: \"TailRobotPartLogs\",\n        I: Uu,\n        O: Gu,\n        kind: m.ServerStreaming\n      },\n      /**\n       * Get a specific robot part histy by ID\n       *\n       * @generated from rpc viam.app.v1.AppService.GetRobotPartHistory\n       */\n      getRobotPartHistory: {\n        name: \"GetRobotPartHistory\",\n        I: Lu,\n        O: Bu,\n        kind: m.Unary\n      },\n      /**\n       * Update a robot\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateRobotPart\n       */\n      updateRobotPart: {\n        name: \"UpdateRobotPart\",\n        I: xu,\n        O: Fu,\n        kind: m.Unary\n      },\n      /**\n       * Create a new robot part\n       *\n       * @generated from rpc viam.app.v1.AppService.NewRobotPart\n       */\n      newRobotPart: {\n        name: \"NewRobotPart\",\n        I: Ju,\n        O: zu,\n        kind: m.Unary\n      },\n      /**\n       * Delete a robot part\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteRobotPart\n       */\n      deleteRobotPart: {\n        name: \"DeleteRobotPart\",\n        I: Yu,\n        O: Qu,\n        kind: m.Unary\n      },\n      /**\n       * Get user-defined metadata for a robot part\n       *\n       * @generated from rpc viam.app.v1.AppService.GetRobotPartMetadata\n       */\n      getRobotPartMetadata: {\n        name: \"GetRobotPartMetadata\",\n        I: $u,\n        O: Vu,\n        kind: m.Unary\n      },\n      /**\n       * Update user-defined metadata for an robot part\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateRobotPartMetadata\n       */\n      updateRobotPartMetadata: {\n        name: \"UpdateRobotPartMetadata\",\n        I: Wu,\n        O: ju,\n        kind: m.Unary\n      },\n      /**\n       * Gets the Robot API Keys for the robot\n       *\n       * @generated from rpc viam.app.v1.AppService.GetRobotAPIKeys\n       */\n      getRobotAPIKeys: {\n        name: \"GetRobotAPIKeys\",\n        I: Hu,\n        O: Xu,\n        kind: m.Unary\n      },\n      /**\n       * Marks the given part as the main part, and all the others as not\n       *\n       * @generated from rpc viam.app.v1.AppService.MarkPartAsMain\n       */\n      markPartAsMain: {\n        name: \"MarkPartAsMain\",\n        I: Yg,\n        O: $g,\n        kind: m.Unary\n      },\n      /**\n       * Marks part for restart. Once the robot part checks-in with the app the flag\n       * is reset on the robot part. Calling this multiple times before a robot part\n       * checks-in has no affect.\n       * Note: This API may be removed in the near future.\n       * TODO(APP-388): Remove\n       *\n       * @generated from rpc viam.app.v1.AppService.MarkPartForRestart\n       */\n      markPartForRestart: {\n        name: \"MarkPartForRestart\",\n        I: Vg,\n        O: Wg,\n        kind: m.Unary\n      },\n      /**\n       * Create a new generated Secret in the Robot Part.\n       *  - Succeeds if there are no more than 2 active secrets after creation.\n       *\n       * @generated from rpc viam.app.v1.AppService.CreateRobotPartSecret\n       */\n      createRobotPartSecret: {\n        name: \"CreateRobotPartSecret\",\n        I: jg,\n        O: Hg,\n        kind: m.Unary\n      },\n      /**\n       * Delete a Secret from the RobotPart.\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteRobotPartSecret\n       */\n      deleteRobotPartSecret: {\n        name: \"DeleteRobotPartSecret\",\n        I: Kg,\n        O: Xg,\n        kind: m.Unary\n      },\n      /**\n       * Get a list of robots\n       *\n       * @generated from rpc viam.app.v1.AppService.ListRobots\n       */\n      listRobots: {\n        name: \"ListRobots\",\n        I: fg,\n        O: Ag,\n        kind: m.Unary\n      },\n      /**\n       * NewRobot creates a new robot\n       *\n       * @generated from rpc viam.app.v1.AppService.NewRobot\n       */\n      newRobot: {\n        name: \"NewRobot\",\n        I: Dg,\n        O: qg,\n        kind: m.Unary\n      },\n      /**\n       * UpdateRobot updates a robot\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateRobot\n       */\n      updateRobot: {\n        name: \"UpdateRobot\",\n        I: Ug,\n        O: Gg,\n        kind: m.Unary\n      },\n      /**\n       * DeleteRobot deletes a robot\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteRobot\n       */\n      deleteRobot: {\n        name: \"DeleteRobot\",\n        I: Lg,\n        O: Bg,\n        kind: m.Unary\n      },\n      /**\n       * Gets a list of fragments\n       *\n       * @generated from rpc viam.app.v1.AppService.ListFragments\n       */\n      listFragments: {\n        name: \"ListFragments\",\n        I: ag,\n        O: tg,\n        kind: m.Unary\n      },\n      /**\n       * Gets a single fragment\n       *\n       * @generated from rpc viam.app.v1.AppService.GetFragment\n       */\n      getFragment: {\n        name: \"GetFragment\",\n        I: sg,\n        O: og,\n        kind: m.Unary\n      },\n      /**\n       * Creates a fragment\n       *\n       * @generated from rpc viam.app.v1.AppService.CreateFragment\n       */\n      createFragment: {\n        name: \"CreateFragment\",\n        I: ig,\n        O: rg,\n        kind: m.Unary\n      },\n      /**\n       * Updates a fragment\n       *\n       * @generated from rpc viam.app.v1.AppService.UpdateFragment\n       */\n      updateFragment: {\n        name: \"UpdateFragment\",\n        I: mg,\n        O: cg,\n        kind: m.Unary\n      },\n      /**\n       * Deletes a fragment\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteFragment\n       */\n      deleteFragment: {\n        name: \"DeleteFragment\",\n        I: lg,\n        O: dg,\n        kind: m.Unary\n      },\n      /**\n       * List nested fragments for a fragment\n       *\n       * @generated from rpc viam.app.v1.AppService.ListNestedFragments\n       */\n      listNestedFragments: {\n        name: \"ListNestedFragments\",\n        I: Rg,\n        O: _g,\n        kind: m.Unary\n      },\n      /**\n       * Gets top level and nested fragments for a machine, as well as any other specified fragment ids\n       *\n       * @generated from rpc viam.app.v1.AppService.ListMachineFragments\n       */\n      listMachineFragments: {\n        name: \"ListMachineFragments\",\n        I: Sg,\n        O: Ig,\n        kind: m.Unary\n      },\n      /**\n       * List all machines and their corresponding machine dashboard information\n       *\n       * @generated from rpc viam.app.v1.AppService.ListMachineSummaries\n       */\n      listMachineSummaries: {\n        name: \"ListMachineSummaries\",\n        I: Mg,\n        O: bg,\n        kind: m.Unary\n      },\n      /**\n       * Gets fragment history\n       *\n       * @generated from rpc viam.app.v1.AppService.GetFragmentHistory\n       */\n      getFragmentHistory: {\n        name: \"GetFragmentHistory\",\n        I: pg,\n        O: ug,\n        kind: m.Unary\n      },\n      /**\n       * Gets usage for a fragment across versions\n       *\n       * @generated from rpc viam.app.v1.AppService.GetFragmentUsage\n       */\n      getFragmentUsage: {\n        name: \"GetFragmentUsage\",\n        I: gg,\n        O: Tg,\n        kind: m.Unary\n      },\n      /**\n       * Sets a fragment tag to a revision\n       *\n       * @generated from rpc viam.app.v1.AppService.SetFragmentTag\n       */\n      setFragmentTag: {\n        name: \"SetFragmentTag\",\n        I: kg,\n        O: yg,\n        kind: m.Unary\n      },\n      /**\n       * Deletes a fragment tag\n       *\n       * @generated from rpc viam.app.v1.AppService.DeleteFragmentTag\n       */\n      deleteFragmentTag: {\n        name: \"DeleteFragmentTag\",\n        I: vg,\n        O: hg,\n        kind: m.Unary\n      },\n      /**\n       * Creates an IdentityAuthorization\n       *\n       * @generated from rpc viam.app.v1.AppService.AddRole\n       */\n      addRole: {\n        name: \"AddRole\",\n        I: Qg,\n        O: Zg,\n        kind: m.Unary\n      },\n      /**\n       * Deletes an IdentityAuthorization\n       *\n       * @generated from rpc viam.app.v1.AppService.RemoveRole\n       */\n      removeRole: {\n        name: \"RemoveRole\",\n        I: eT,\n        O: nT,\n        kind: m.Unary\n      },\n      /**\n       * Changes an IdentityAuthorization to a new IdentityAuthorization\n       *\n       * @generated from rpc viam.app.v1.AppService.ChangeRole\n       */\n      changeRole: {\n        name: \"ChangeRole\",\n        I: aT,\n        O: tT,\n        kind: m.Unary\n      },\n      /**\n       * Returns all authorization roles for a given resource\n       *\n       * @generated from rpc viam.app.v1.AppService.ListAuthorizations\n       */\n      listAuthorizations: {\n        name: \"ListAuthorizations\",\n        I: sT,\n        O: oT,\n        kind: m.Unary\n      },\n      /**\n       * Validates a permission for the current user\n       *\n       * @generated from rpc viam.app.v1.AppService.CheckPermissions\n       */\n      checkPermissions: {\n        name: \"CheckPermissions\",\n        I: iT,\n        O: rT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.GetRegistryItem\n       */\n      getRegistryItem: {\n        name: \"GetRegistryItem\",\n        I: uT,\n        O: gT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.CreateRegistryItem\n       */\n      createRegistryItem: {\n        name: \"CreateRegistryItem\",\n        I: TT,\n        O: kT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.UpdateRegistryItem\n       */\n      updateRegistryItem: {\n        name: \"UpdateRegistryItem\",\n        I: yT,\n        O: vT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.ListRegistryItems\n       */\n      listRegistryItems: {\n        name: \"ListRegistryItems\",\n        I: hT,\n        O: fT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.DeleteRegistryItem\n       */\n      deleteRegistryItem: {\n        name: \"DeleteRegistryItem\",\n        I: RT,\n        O: _T,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.RenameRegistryItem\n       */\n      renameRegistryItem: {\n        name: \"RenameRegistryItem\",\n        I: ST,\n        O: IT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.TransferRegistryItem\n       */\n      transferRegistryItem: {\n        name: \"TransferRegistryItem\",\n        I: MT,\n        O: bT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.CreateModule\n       */\n      createModule: {\n        name: \"CreateModule\",\n        I: wT,\n        O: ET,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.UpdateModule\n       */\n      updateModule: {\n        name: \"UpdateModule\",\n        I: OT,\n        O: NT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.UploadModuleFile\n       */\n      uploadModuleFile: {\n        name: \"UploadModuleFile\",\n        I: UT,\n        O: GT,\n        kind: m.ClientStreaming\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.GetModule\n       */\n      getModule: {\n        name: \"GetModule\",\n        I: LT,\n        O: BT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.ListModules\n       */\n      listModules: {\n        name: \"ListModules\",\n        I: FT,\n        O: JT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.CreateKey\n       */\n      createKey: {\n        name: \"CreateKey\",\n        I: HT,\n        O: KT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.DeleteKey\n       */\n      deleteKey: {\n        name: \"DeleteKey\",\n        I: XT,\n        O: QT,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.ListKeys\n       */\n      listKeys: {\n        name: \"ListKeys\",\n        I: ak,\n        O: tk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.RenameKey\n       */\n      renameKey: {\n        name: \"RenameKey\",\n        I: ZT,\n        O: ek,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.RotateKey\n       */\n      rotateKey: {\n        name: \"RotateKey\",\n        I: sk,\n        O: ok,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.CreateKeyFromExistingKeyAuthorizations\n       */\n      createKeyFromExistingKeyAuthorizations: {\n        name: \"CreateKeyFromExistingKeyAuthorizations\",\n        I: ik,\n        O: rk,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.app.v1.AppService.GetAppContent\n       */\n      getAppContent: {\n        name: \"GetAppContent\",\n        I: mk,\n        O: ck,\n        kind: m.Unary\n      }\n    }\n  },\n  Si = (a, e, n, t, o, i) => new Q({\n    authorizationType: \"role\",\n    identityId: e,\n    identityType: o,\n    authorizationId: `${t}_${n}`,\n    resourceType: t,\n    organizationId: a,\n    resourceId: i\n  });\nclass o1 {\n  client;\n  constructor(e) {\n    this.client = na(s1, e);\n  }\n  /**\n   * Obtain a user's ID from their email address. Internal use only.\n   *\n   * @example\n   *\n   * ```ts\n   * // This method is used internally only. To obtain a user's ID, use the listOrganizationsByUser method.\n   * const members = await appClient.listOrganizationMembers(\n   *   '<YOUR-ORGANIZATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getuseridbyemail).\n   *\n   * @param email The email address of the user\n   * @returns The user's ID\n   */\n  async getUserIDByEmail(e) {\n    return (await this.client.getUserIDByEmail({\n      email: e\n    })).userId;\n  }\n  /**\n   * Create a new organization.\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createorganization).\n   *\n   * @param name The name of the new organization\n   * @returns The new organization\n   */\n  async createOrganization(e) {\n    return (await this.client.createOrganization({\n      name: e\n    })).organization;\n  }\n  /**\n   * List all organizations.\n   *\n   * @example\n   *\n   * ```ts\n   * const organizations = await appClient.listOrganizations();\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listorganizations).\n   *\n   * @returns The organization list\n   */\n  async listOrganizations() {\n    return (await this.client.listOrganizations({})).organizations;\n  }\n  /**\n   * List all organizations with access to a particular location.\n   *\n   * @example\n   *\n   * ```ts\n   * const organizations =\n   *   await appClient.getOrganizationsWithAccessToLocation(\n   *     '<YOUR-LOCATION-ID>'\n   *   );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getorganizationswithaccesstolocation).\n   *\n   * @param locationId The ID of the location to query\n   * @returns The list of locations with access to the requested location\n   */\n  async getOrganizationsWithAccessToLocation(e) {\n    return (await this.client.getOrganizationsWithAccessToLocation({\n      locationId: e\n    })).organizationIdentities;\n  }\n  /**\n   * List all organizations associated with a user. Internal use only.\n   *\n   * @param userId The ID of the user to query\n   * @returns The list of locations the requested user has access to\n   */\n  async listOrganizationsByUser(e) {\n    return (await this.client.listOrganizationsByUser({\n      userId: e\n    })).orgs;\n  }\n  /**\n   * Get details about an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const organization = await appClient.getOrganization(\n   *   '<YOUR-ORGANIZATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getorganization).\n   *\n   * @param organizationId The ID of the organization\n   * @returns Details about the organization, if it exists\n   */\n  async getOrganization(e) {\n    return (await this.client.getOrganization({\n      organizationId: e\n    })).organization;\n  }\n  /**\n   * Find out if an organization namespace is available.\n   *\n   * @example\n   *\n   * ```ts\n   * const isAvailable =\n   *   await appClient.getOrganizationNamespaceAvailability('name');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getorganizationnamespaceavailability).\n   *\n   * @param namespace The namespace to query for availability\n   * @returns A boolean indicating whether or not the namespace is available\n   */\n  async getOrganizationNamespaceAvailability(e) {\n    return (await this.client.getOrganizationNamespaceAvailability({\n      publicNamespace: e\n    })).available;\n  }\n  /**\n   * Updates organization details.\n   *\n   * @example\n   *\n   * ```ts\n   * const organization = await appClient.updateOrganization(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'newName'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updateorganization).\n   *\n   * @param organizationId The id of the organization to update\n   * @param name Optional name to update the organization with\n   * @param publicNamespace Optional namespace to update the organization with\n   * @param region Optional region to update the organization with\n   * @param cid Optional CRM ID to update the organization with\n   * @returns The updated organization details\n   */\n  async updateOrganization(e, n, t, o, i) {\n    return (await this.client.updateOrganization({\n      organizationId: e,\n      name: n,\n      publicNamespace: t,\n      region: o,\n      cid: i\n    })).organization;\n  }\n  /**\n   * Deletes an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteOrganization('<YOUR-ORGANIZATION-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deleteorganization).\n   *\n   * @param organizationId The id of the organization to delete\n   */\n  async deleteOrganization(e) {\n    await this.client.deleteOrganization({\n      organizationId: e\n    });\n  }\n  /**\n   * Lists organization memebers and outstanding invites.\n   *\n   * @example\n   *\n   * ```ts\n   * const members = await appClient.listOrganizationMembers(\n   *   '<YOUR-ORGANIZATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listorganizationmembers).\n   *\n   * @param organizationId The id of the organization to query\n   * @returns An object containing organization members, pending invites, and\n   *   org ID\n   */\n  async listOrganizationMembers(e) {\n    return this.client.listOrganizationMembers({\n      organizationId: e\n    });\n  }\n  /**\n   * Creates a new invitation to join an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const auth = new VIAM.appApi.Authorization({\n   *   authorizationType: 'role',\n   *   authorizationId: 'organization_operator',\n   *   organizationId: '<YOUR-ORGANIZATION-ID>',\n   *   resourceId: '<YOUR-RESOURCE-ID>', // The resource to grant access to\n   *   resourceType: 'organization', // The type of resource to grant access to\n   *   identityId: '<YOUR-USER-ID>', // The user id of the user to grant access to (optional)\n   *   roleId: 'owner', // The role to grant access to\n   *   identityType: 'user',\n   * });\n   *\n   * const invite = await appClient.createOrganizationInvite(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'youremail@email.com',\n   *   [auth]\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createorganizationinvite).\n   *\n   * @param organizationId The id of the organization to create the invite for\n   * @param email The email address of the user to generate an invite for\n   * @param authorizations The authorizations to associate with the new invite\n   * @param sendEmailInvite Bool of whether to send an email invite (true) or\n   *   automatically add a user. Defaults to true\n   * @returns The organization invite\n   */\n  async createOrganizationInvite(e, n, t, o = !0) {\n    return (await this.client.createOrganizationInvite({\n      organizationId: e,\n      email: n,\n      authorizations: t,\n      sendEmailInvite: o\n    })).invite;\n  }\n  /**\n   * Updates authorizations for an existing org invite.\n   *\n   * @example\n   *\n   * ```ts\n   * const auth = new VIAM.appApi.Authorization({\n   *   authorizationType: 'role',\n   *   authorizationId: 'organization_operator',\n   *   organizationId: '<YOUR-ORGANIZATION-ID>',\n   *   resourceId: '<YOUR-RESOURCE-ID>', // The resource to grant access to\n   *   resourceType: 'organization', // The type of resource to grant access to\n   *   identityId: '<YOUR-USER-ID>', // The user id of the user to grant access to (optional)\n   *   roleId: 'owner', // The role to grant access to\n   *   identityType: 'user',\n   * });\n   * const invite = await appClient.updateOrganizationInviteAuthorizations(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'youremail@email.com',\n   *   [auth],\n   *   []\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updateorganizationinviteauthorizations).\n   *\n   * @param organizationId The id of the organization\n   * @param email The email address associated with the invite\n   * @param addAuthsList List of authorizations to add to the invite\n   * @param removeAuthsList List of authorizations to remove from the invite\n   * @returns The organization invite\n   */\n  async updateOrganizationInviteAuthorizations(e, n, t, o) {\n    return (await this.client.updateOrganizationInviteAuthorizations({\n      organizationId: e,\n      email: n,\n      addAuthorizations: t,\n      removeAuthorizations: o\n    })).invite;\n  }\n  /**\n   * Removes a member from an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteOrganizationMember(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   '<YOUR-USER-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deleteorganizationmember).\n   *\n   * @param organizationId The ID of the organization\n   * @param userId The ID of the user\n   */\n  async deleteOrganizationMember(e, n) {\n    await this.client.deleteOrganizationMember({\n      organizationId: e,\n      userId: n\n    });\n  }\n  /**\n   * Deletes a pending organization invite.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteOrganizationInvite(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'youremail@email.com'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deleteorganizationinvite).\n   *\n   * @param organizationId The ID of the organization\n   * @param email The email associated with the invite to delete\n   */\n  async deleteOrganizationInvite(e, n) {\n    await this.client.deleteOrganizationInvite({\n      organizationId: e,\n      email: n\n    });\n  }\n  /**\n   * Resends a pending organization invite.\n   *\n   * @example\n   *\n   * ```ts\n   * const invite = await appClient.resendOrganizationInvite(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'youremail@email.com'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#resendorganizationinvite).\n   *\n   * @param organizationId The ID of the organization\n   * @param email The email associated with the invite to resend\n   * @returns The invite\n   */\n  async resendOrganizationInvite(e, n) {\n    return (await this.client.resendOrganizationInvite({\n      organizationId: e,\n      email: n\n    })).invite;\n  }\n  /**\n   * Creates a new location.\n   *\n   * @example\n   *\n   * ```ts\n   * const location = await appClient.createLocation(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'name'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createlocation).\n   *\n   * @param organizationId The ID of the organization to create the location\n   *   under\n   * @param name The name of the location to create\n   * @param parentLocationId Optional name of a parent location to create the\n   *   new location under\n   * @returns The location object\n   */\n  async createLocation(e, n, t) {\n    return (await this.client.createLocation({\n      organizationId: e,\n      name: n,\n      parentLocationId: t\n    })).location;\n  }\n  /**\n   * Looks up a location.\n   *\n   * @example\n   *\n   * ```ts\n   * const location = await appClient.getLocation('<YOUR-LOCATION-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getlocation).\n   *\n   * @param locId The ID of the location to query.\n   * @returns The location object\n   */\n  async getLocation(e) {\n    return (await this.client.getLocation({\n      locationId: e\n    })).location;\n  }\n  /**\n   * Updates location details.\n   *\n   * @example\n   *\n   * ```ts\n   * const location = await appClient.updateLocation(\n   *   '<YOUR-LOCATION-ID>',\n   *   'newName'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updatelocation).\n   *\n   * @param locId The ID of the location to update\n   * @param name Optional string to update the location's name to\n   * @param parentLocId Optional string to update the location's parent location\n   *   to\n   * @param region Optional string to update the location's region to\n   * @returns The location object\n   */\n  async updateLocation(e, n, t, o) {\n    return (await this.client.updateLocation({\n      locationId: e,\n      name: n,\n      parentLocationId: t,\n      region: o\n    })).location;\n  }\n  /**\n   * Deletes a location\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteLocation('<YOUR-LOCATION-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deletelocation).\n   *\n   * @param locId The ID of the location to delete\n   */\n  async deleteLocation(e) {\n    await this.client.deleteLocation({\n      locationId: e\n    });\n  }\n  /**\n   * Lists all locations under an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const locations = await appClient.listLocations(\n   *   '<YOUR-ORGANIZATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listlocations).\n   *\n   * @param organizationId The ID of the organization to query\n   * @returns A list of locations under the organization\n   */\n  async listLocations(e) {\n    return (await this.client.listLocations({\n      organizationId: e\n    })).locations;\n  }\n  /**\n   * Shares a location with another organization\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.shareLocation(\n   *   '<OTHER-ORGANIZATION-ID>',\n   *   '<YOUR-LOCATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#sharelocation).\n   *\n   * @param organizationId The ID of the organization to share with\n   * @param locId The ID of the location to share\n   */\n  async shareLocation(e, n) {\n    await this.client.shareLocation({\n      organizationId: e,\n      locationId: n\n    });\n  }\n  /**\n   * Unshares a location with an organization\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.unshareLocation(\n   *   '<OTHER-ORGANIZATION-ID>',\n   *   '<YOUR-LOCATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#unsharelocation).\n   *\n   * @param organizationId The ID of the organization to unshare with\n   * @param locId The ID of the location to unshare\n   */\n  async unshareLocation(e, n) {\n    await this.client.unshareLocation({\n      organizationId: e,\n      locationId: n\n    });\n  }\n  /**\n   * Get a location's `LocationAuth` (location secret(s)).\n   *\n   * @example\n   *\n   * ```ts\n   * const locationAuth = await appClient.locationAuth(\n   *   '<YOUR-LOCATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#locationauth).\n   *\n   * @param locId The ID of the location to retrieve `LocationAuth` from.\n   * @returns The `LocationAuth` for the requested location.\n   */\n  async locationAuth(e) {\n    return (await this.client.locationAuth({\n      locationId: e\n    })).auth;\n  }\n  /**\n   * Create a location secret (`LocationAuth`).\n   *\n   * @example\n   *\n   * ```ts\n   * const locationAuth = await appClient.createLocationSecret(\n   *   '<YOUR-LOCATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createlocationsecret).\n   *\n   * @param locId The ID of the location to create a `LocationAuth` for\n   * @returns The newly created `LocationAuth`\n   */\n  async createLocationSecret(e) {\n    return (await this.client.createLocationSecret({\n      locationId: e\n    })).auth;\n  }\n  /**\n   * Deletes a location secret (`LocationAuth`).\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteLocationSecret(\n   *   '<YOUR-LOCATION-ID>',\n   *   '<YOUR-SECRET-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deletelocationsecret).\n   *\n   * @param locId The ID of the location to delete the `LocationAuth` from\n   * @param secretId The ID of the location secret to delete\n   */\n  async deleteLocationSecret(e, n) {\n    await this.client.deleteLocationSecret({\n      locationId: e,\n      secretId: n\n    });\n  }\n  /**\n   * Queries a robot by its ID.\n   *\n   * @example\n   *\n   * ```ts\n   * const robot = await appClient.getRobot('<YOUR-ROBOT-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getrobot).\n   *\n   * @param id The ID of the robot\n   * @returns The `Robot` object\n   */\n  async getRobot(e) {\n    return (await this.client.getRobot({\n      id: e\n    })).robot;\n  }\n  /**\n   * Returns a list of rover rental robots for an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const roverRentalRobots = await appClient.getRoverRentalRobots(\n   *   '<YOUR-ORGANIZATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getroverrentalrobots).\n   *\n   * @param orgId The ID of the organization to query\n   * @returns The list of `RoverRentalRobot` objects\n   */\n  async getRoverRentalRobots(e) {\n    return (await this.client.getRoverRentalRobots({\n      orgId: e\n    })).robots;\n  }\n  /**\n   * Returns a list of parts for a given robot\n   *\n   * @example\n   *\n   * ```ts\n   * const robotParts = await appClient.getRobotParts('<YOUR-ROBOT-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getrobotparts).\n   *\n   * @param robotId The ID of the robot to query\n   * @returns The list of `RobotPart` objects associated with the robot\n   */\n  async getRobotParts(e) {\n    return (await this.client.getRobotParts({\n      robotId: e\n    })).parts;\n  }\n  /**\n   * Queries a specific robot part by ID.\n   *\n   * @example\n   *\n   * ```ts\n   * const robotPart = await appClient.getRobotPart('<YOUR-ROBOT-PART-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getrobotpart).\n   *\n   * @param id The ID of the requested robot part\n   * @returns The robot part and a its json config\n   */\n  async getRobotPart(e) {\n    return this.client.getRobotPart({\n      id: e\n    });\n  }\n  /**\n   * Get a page of log entries for a specific robot part. Logs are sorted by\n   * descending time (newest first).\n   *\n   * @example\n   *\n   * ```ts\n   * const robotPartLogs = await appClient.getRobotPartLogs(\n   *   '<YOUR-ROBOT-PART-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getrobotpartlogs).\n   *\n   * @param id The ID of the requested robot part\n   * @param filter Optional string to filter logs on\n   * @param levels Optional array of log levels to return. Defaults to returning\n   *   all log levels\n   * @param pageToken Optional string indicating which page of logs to query.\n   *   Defaults to the most recent\n   * @returns The robot requested logs and the page token for the next page of\n   *   logs\n   */\n  async getRobotPartLogs(e, n, t, o = \"\") {\n    return this.client.getRobotPartLogs({\n      id: e,\n      filter: n,\n      levels: t,\n      pageToken: o\n    });\n  }\n  /**\n   * Get a stream of log entries for a specific robot part. Logs are sorted by\n   * descending time (newest first).\n   *\n   * @example\n   *\n   * ```ts\n   * const robotPartLogs = await appClient.tailRobotPartLogs(\n   *   '<YOUR-ROBOT-PART-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#tailrobotpartlogs).\n   *\n   * @param id The ID of the requested robot part\n   * @param queue A queue to put the log entries into\n   * @param filter Optional string to filter logs on\n   * @param errorsOnly Optional bool to indicate whether or not only error-level\n   *   logs should be returned. Defaults to true\n   */\n  async tailRobotPartLogs(e, n, t, o = !0) {\n    const i = this.client.tailRobotPartLogs({\n      id: e,\n      errorsOnly: o,\n      filter: t\n    });\n    for await (const r of i) for (const c of r.logs) n.push(c);\n  }\n  /**\n   * Get a list containing the history of a robot part.\n   *\n   * @example\n   *\n   * ```ts\n   * const robotPartHistory = await appClient.getRobotPartHistory(\n   *   '<YOUR-ROBOT-PART-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getrobotparthistory).\n   *\n   * @param id The ID of the requested robot part\n   * @returns The list of the robot part's history\n   */\n  async getRobotPartHistory(e) {\n    return (await this.client.getRobotPartHistory({\n      id: e\n    })).history;\n  }\n  /**\n   * Updates a robot part based on its ID.\n   *\n   * @example\n   *\n   * ```ts\n   * const robotPart = await appClient.updateRobotPart(\n   *   '<YOUR-ROBOT-PART-ID>',\n   *   'newName'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updaterobotpart).\n   *\n   * @param id The ID of the requested robot part\n   * @param name The new name of the robot part\n   * @param robotConfig The new config for the robot part\n   * @returns The updated robot part\n   */\n  async updateRobotPart(e, n, t) {\n    return (await this.client.updateRobotPart({\n      id: e,\n      name: n,\n      robotConfig: t\n    })).part;\n  }\n  /**\n   * Creates a new robot part.\n   *\n   * @example\n   *\n   * ```ts\n   * const robotPartId = await appClient.newRobotPart(\n   *   '<YOUR-ROBOT-ID>',\n   *   'newPart'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#newrobotpart).\n   *\n   * @param robotId The ID of the robot to create a part for\n   * @param partName The name for the new robot part\n   * @returns The ID of the newly-created robot part\n   */\n  async newRobotPart(e, n) {\n    return (await this.client.newRobotPart({\n      robotId: e,\n      partName: n\n    })).partId;\n  }\n  /**\n   * Deletes a robot part.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteRobotPart('<YOUR-ROBOT-PART-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deleterobotpart).\n   *\n   * @param partId The ID of the part to delete\n   */\n  async deleteRobotPart(e) {\n    await this.client.deleteRobotPart({\n      partId: e\n    });\n  }\n  /**\n   * Gets a list of a robot's API keys.\n   *\n   * @example\n   *\n   * ```ts\n   * const robotAPIKeys =\n   *   await appClient.getRobotAPIKeys('<YOUR-ROBOT-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getrobotapikeys).\n   *\n   * @param robotId The ID of the robot to get API keys for\n   * @returns A list of the robot's API keys\n   */\n  async getRobotAPIKeys(e) {\n    return (await this.client.getRobotAPIKeys({\n      robotId: e\n    })).apiKeys;\n  }\n  /**\n   * Marks a robot part as the main part.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.markPartAsMain('<YOUR-ROBOT-PART-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#markpartasmain).\n   *\n   * @param partId The ID of the part to mark as main\n   */\n  async markPartAsMain(e) {\n    await this.client.markPartAsMain({\n      partId: e\n    });\n  }\n  /**\n   * Marks a robot part for restart.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.markPartForRestart('<YOUR-ROBOT-PART-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#markpartforrestart).\n   *\n   * @param partId The ID of the part to mark for restart\n   */\n  async markPartForRestart(e) {\n    await this.client.markPartForRestart({\n      partId: e\n    });\n  }\n  /**\n   * Creates a new secret for a robot part.\n   *\n   * @example\n   *\n   * ```ts\n   * const robotPart = await appClient.createRobotPartSecret(\n   *   '<YOUR-ROBOT-PART-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createrobotpartsecret).\n   *\n   * @param partId The ID of the part to create a secret for\n   * @returns The robot part object\n   */\n  async createRobotPartSecret(e) {\n    return (await this.client.createRobotPartSecret({\n      partId: e\n    })).part;\n  }\n  /**\n   * Deletes a robot secret from a robot part.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteRobotPartSecret(\n   *   '<YOUR-ROBOT-PART-ID>',\n   *   '<YOUR-SECRET-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deleterobotpartsecret).\n   *\n   * @param partId The ID of the part to delete a secret from\n   * @param secretId The ID of the secret to delete\n   */\n  async deleteRobotPartSecret(e, n) {\n    await this.client.deleteRobotPartSecret({\n      partId: e,\n      secretId: n\n    });\n  }\n  /**\n   * Lists all robots in a location.\n   *\n   * @example\n   *\n   * ```ts\n   * const robots = await appClient.listRobots('<YOUR-LOCATION-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listrobots).\n   *\n   * @param locId The ID of the location to list robots for\n   * @returns The list of robot objects\n   */\n  async listRobots(e) {\n    return (await this.client.listRobots({\n      locationId: e\n    })).robots;\n  }\n  /**\n   * Creates a new robot.\n   *\n   * @example\n   *\n   * ```ts\n   * const robotId = await appClient.newRobot(\n   *   '<YOUR-LOCATION-ID>',\n   *   'newRobot'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#newrobot).\n   *\n   * @param locId The ID of the location to create the robot in\n   * @param name The name of the new robot\n   * @returns The new robot's ID\n   */\n  async newRobot(e, n) {\n    return (await this.client.newRobot({\n      name: n,\n      location: e\n    })).id;\n  }\n  /**\n   * Change the name of an existing machine. You can only change the name of the\n   * machine, not the location.\n   *\n   * @example\n   *\n   * ```ts\n   * const robot = await appClient.updateRobot(\n   *   '<YOUR-ROBOT-ID>',\n   *   '<YOUR-LOCATION-ID>',\n   *   'newName'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updaterobot).\n   *\n   * @param robotId The ID of the robot to update\n   * @param locId The ID of the location where the robot is\n   * @param name The name to update the robot to\n   * @returns The newly-modified robot object\n   */\n  async updateRobot(e, n, t) {\n    return (await this.client.updateRobot({\n      id: e,\n      location: n,\n      name: t\n    })).robot;\n  }\n  /**\n   * Deletes a robot.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteRobot('<YOUR-ROBOT-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deleterobot).\n   *\n   * @param id The ID of the robot to delete\n   */\n  async deleteRobot(e) {\n    await this.client.deleteRobot({\n      id: e\n    });\n  }\n  /**\n   * Lists all fragments within an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const fragments = await appClient.listFragments(\n   *   '<YOUR-ORGANIZATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listfragments).\n   *\n   * @param organizationId The ID of the organization to list fragments for\n   * @param publicOnly Optional, deprecated boolean. Use fragmentVisibilities\n   *   instead. If true then only public fragments will be listed. Defaults to\n   *   true\n   * @param fragmentVisibilities Optional list of fragment visibilities to\n   *   include in returned list. An empty fragmentVisibilities list defaults to\n   *   normal publicOnly behavior (discludes unlisted public fragments)\n   *   Otherwise, fragment visibilities should contain one of the three\n   *   visibilities and takes precendence over the publicOnly field\n   * @returns The list of fragment objects\n   */\n  async listFragments(e, n = !0, t = []) {\n    return (await this.client.listFragments({\n      organizationId: e,\n      showPublic: n,\n      fragmentVisibility: t\n    })).fragments;\n  }\n  /**\n   * Looks up a fragment by ID.\n   *\n   * @example\n   *\n   * ```ts\n   * const fragment = await appClient.getFragment(\n   *   '12a12ab1-1234-5678-abcd-abcd01234567'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getfragment).\n   *\n   * @param id The ID of the fragment to look up\n   * @returns The requested fragment\n   */\n  async getFragment(e) {\n    return (await this.client.getFragment({\n      id: e\n    })).fragment;\n  }\n  /**\n   * Creates a new fragment.\n   *\n   * @example\n   *\n   * ```ts\n   * const fragment = await appClient.createFragment(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'newFragment'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createfragment).\n   *\n   * @param organizationId The ID of the organization to create the fragment\n   *   under\n   * @param name The name of the new fragment\n   * @param config The new fragment's config\n   * @returns The newly created fragment\n   */\n  async createFragment(e, n, t) {\n    return (await this.client.createFragment({\n      organizationId: e,\n      name: n,\n      config: t\n    })).fragment;\n  }\n  /**\n   * Updates an existing fragment.\n   *\n   * @example\n   *\n   * ```ts\n   * const fragment = await appClient.updateFragment(\n   *   '12a12ab1-1234-5678-abcd-abcd01234567',\n   *   'better_name'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updatefragment).\n   *\n   * @param id The ID of the fragment to update\n   * @param name The name to update the fragment to\n   * @param config The config to update the fragment to\n   * @param makePublic Optional, deprecated boolean specifying whether the\n   *   fragment should be public or not. If not passed, the visibility will be\n   *   unchanged. Fragments are private by default when created\n   * @param visibility Optional FragmentVisibility specifying the updated\n   *   fragment visibility. If not passed, the visibility will be unchanged. If\n   *   visibility is not set and makePublic is set, makePublic takes effect. If\n   *   makePublic and visibility are set, they must not be conflicting. If\n   *   neither is set, the fragment visibility will remain unchanged.\n   * @returns The updated fragment\n   */\n  async updateFragment(e, n, t, o, i) {\n    return (await this.client.updateFragment({\n      id: e,\n      name: n,\n      config: t,\n      public: o,\n      visibility: i\n    })).fragment;\n  }\n  /**\n   * Deletes a fragment.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteFragment('12a12ab1-1234-5678-abcd-abcd01234567');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deletefragment).\n   *\n   * @param id The ID of the fragment to delete\n   */\n  async deleteFragment(e) {\n    await this.client.deleteFragment({\n      id: e\n    });\n  }\n  /**\n   * @example\n   *\n   * ```ts\n   * const fragments = await appClient.listMachineFragments(\n   *   '<YOUR-MACHINE-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listmachinefragments).\n   *\n   * @param machineId The machine ID used to filter fragments defined in a\n   *   machine's parts. Also returns any fragments nested within the fragments\n   *   defined in parts.\n   * @param additionalFragmentIds Additional fragment IDs to append to the\n   *   response. Useful when needing to view fragments that will be\n   *   provisionally added to the machine alongside existing fragments.\n   * @returns The list of top level and nested fragments for a machine, as well\n   *   as additionally specified fragment IDs.\n   */\n  async listMachineFragments(e, n) {\n    return (await this.client.listMachineFragments({\n      machineId: e,\n      additionalFragmentIds: n\n    })).fragments;\n  }\n  /**\n   * Add a role under an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.addRole(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   '<YOUR-USER-ID>',\n   *   'owner',\n   *   'robot',\n   *   '<YOUR-ROBOT-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#addrole).\n   *\n   * @param organizationId The ID of the organization to create the role under\n   * @param entityId The ID of the entity the role belongs to (for example a\n   *   user ID)\n   * @param role The role to add (\"owner\" or \"operator\")\n   * @param resourceType The type of resource to create the role for (\"robot\",\n   *   \"location\", or \"organization\")\n   * @param resourceId The ID of the resource the role is being created for\n   */\n  async addRole(e, n, t, o, i) {\n    await this.client.addRole({\n      authorization: Si(e, n, t, o, \"\", i)\n    });\n  }\n  /**\n   * Removes a role from an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.removeRole(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   '<YOUR-USER-ID>',\n   *   'owner',\n   *   'robot',\n   *   '<YOUR-ROBOT-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#removerole).\n   *\n   * @param organizationId The ID of the organization to remove the role from\n   * @param entityId The ID of the entity the role belongs to (for example a\n   *   user ID)\n   * @param role The role to remove (\"owner\" or \"operator\")\n   * @param resourceType The type of resource to remove the role from (\"robot\",\n   *   \"location\", or \"organization\")\n   * @param resourceId The ID of the resource the role is being removes from\n   */\n  async removeRole(e, n, t, o, i) {\n    await this.client.removeRole({\n      authorization: Si(e, n, t, o, \"\", i)\n    });\n  }\n  /**\n   * Changes an existing role.\n   *\n   * @example\n   *\n   * ```ts\n   * const oldAuth = new VIAM.appApi.Authorization({\n   *   authorizationType: 'role',\n   *   authorizationId: 'organization_owner',\n   *   organizationId: '<YOUR-ORGANIZATION-ID>',\n   *   resourceId: '<YOUR-RESOURCE-ID>', // The resource to grant access to\n   *   resourceType: 'organization', // The type of resource to grant access to\n   *   identityId: '<USER-ID>', // The user id of the user to grant access to (optional)\n   *   roleId: 'owner', // The role to grant access to\n   *   identityType: 'user',\n   * });\n   * const newAuth = new VIAM.appApi.Authorization({\n   *   authorizationType: 'role',\n   *   authorizationId: 'organization_operator',\n   *   organizationId: '<YOUR-ORGANIZATION-ID>',\n   *   resourceId: '<YOUR-RESOURCE-ID>', // The resource to grant access to\n   *   resourceType: 'organization', // The type of resource to grant access To\n   *   identityId: '<USER-ID>', // The user id of the user to grant access to (optional)\n   *   roleId: 'operator', // The role to grant access to\n   *   identityType: 'user',\n   * });\n   * await appClient.changeRole(oldAuth, newAuth);\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#changerole).\n   *\n   * @param oldAuthorization The existing authorization\n   * @param newAuthorization The new authorization to change to\n   */\n  async changeRole(e, n) {\n    await this.client.changeRole({\n      oldAuthorization: e,\n      newAuthorization: n\n    });\n  }\n  /**\n   * List all authorizations for an organization.\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listauthorizations).\n   *\n   * @param organizationId The ID of the organization to list authorizations for\n   * @param resourceIds Optional list of IDs of resources to list authorizations\n   *   for. If not provided, all resources will be included\n   * @returns The list of authorizations\n   */\n  async listAuthorizations(e, n) {\n    return (await this.client.listAuthorizations({\n      organizationId: e,\n      resourceIds: n\n    })).authorizations;\n  }\n  /**\n   * Checks whether requested permissions exist.\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#checkpermissions).\n   *\n   * @param permissions A list of permissions to check\n   * @returns A filtered list of the authorized permissions\n   */\n  async checkPermissions(e) {\n    return (await this.client.checkPermissions({\n      permissions: e\n    })).authorizedPermissions;\n  }\n  /**\n   * Get an item from the registry.\n   *\n   * @example\n   *\n   * ```ts\n   * const registryItem = await appClient.getRegistryItem(\n   *   '<YOUR-REGISTRY-ITEM-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getregistryitem).\n   *\n   * @param itemId The ID of the item to get\n   * @returns The requested item\n   */\n  async getRegistryItem(e) {\n    return (await this.client.getRegistryItem({\n      itemId: e\n    })).item;\n  }\n  /**\n   * Create a new registry item.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.createRegistryItem(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'newRegistryItemName',\n   *   5\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createregistryitem).\n   *\n   * @param organizationId The ID of the organization to create the registry\n   *   item under\n   * @param name The name of the registry item\n   * @param type The type of the item in the registry.\n   */\n  async createRegistryItem(e, n, t) {\n    await this.client.createRegistryItem({\n      organizationId: e,\n      name: n,\n      type: t\n    });\n  }\n  /**\n   * Update an existing registry item.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.updateRegistryItem(\n   *   '<YOUR-REGISTRY-ITEM-ID>',\n   *   5, // Package: ML Model\n   *   'new description',\n   *   1 // Private\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updateregistryitem).\n   *\n   * @param itemId The ID of the registry item to update\n   * @param type The PackageType to update the item to\n   * @param description A description of the item\n   * @param visibility A visibility value to update to\n   */\n  async updateRegistryItem(e, n, t, o) {\n    await this.client.updateRegistryItem({\n      itemId: e,\n      type: n,\n      description: t,\n      visibility: o\n    });\n  }\n  /**\n   * List all registry items for an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const registryItems = await appClient.listRegistryItems(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   [], // All package types\n   *   [1], // Private packages\n   *   [],\n   *   [1] // Active packages\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listregistryitems).\n   *\n   * @param organizationId The ID of the organization to query registry items\n   *   for\n   * @param types A list of types to query. If empty, will not filter on type\n   * @param visibilities A list of visibilities to query for. If empty, will not\n   *   filter on visibility\n   * @param platforms A list of platforms to query for. If empty, will not\n   *   filter on platform\n   * @param statuses A list of statuses to query for. If empty, will not filter\n   *   on status\n   * @param searchTerm Optional search term to filter on\n   * @param pageToken Optional page token for results. If not provided, will\n   *   return all results\n   * @returns The list of registry items\n   */\n  async listRegistryItems(e, n, t, o, i, r, c) {\n    const p = {\n      organizationId: e,\n      types: n,\n      visibilities: t,\n      platforms: o,\n      statuses: i,\n      searchTerm: r,\n      pageToken: c\n    };\n    return (await this.client.listRegistryItems(p)).items;\n  }\n  /**\n   * Deletes a registry item.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteRegistryItem('<YOUR-REGISTRY-ITEM-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deleteregistryitem).\n   *\n   * @param itemId The ID of the item to delete\n   */\n  async deleteRegistryItem(e) {\n    await this.client.deleteRegistryItem({\n      itemId: e\n    });\n  }\n  /**\n   * Creates a new module.\n   *\n   * @example\n   *\n   * ```ts\n   * const module = await appClient.createModule(\n   *   '<YOUR-ORGANIZATION-ID>',\n   *   'newModule'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createmodule).\n   *\n   * @param organizationId The ID of the organization to create the module under\n   * @param name The name of the module\n   * @returns The module ID and a URL to its detail page\n   */\n  async createModule(e, n) {\n    return this.client.createModule({\n      organizationId: e,\n      name: n\n    });\n  }\n  /**\n   * Updates an existing module.\n   *\n   * @example\n   *\n   * ```ts\n   * const module = await appClient.updateModule(\n   *   '<YOUR-MODULE-ID>',\n   *   1,\n   *   'https://example.com',\n   *   'new description',\n   *   [{ model: 'namespace:group:model1', api: 'rdk:component:generic' }],\n   *   'entrypoint'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updatemodule).\n   *\n   * @param moduleId The ID of the module to update\n   * @param visibility The visibility to set for the module\n   * @param url The url to reference for documentation, code, etc.\n   * @param description A short description of the module\n   * @param models A list of models available in the module\n   * @param entrypoint The executable to run to start the module program\n   * @returns The module URL\n   */\n  async updateModule(e, n, t, o, i, r) {\n    return (await this.client.updateModule({\n      moduleId: e,\n      visibility: n,\n      url: t,\n      description: o,\n      models: i,\n      entrypoint: r\n    })).url;\n  }\n  /**\n   * Looks up a particular module.\n   *\n   * @example\n   *\n   * ```ts\n   * const module = await appClient.getModule('<YOUR-MODULE-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getmodule).\n   *\n   * @param moduleId The ID of the module\n   * @returns The requested module\n   */\n  async getModule(e) {\n    return (await this.client.getModule({\n      moduleId: e\n    })).module;\n  }\n  /**\n   * Lists all modules for an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const modules = await appClient.listModules('<YOUR-ORGANIZATION-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listmodules).\n   *\n   * @param organizationId The ID of the organization to query\n   * @returns The organization's modules\n   */\n  async listModules(e) {\n    return (await this.client.listModules({\n      organizationId: e\n    })).modules;\n  }\n  /**\n   * Creates a new API key.\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createkey).\n   *\n   * @param authorizations The list of authorizations to provide for the API key\n   * @param name An optional name for the key. If none is passed, defaults to\n   *   present timestamp\n   * @returns The new key and ID\n   */\n  async createKey(e, n) {\n    return this.client.createKey({\n      name: n,\n      authorizations: e\n    });\n  }\n  /**\n   * Deletes an existing API key.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.deleteKey('<YOUR-KEY-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#deletekey).\n   *\n   * @param id The ID of the key to delete\n   */\n  async deleteKey(e) {\n    return this.client.deleteKey({\n      id: e\n    });\n  }\n  /**\n   * List all API keys for an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const keys = await appClient.listKeys('<YOUR-ORGANIZATION-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#listkeys).\n   *\n   * @param orgId The ID of the organization to query\n   * @returns The list of API keys\n   */\n  async listKeys(e) {\n    return (await this.client.listKeys({\n      orgId: e\n    })).apiKeys;\n  }\n  /**\n   * Rotates an existing API key.\n   *\n   * @example\n   *\n   * ```ts\n   * const key = await appClient.rotateKey('<YOUR-KEY-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#rotatekey).\n   *\n   * @param id The ID of the key to rotate\n   * @returns The updated key and ID\n   */\n  async rotateKey(e) {\n    return this.client.rotateKey({\n      id: e\n    });\n  }\n  /**\n   * Creates a new key with an existing key's authorizations\n   *\n   * @example\n   *\n   * ```ts\n   * const key =\n   *   await appClient.createKeyFromExistingKeyAuthorizations(\n   *     '<YOUR-KEY-ID>'\n   *   );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#createkeyfromexistingkeyauthorizations).\n   *\n   * @param id The ID of the key to duplicate\n   * @returns The new key and ID\n   */\n  async createKeyFromExistingKeyAuthorizations(e) {\n    return this.client.createKeyFromExistingKeyAuthorizations({\n      id: e\n    });\n  }\n  /**\n   * Retrieves the app content for an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const appContent = await appClient.getAppContent(\n   *   '<YOUR-PUBLIC-NAMESPACE>',\n   *   '<YOUR-APP-NAME>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getappcontent).\n   *\n   * @param publicNamespace The public namespace of the organization\n   * @param name The name of the app\n   * @returns The blob path and entrypoint of the app content\n   */\n  async getAppContent(e, n) {\n    return this.client.getAppContent({\n      publicNamespace: e,\n      name: n\n    });\n  }\n  /**\n   * Retrieves user-defined metadata for an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const metadata = await appClient.getOrganizationMetadata(\n   *   '<YOUR-ORGANIZATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getorganizationmetadata).\n   *\n   * @param id The ID of the organization\n   * @returns The metadata associated with the organization\n   */\n  async getOrganizationMetadata(e) {\n    return (await this.client.getOrganizationMetadata({\n      organizationId: e\n    })).toJson().data ?? {};\n  }\n  /**\n   * Updates user-defined metadata for an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.updateOrganizationMetadata('<YOUR-ORGANIZATION-ID>', {\n   *   key: 'value',\n   * });\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updateorganizationmetadata).\n   *\n   * @param id The ID of the organization\n   * @param data The metadata to update\n   */\n  async updateOrganizationMetadata(e, n) {\n    await this.client.updateOrganizationMetadata({\n      organizationId: e,\n      data: l.fromJson(n)\n    });\n  }\n  /**\n   * Retrieves user-defined metadata for a location.\n   *\n   * @example\n   *\n   * ```ts\n   * const metadata = await appClient.getLocationMetadata(\n   *   '<YOUR-LOCATION-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getlocationmetadata).\n   *\n   * @param id The ID of the location\n   * @returns The metadata associated with the location\n   */\n  async getLocationMetadata(e) {\n    return (await this.client.getLocationMetadata({\n      locationId: e\n    })).toJson().data ?? {};\n  }\n  /**\n   * Updates user-defined metadata for a location.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.updateLocationMetadata('<YOUR-LOCATION-ID>', {\n   *   key: 'value',\n   * });\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updatelocationmetadata).\n   *\n   * @param id The ID of the location\n   * @param data The metadata to update\n   */\n  async updateLocationMetadata(e, n) {\n    await this.client.updateLocationMetadata({\n      locationId: e,\n      data: l.fromJson(n)\n    });\n  }\n  /**\n   * Retrieves user-defined metadata for a robot.\n   *\n   * @example\n   *\n   * ```ts\n   * const metadata = await appClient.getRobotMetadata('<YOUR-ROBOT-ID>');\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getrobotmetadata).\n   *\n   * @param id The ID of the robot\n   * @returns The metadata associated with the robot\n   */\n  async getRobotMetadata(e) {\n    return (await this.client.getRobotMetadata({\n      id: e\n    })).toJson().data ?? {};\n  }\n  /**\n   * Updates user-defined metadata for a robot.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.updateRobotMetadata('<YOUR-ROBOT-ID>', {\n   *   key: 'value',\n   * });\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updaterobotmetadata).\n   *\n   * @param id The ID of the robot\n   * @param data The metadata to update\n   */\n  async updateRobotMetadata(e, n) {\n    await this.client.updateRobotMetadata({\n      id: e,\n      data: l.fromJson(n)\n    });\n  }\n  /**\n   * Retrieves user-defined metadata for a robot part.\n   *\n   * @example\n   *\n   * ```ts\n   * const metadata = await appClient.getRobotPartMetadata(\n   *   '<YOUR-ROBOT-PART-ID>'\n   * );\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#getrobotpartmetadata).\n   *\n   * @param id The ID of the robot part\n   * @returns The metadata associated with the robot part\n   */\n  async getRobotPartMetadata(e) {\n    return (await this.client.getRobotPartMetadata({\n      id: e\n    })).toJson().data ?? {};\n  }\n  /**\n   * Updates user-defined metadata for a robot part.\n   *\n   * @example\n   *\n   * ```ts\n   * await appClient.updateRobotPartMetadata('<YOUR-ROBOT-PART-ID>', {\n   *   key: 'value',\n   * });\n   * ```\n   *\n   * For more information, see [App\n   * API](https://docs.viam.com/dev/reference/apis/fleet/#updaterobotpartmetadata).\n   *\n   * @param id The ID of the robot part\n   * @param data The metadata to update\n   */\n  async updateRobotPartMetadata(e, n) {\n    await this.client.updateRobotPartMetadata({\n      id: e,\n      data: l.fromJson(n)\n    });\n  }\n}\nconst Ek = /* @__PURE__ */s.makeEnum(\"viam.app.v1.PaymentMethodType\", [{\n    no: 0,\n    name: \"PAYMENT_METHOD_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"PAYMENT_METHOD_TYPE_CARD\",\n    localName: \"CARD\"\n  }]),\n  Ok = /* @__PURE__ */s.makeEnum(\"viam.app.v1.UsageCostType\", [{\n    no: 0,\n    name: \"USAGE_COST_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"USAGE_COST_TYPE_DATA_UPLOAD\",\n    localName: \"DATA_UPLOAD\"\n  }, {\n    no: 2,\n    name: \"USAGE_COST_TYPE_DATA_EGRESS\",\n    localName: \"DATA_EGRESS\"\n  }, {\n    no: 3,\n    name: \"USAGE_COST_TYPE_REMOTE_CONTROL\",\n    localName: \"REMOTE_CONTROL\"\n  }, {\n    no: 4,\n    name: \"USAGE_COST_TYPE_STANDARD_COMPUTE\",\n    localName: \"STANDARD_COMPUTE\"\n  }, {\n    no: 5,\n    name: \"USAGE_COST_TYPE_CLOUD_STORAGE\",\n    localName: \"CLOUD_STORAGE\"\n  }, {\n    no: 6,\n    name: \"USAGE_COST_TYPE_BINARY_DATA_CLOUD_STORAGE\",\n    localName: \"BINARY_DATA_CLOUD_STORAGE\"\n  }, {\n    no: 7,\n    name: \"USAGE_COST_TYPE_OTHER_CLOUD_STORAGE\",\n    localName: \"OTHER_CLOUD_STORAGE\"\n  }, {\n    no: 8,\n    name: \"USAGE_COST_TYPE_PER_MACHINE\",\n    localName: \"PER_MACHINE\"\n  }, {\n    no: 9,\n    name: \"USAGE_COST_TYPE_TRIGGER_NOTIFICATION\",\n    localName: \"TRIGGER_NOTIFICATION\"\n  }, {\n    no: 10,\n    name: \"USAGE_COST_TYPE_TABULAR_DATA_CLOUD_STORAGE\",\n    localName: \"TABULAR_DATA_CLOUD_STORAGE\"\n  }, {\n    no: 11,\n    name: \"USAGE_COST_TYPE_CONFIG_HISTORY_CLOUD_STORAGE\",\n    localName: \"CONFIG_HISTORY_CLOUD_STORAGE\"\n  }, {\n    no: 12,\n    name: \"USAGE_COST_TYPE_LOGS_CLOUD_STORAGE\",\n    localName: \"LOGS_CLOUD_STORAGE\"\n  }, {\n    no: 13,\n    name: \"USAGE_COST_TYPE_TRAINING_LOGS_CLOUD_STORAGE\",\n    localName: \"TRAINING_LOGS_CLOUD_STORAGE\"\n  }, {\n    no: 14,\n    name: \"USAGE_COST_TYPE_PACKAGES_CLOUD_STORAGE\",\n    localName: \"PACKAGES_CLOUD_STORAGE\"\n  }, {\n    no: 15,\n    name: \"USAGE_COST_TYPE_BINARY_DATA_UPLOAD\",\n    localName: \"BINARY_DATA_UPLOAD\"\n  }, {\n    no: 16,\n    name: \"USAGE_COST_TYPE_TABULAR_DATA_UPLOAD\",\n    localName: \"TABULAR_DATA_UPLOAD\"\n  }, {\n    no: 17,\n    name: \"USAGE_COST_TYPE_LOGS_UPLOAD\",\n    localName: \"LOGS_UPLOAD\"\n  }, {\n    no: 18,\n    name: \"USAGE_COST_TYPE_BINARY_DATA_EGRESS\",\n    localName: \"BINARY_DATA_EGRESS\"\n  }, {\n    no: 19,\n    name: \"USAGE_COST_TYPE_TABULAR_DATA_EGRESS\",\n    localName: \"TABULAR_DATA_EGRESS\"\n  }, {\n    no: 20,\n    name: \"USAGE_COST_TYPE_LOGS_EGRESS\",\n    localName: \"LOGS_EGRESS\"\n  }, {\n    no: 21,\n    name: \"USAGE_COST_TYPE_TRAINING_LOGS_EGRESS\",\n    localName: \"TRAINING_LOGS_EGRESS\"\n  }, {\n    no: 22,\n    name: \"USAGE_COST_TYPE_TABULAR_DATA_DATABASE_CLOUD_STORAGE\",\n    localName: \"TABULAR_DATA_DATABASE_CLOUD_STORAGE\"\n  }, {\n    no: 23,\n    name: \"USAGE_COST_TYPE_TABULAR_DATA_DATABASE_COMPUTE\",\n    localName: \"TABULAR_DATA_DATABASE_COMPUTE\"\n  }]),\n  Ck = /* @__PURE__ */s.makeEnum(\"viam.app.v1.SourceType\", [{\n    no: 0,\n    name: \"SOURCE_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"SOURCE_TYPE_ORG\",\n    localName: \"ORG\"\n  }, {\n    no: 2,\n    name: \"SOURCE_TYPE_FRAGMENT\",\n    localName: \"FRAGMENT\"\n  }]),\n  Nk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.InvoiceSummary\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"invoice_date\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 3,\n    name: \"invoice_amount\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"status\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"due_date\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 6,\n    name: \"paid_date\",\n    kind: \"message\",\n    T: _\n  }]),\n  Pk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.PaymentMethodCard\", () => [{\n    no: 1,\n    name: \"brand\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"last_four_digits\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ak = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetCurrentMonthUsageRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Dk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UsageCost\", () => [{\n    no: 1,\n    name: \"resource_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Ok)\n  }, {\n    no: 2,\n    name: \"cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  qk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ResourceUsageCostsBySource\", () => [{\n    no: 1,\n    name: \"source_type\",\n    kind: \"enum\",\n    T: s.getEnumType(Ck)\n  }, {\n    no: 2,\n    name: \"resource_usage_costs\",\n    kind: \"message\",\n    T: Uk\n  }, {\n    no: 3,\n    name: \"tier_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Uk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.ResourceUsageCosts\", () => [{\n    no: 1,\n    name: \"usage_costs\",\n    kind: \"message\",\n    T: Dk,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"discount\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"total_with_discount\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"total_without_discount\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  Gk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetCurrentMonthUsageResponse\", () => [{\n    no: 1,\n    name: \"start_date\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 2,\n    name: \"end_date\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 14,\n    name: \"resource_usage_costs_by_source\",\n    kind: \"message\",\n    T: qk,\n    repeated: !0\n  }, {\n    no: 15,\n    name: \"subtotal\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 3,\n    name: \"cloud_storage_usage_cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"data_upload_usage_cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 5,\n    name: \"data_egres_usage_cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 6,\n    name: \"remote_control_usage_cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 7,\n    name: \"standard_compute_usage_cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 8,\n    name: \"discount_amount\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 9,\n    name: \"total_usage_with_discount\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 10,\n    name: \"total_usage_without_discount\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 11,\n    name: \"per_machine_usage_cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 12,\n    name: \"binary_data_cloud_storage_usage_cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 13,\n    name: \"other_cloud_storage_usage_cost\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  Lk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrgBillingInformationRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Bk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetOrgBillingInformationResponse\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(Ek)\n  }, {\n    no: 2,\n    name: \"billing_email\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"method\",\n    kind: \"message\",\n    T: Pk,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"billing_tier\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  xk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetInvoicesSummaryRequest\", () => [{\n    no: 1,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Fk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetInvoicesSummaryResponse\", () => [{\n    no: 1,\n    name: \"outstanding_balance\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 2,\n    name: \"invoices\",\n    kind: \"message\",\n    T: Nk,\n    repeated: !0\n  }]),\n  Jk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetInvoicePdfRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  zk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetInvoicePdfResponse\", () => [{\n    no: 1,\n    name: \"chunk\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  Yk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.SendPaymentRequiredEmailRequest\", () => [{\n    no: 1,\n    name: \"customer_org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"billing_owner_org_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  $k = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.SendPaymentRequiredEmailResponse\", []),\n  Vk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetAvailableBillingTiersRequest\", []),\n  Wk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.GetAvailableBillingTiersResponse\", () => [{\n    no: 1,\n    name: \"tiers\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  jk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationBillingTierRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"billing_tier\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Hk = /* @__PURE__ */s.makeMessageType(\"viam.app.v1.UpdateOrganizationBillingTierResponse\", []),\n  m_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetAvailableBillingTiersRequest: Vk,\n    GetAvailableBillingTiersResponse: Wk,\n    GetCurrentMonthUsageRequest: Ak,\n    GetCurrentMonthUsageResponse: Gk,\n    GetInvoicePdfRequest: Jk,\n    GetInvoicePdfResponse: zk,\n    GetInvoicesSummaryRequest: xk,\n    GetInvoicesSummaryResponse: Fk,\n    GetOrgBillingInformationRequest: Lk,\n    GetOrgBillingInformationResponse: Bk,\n    InvoiceSummary: Nk,\n    PaymentMethodCard: Pk,\n    PaymentMethodType: Ek,\n    ResourceUsageCosts: Uk,\n    ResourceUsageCostsBySource: qk,\n    SendPaymentRequiredEmailRequest: Yk,\n    SendPaymentRequiredEmailResponse: $k,\n    SourceType: Ck,\n    UpdateOrganizationBillingTierRequest: jk,\n    UpdateOrganizationBillingTierResponse: Hk,\n    UsageCost: Dk,\n    UsageCostType: Ok\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  i1 = {\n    typeName: \"viam.app.v1.BillingService\",\n    methods: {\n      /**\n       * Detailed breakdown of current month's costs\n       *\n       * @generated from rpc viam.app.v1.BillingService.GetCurrentMonthUsage\n       */\n      getCurrentMonthUsage: {\n        name: \"GetCurrentMonthUsage\",\n        I: Ak,\n        O: Gk,\n        kind: m.Unary\n      },\n      /**\n       * Org-level information (like billing email and payment details)\n       *\n       * @generated from rpc viam.app.v1.BillingService.GetOrgBillingInformation\n       */\n      getOrgBillingInformation: {\n        name: \"GetOrgBillingInformation\",\n        I: Lk,\n        O: Bk,\n        kind: m.Unary\n      },\n      /**\n       * Total outstanding balance and previous invoices\n       *\n       * @generated from rpc viam.app.v1.BillingService.GetInvoicesSummary\n       */\n      getInvoicesSummary: {\n        name: \"GetInvoicesSummary\",\n        I: xk,\n        O: Fk,\n        kind: m.Unary\n      },\n      /**\n       * Download a PDF invoice\n       *\n       * @generated from rpc viam.app.v1.BillingService.GetInvoicePdf\n       */\n      getInvoicePdf: {\n        name: \"GetInvoicePdf\",\n        I: Jk,\n        O: zk,\n        kind: m.ServerStreaming\n      },\n      /**\n       * Send an email with a prompt to the user's org's billing page.\n       *\n       * @generated from rpc viam.app.v1.BillingService.SendPaymentRequiredEmail\n       */\n      sendPaymentRequiredEmail: {\n        name: \"SendPaymentRequiredEmail\",\n        I: Yk,\n        O: $k,\n        kind: m.Unary\n      },\n      /**\n       * Get available billing tiers that can be assigned to organizations\n       *\n       * @generated from rpc viam.app.v1.BillingService.GetAvailableBillingTiers\n       */\n      getAvailableBillingTiers: {\n        name: \"GetAvailableBillingTiers\",\n        I: Vk,\n        O: Wk,\n        kind: m.Unary\n      },\n      /**\n       * Update an organization's billing tier\n       *\n       * @generated from rpc viam.app.v1.BillingService.UpdateOrganizationBillingTier\n       */\n      updateOrganizationBillingTier: {\n        name: \"UpdateOrganizationBillingTier\",\n        I: jk,\n        O: Hk,\n        kind: m.Unary\n      }\n    }\n  };\nclass r1 {\n  client;\n  constructor(e) {\n    this.client = P(i1, e);\n  }\n  /**\n   * Get the data usage information for the current month for a given\n   * organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const usage = await billing.getCurrentMonthUsage('<organization-id>');\n   * ```\n   *\n   * For more information, see [Billing\n   * API](https://docs.viam.com/dev/reference/apis/billing-client/#getcurrentmonthusage).\n   *\n   * @param orgId - The organization ID.\n   */\n  async getCurrentMonthUsage(e) {\n    const n = await this.client.getCurrentMonthUsage({\n      orgId: e\n    });\n    return n.start = n.startDate?.toDate(), n.end = n.endDate?.toDate(), n;\n  }\n  /**\n   * Get the billing information (payment method, billing tier, etc.) for a\n   * given org.\n   *\n   * @example\n   *\n   * ```ts\n   * const billingInfo = await billing.getOrgBillingInformation(\n   *   '<organization-id>'\n   * );\n   * ```\n   *\n   * For more information, see [Billing\n   * API](https://docs.viam.com/dev/reference/apis/billing-client/#getorgbillinginformation).\n   *\n   * @param orgId - The organization ID.\n   */\n  async getOrgBillingInformation(e) {\n    return this.client.getOrgBillingInformation({\n      orgId: e\n    });\n  }\n  /**\n   * Get total outstanding balance plus invoice summaries for a given org.\n   *\n   * @example\n   *\n   * ```ts\n   * const invoicesSummary = await billing.getInvoicesSummary(\n   *   '<organization-id>'\n   * );\n   * ```\n   *\n   * For more information, see [Billing\n   * API](https://docs.viam.com/dev/reference/apis/billing-client/#getinvoicesummary).\n   *\n   * @param orgId - The organization ID.\n   */\n  async getInvoicesSummary(e) {\n    return this.client.getInvoicesSummary({\n      orgId: e\n    });\n  }\n  /**\n   * Get invoice PDF data.\n   *\n   * @example\n   *\n   * ```ts\n   * const invoicePdf = await billing.getInvoicePdf(\n   *   '<invoice-id>',\n   *   '<organization-id>'\n   * );\n   * ```\n   *\n   * For more information, see [Billing\n   * API](https://docs.viam.com/dev/reference/apis/billing-client/#getinvoicepdf).\n   *\n   * @param id - The invoice ID.\n   * @param orgId - The organization ID.\n   */\n  async getInvoicePdf(e, n) {\n    const t = this.client.getInvoicePdf({\n        id: e,\n        orgId: n\n      }),\n      o = [];\n    for await (const i of t) o.push(i.chunk);\n    return m1(o);\n  }\n}\nconst m1 = a => {\n  const e = a.reduce((o, i) => o + i.length, 0),\n    n = new Uint8Array(e);\n  let t = 0;\n  for (const o of a) n.set(o, t), t += o.length;\n  return n;\n};\nvar Kk = {},\n  Xk = {};\n(function (a) {\n  Object.defineProperty(a, \"__esModule\", {\n    value: !0\n  }), function (e) {\n    var n = /** @class */\n    function () {\n      function k(v) {\n        this._id = new Uint8Array(v);\n      }\n      return k.prototype.buffer = function () {\n        return this._id;\n      }, k;\n    }();\n    e.UUID = n;\n    var t = /** @class */\n    function () {\n      function k(v) {\n        this._id = new Uint8Array(v);\n      }\n      return k.prototype.buffer = function () {\n        return this._id;\n      }, k;\n    }();\n    e.ObjectId = t;\n    var o = /** @class */\n    function () {\n      function k(v) {\n        this._time = typeof v != \"string\" ? new Uint8Array(v || R(Date.now())) : R(+new Date(v));\n      }\n      return k.prototype.buffer = function () {\n        return this._time;\n      }, k.prototype.fromString = function (v) {\n        this._time = R(+new Date(v));\n      }, k.prototype.toNumber = function () {\n        return I(this._time);\n      }, k.prototype.toDate = function () {\n        return new Date(I(this._time));\n      }, k;\n    }();\n    e.UTC = o;\n    function i(k) {\n      var v = 5;\n      for (var g in k) v += r(g, k[g]);\n      return v;\n    }\n    function r(k, v) {\n      var g = 1;\n      if (k && (g += z(k) + 1), v == null) return g;\n      switch (v.constructor) {\n        case String:\n          return g + 4 + z(v) + 1;\n        case Number:\n          return Math.floor(v) === v && v <= 2147483647 && v >= -2147483647 ? g + 4 : g + 8;\n        case Boolean:\n          return g + 1;\n        case Array:\n        case Object:\n          return g + i(v);\n        case Int8Array:\n        case Uint8Array:\n          return g + 5 + v.byteLength;\n        case Date:\n        case o:\n          return g + 8;\n        case n:\n          return g + 5 + 16;\n        case t:\n          return g + 12;\n        default:\n          return 0;\n      }\n    }\n    function c(k) {\n      var v = new Uint8Array(i(k));\n      return p(k, v), v;\n    }\n    e.serialize = c;\n    function p(k, v, g) {\n      if (g === void 0 && (g = 0), g += T(v.length, v, g), k.constructor === Array) for (var y = 0, b = k.length; y < b; y++) g = f(y.toString(), k[y], v, g);else for (var M in k) g = f(M, k[M], v, g);\n      return v[g++] = 0, g;\n    }\n    function d(k, v, g) {\n      var y = O(k),\n        b = y.length;\n      return v.set(y, g), v[g + b++] = 0, b;\n    }\n    function T(k, v, g) {\n      return v[g++] = k & 255, v[g++] = k >>> 8 & 255, v[g++] = k >>> 16 & 255, v[g++] = k >>> 24 & 255, 4;\n    }\n    function f(k, v, g, y) {\n      if (v == null) return g[y++] = 10, y += d(k, g, y), y;\n      switch (v.constructor) {\n        case String:\n          g[y++] = 2, y += d(k, g, y);\n          var b = d(v, g, y + 4);\n          return y += T(b, g, y), y + b;\n        case Number:\n          if (Math.floor(v) === v) v <= 2147483647 && v >= -2147483647 ? (g[y++] = 16, y += d(k, g, y), y += T(v, g, y)) : (g[y++] = 18, y += d(k, g, y), g.set(R(v), y), y += 8);else {\n            g[y++] = 1, y += d(k, g, y);\n            var M = new Float64Array([v]),\n              Z = new Uint8Array(M.buffer);\n            g.set(Z, y), y += 8;\n          }\n          return y;\n        case Boolean:\n          return g[y++] = 8, y += d(k, g, y), g[y++] = v ? 1 : 0, y;\n        case Array:\n        case Object:\n          g[y++] = v.constructor === Array ? 4 : 3, y += d(k, g, y);\n          var A = p(v, g, y);\n          return T(A - y, g, y), A;\n        case Int8Array:\n        case Uint8Array:\n          return g[y++] = 5, y += d(k, g, y), y += T(v.byteLength, g, y), g[y++] = 0, g.set(v, y), y += v.byteLength, y;\n        case Date:\n          return g[y++] = 9, y += d(k, g, y), g.set(R(v.getTime()), y), y += 8, y;\n        case o:\n          return g[y++] = 9, y += d(k, g, y), g.set(v.buffer(), y), y += 8, y;\n        case n:\n          return g[y++] = 5, y += d(k, g, y), y += T(16, g, y), g[y++] = 4, g.set(v.buffer(), y), y += 16, y;\n        case t:\n          return g[y++] = 7, y += d(k, g, y), g.set(v.buffer(), y), y += 12, y;\n        case RegExp:\n          return g[y++] = 11, y += d(k, g, y), y += d(v.source, g, y), v.global && (g[y++] = 115), v.ignoreCase && (g[y++] = 105), v.multiline && (g[y++] = 109), g[y++] = 0, y;\n        default:\n          return y;\n      }\n    }\n    function S(k, v, g, y) {\n      if (v === void 0 && (v = !1), g === void 0 && (g = 0), y === void 0 && (y = !1), !(k.length < 5)) {\n        var b = k[g++] | k[g++] << 8 | k[g++] << 16 | k[g++] << 24;\n        if (!(b < 5 || b > k.length) && k[k.length - 1] === 0) {\n          for (var M = y ? [] : {};;) {\n            var Z = k[g++];\n            if (Z === 0) break;\n            for (var A = g; k[A] !== 0 && A < k.length; A++);\n            if (A >= k.length - 1) return;\n            var Y = N(k.subarray(g, A));\n            switch (y && (Y = parseInt(Y)), g = ++A, Z) {\n              case 1:\n                M[Y] = new Float64Array(k.slice(g, g += 8).buffer)[0];\n                break;\n              case 2:\n                b = k[g++] | k[g++] << 8 | k[g++] << 16 | k[g++] << 24, M[Y] = N(k.subarray(g, g += b - 1)), g++;\n                break;\n              case 3:\n                b = k[g] | k[g + 1] << 8 | k[g + 2] << 16 | k[g + 3] << 24, M[Y] = S(k, v, g, !1), g += b;\n                break;\n              case 4:\n                b = k[g] | k[g + 1] << 8 | k[g + 2] << 16 | k[g + 3] << 24, M[Y] = S(k, v, g, !0), g += b;\n                break;\n              case 5:\n                if (b = k[g++] | k[g++] << 8 | k[g++] << 16 | k[g++] << 24, k[g++] === 4) {\n                  if (b !== 16) return;\n                  M[Y] = new n(k.subarray(g, g += b));\n                } else M[Y] = k.slice(g, g += b);\n                break;\n              case 6:\n                M[Y] = null;\n                break;\n              case 7:\n                M[Y] = new t(k.subarray(g, g += 12));\n                break;\n              case 8:\n                M[Y] = k[g++] === 1;\n                break;\n              case 9:\n                M[Y] = v ? new o(k.subarray(g, g += 8)) : new Date(I(k.subarray(g, g += 8)));\n                break;\n              case 10:\n                M[Y] = null;\n                break;\n              case 11:\n                for (A = g; A < k.length && k[A++] !== 0;);\n                if (A >= k.length) return;\n                var Oa = N(k.subarray(g, A));\n                for (g = A; A < k.length && k[A++] !== 0;);\n                if (A >= k.length) return;\n                var Ca = N(k.subarray(g, A));\n                g = A, M[Y] = new RegExp(Oa, Ca);\n                break;\n              case 16:\n                M[Y] = k[g++] | k[g++] << 8 | k[g++] << 16 | k[g++] << 24;\n                break;\n              case 18:\n                M[Y] = I(k.subarray(g, g += 8));\n                break;\n              default:\n                return;\n            }\n          }\n          return M;\n        }\n      }\n    }\n    e.deserialize = S;\n    function R(k) {\n      var v = new Uint8Array(8);\n      if (Math.floor(k) === k) {\n        var g = 4294967296,\n          y = k % g | 0,\n          b = k / g | 0;\n        k < 0 && (y = ~(-k % g) | 0, b = ~(-k / g) | 0, y = y + 1 & 4294967295, y || b++);\n        var M = 0;\n        v[M++] = y & 255, v[M++] = y >>> 8 & 255, v[M++] = y >>> 16 & 255, v[M++] = y >>> 24 & 255, v[M++] = b & 255, v[M++] = b >>> 8 & 255, v[M++] = b >>> 16 & 255, v[M] = b >>> 24 & 255;\n      } else {\n        var Z = new Float64Array([k]),\n          A = new Uint8Array(Z.buffer);\n        v.set(A);\n      }\n      return v;\n    }\n    function I(k, v) {\n      v === void 0 && (v = 0);\n      var g = 4294967296,\n        y = k[v++] | k[v++] << 8 | k[v++] << 16 | k[v++] << 24,\n        b = k[v++] | k[v++] << 8 | k[v++] << 16 | k[v] << 24;\n      return b * g + (y >= 0 ? y : g + y);\n    }\n    function O(k) {\n      k = k.replace(/\\r\\n/g, `\n`);\n      for (var v = [], g = 0, y = 0, b = k.length; y < b; y++) {\n        var M = k.charCodeAt(y);\n        M < 128 ? v[g++] = M : M < 2048 ? (v[g++] = M >>> 6 | 192, v[g++] = M & 63 | 128) : (v[g++] = M >>> 12 | 224, v[g++] = M >>> 6 & 63 | 128, v[g++] = M & 63 | 128);\n      }\n      return new Uint8Array(v);\n    }\n    function N(k) {\n      for (var v = \"\", g = k.length, y = 0, b, M, Z; y < g;) b = k[y], b < 128 ? (v += String.fromCharCode(b), y++) : b > 191 && b < 224 ? (M = k[y + 1], v += String.fromCharCode((b & 31) << 6 | M & 63), y += 2) : (M = k[y + 1], Z = k[y + 2], v += String.fromCharCode((b & 15) << 12 | (M & 63) << 6 | Z & 63), y += 3);\n      return v;\n    }\n    function z(k) {\n      return encodeURI(k).split(/%..|./).length - 1;\n    }\n  }(a.BSON || (a.BSON = {}));\n})(Xk);\nObject.defineProperty(Kk, \"__esModule\", {\n  value: !0\n});\nvar c1 = Xk,\n  Ga = Kk.BSON = c1.BSON;\nconst Qk = /* @__PURE__ */s.makeEnum(\"viam.app.data.v1.Order\", [{\n    no: 0,\n    name: \"ORDER_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"ORDER_DESCENDING\",\n    localName: \"DESCENDING\"\n  }, {\n    no: 2,\n    name: \"ORDER_ASCENDING\",\n    localName: \"ASCENDING\"\n  }]),\n  Zk = /* @__PURE__ */s.makeEnum(\"viam.app.data.v1.TagsFilterType\", [{\n    no: 0,\n    name: \"TAGS_FILTER_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"TAGS_FILTER_TYPE_MATCH_BY_OR\",\n    localName: \"MATCH_BY_OR\"\n  }, {\n    no: 2,\n    name: \"TAGS_FILTER_TYPE_TAGGED\",\n    localName: \"TAGGED\"\n  }, {\n    no: 3,\n    name: \"TAGS_FILTER_TYPE_UNTAGGED\",\n    localName: \"UNTAGGED\"\n  }]),\n  ey = /* @__PURE__ */s.makeEnum(\"viam.app.data.v1.TabularDataSourceType\", [{\n    no: 0,\n    name: \"TABULAR_DATA_SOURCE_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"TABULAR_DATA_SOURCE_TYPE_STANDARD\",\n    localName: \"STANDARD\"\n  }, {\n    no: 2,\n    name: \"TABULAR_DATA_SOURCE_TYPE_HOT_STORAGE\",\n    localName: \"HOT_STORAGE\"\n  }, {\n    no: 3,\n    name: \"TABULAR_DATA_SOURCE_TYPE_PIPELINE_SINK\",\n    localName: \"PIPELINE_SINK\"\n  }]),\n  Po = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.DataRequest\", () => [{\n    no: 1,\n    name: \"filter\",\n    kind: \"message\",\n    T: $e\n  }, {\n    no: 2,\n    name: \"limit\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }, {\n    no: 3,\n    name: \"last\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"sort_order\",\n    kind: \"enum\",\n    T: s.getEnumType(Qk)\n  }]),\n  $e = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.Filter\", () => [{\n    no: 1,\n    name: \"component_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"component_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"method\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"robot_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"robot_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 8,\n    name: \"part_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 9,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 10,\n    name: \"location_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 11,\n    name: \"organization_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 12,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 13,\n    name: \"interval\",\n    kind: \"message\",\n    T: bn\n  }, {\n    no: 14,\n    name: \"tags_filter\",\n    kind: \"message\",\n    T: Ao\n  }, {\n    no: 15,\n    name: \"bbox_labels\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 16,\n    name: \"dataset_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ao = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TagsFilter\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(Zk)\n  }, {\n    no: 2,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Ea = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.CaptureMetadata\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"robot_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"robot_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"part_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"component_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 9,\n    name: \"component_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 10,\n    name: \"method_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 11,\n    name: \"method_parameters\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"message\",\n      T: j\n    }\n  }, {\n    no: 12,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 13,\n    name: \"mime_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  bn = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.CaptureInterval\", () => [{\n    no: 1,\n    name: \"start\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 2,\n    name: \"end\",\n    kind: \"message\",\n    T: _\n  }]),\n  ny = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TabularDataByFilterRequest\", () => [{\n    no: 1,\n    name: \"data_request\",\n    kind: \"message\",\n    T: Po\n  }, {\n    no: 2,\n    name: \"count_only\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"include_internal_data\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  ay = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TabularDataByFilterResponse\", () => [{\n    no: 1,\n    name: \"metadata\",\n    kind: \"message\",\n    T: Ea,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"data\",\n    kind: \"message\",\n    T: ty,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"count\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }, {\n    no: 4,\n    name: \"last\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"total_size_bytes\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  ty = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TabularData\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 2,\n    name: \"metadata_index\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }, {\n    no: 3,\n    name: \"time_requested\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"time_received\",\n    kind: \"message\",\n    T: _\n  }]),\n  sy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TabularDataBySQLRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"sql_query\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  oy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TabularDataBySQLResponse\", () => [{\n    no: 2,\n    name: \"raw_data\",\n    kind: \"scalar\",\n    T: 12,\n    repeated: !0\n  }]),\n  iy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TabularDataSource\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(ey)\n  }, {\n    no: 2,\n    name: \"pipeline_id\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }]),\n  ry = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TabularDataByMQLRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"mql_binary\",\n    kind: \"scalar\",\n    T: 12,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"use_recent_data\",\n    kind: \"scalar\",\n    T: 8,\n    opt: !0\n  }, {\n    no: 6,\n    name: \"data_source\",\n    kind: \"message\",\n    T: iy,\n    opt: !0\n  }]),\n  my = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TabularDataByMQLResponse\", () => [{\n    no: 2,\n    name: \"raw_data\",\n    kind: \"scalar\",\n    T: 12,\n    repeated: !0\n  }]),\n  cy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.ExportTabularDataRequest\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"resource_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"resource_subtype\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"method_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"interval\",\n    kind: \"message\",\n    T: bn\n  }]),\n  ly = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.ExportTabularDataResponse\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"resource_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"resource_subtype\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"method_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"time_captured\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 6,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 8,\n    name: \"robot_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 9,\n    name: \"robot_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 10,\n    name: \"part_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 11,\n    name: \"method_parameters\",\n    kind: \"message\",\n    T: l\n  }, {\n    no: 12,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 13,\n    name: \"payload\",\n    kind: \"message\",\n    T: l\n  }]),\n  dy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.GetLatestTabularDataRequest\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"resource_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"method_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"resource_subtype\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  py = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.GetLatestTabularDataResponse\", () => [{\n    no: 1,\n    name: \"time_captured\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 2,\n    name: \"time_synced\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 3,\n    name: \"payload\",\n    kind: \"message\",\n    T: l\n  }]),\n  Do = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BinaryData\", () => [{\n    no: 1,\n    name: \"binary\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }, {\n    no: 2,\n    name: \"metadata\",\n    kind: \"message\",\n    T: hy\n  }]),\n  uy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BinaryDataByFilterRequest\", () => [{\n    no: 1,\n    name: \"data_request\",\n    kind: \"message\",\n    T: Po\n  }, {\n    no: 2,\n    name: \"include_binary\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"count_only\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 4,\n    name: \"include_internal_data\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  gy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BinaryDataByFilterResponse\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"message\",\n    T: Do,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"count\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }, {\n    no: 3,\n    name: \"last\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"total_size_bytes\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  le = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BinaryID\", () => [{\n    no: 1,\n    name: \"file_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"location_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ty = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BinaryDataByIDsRequest\", () => [{\n    no: 2,\n    name: \"include_binary\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"binary_ids\",\n    kind: \"message\",\n    T: le,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"binary_data_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  ky = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BinaryDataByIDsResponse\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"message\",\n    T: Do,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"count\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  yy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BoundingBox\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"label\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"x_min_normalized\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"y_min_normalized\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 5,\n    name: \"x_max_normalized\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 6,\n    name: \"y_max_normalized\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 7,\n    name: \"confidence\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }]),\n  vy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.Classification\", () => [{\n    no: 1,\n    name: \"label\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"confidence\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }]),\n  qo = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.Annotations\", () => [{\n    no: 1,\n    name: \"bboxes\",\n    kind: \"message\",\n    T: yy,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"classifications\",\n    kind: \"message\",\n    T: vy,\n    repeated: !0\n  }]),\n  hy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BinaryMetadata\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"capture_metadata\",\n    kind: \"message\",\n    T: Ea\n  }, {\n    no: 3,\n    name: \"time_requested\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 4,\n    name: \"time_received\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 5,\n    name: \"file_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"file_ext\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 7,\n    name: \"uri\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 8,\n    name: \"annotations\",\n    kind: \"message\",\n    T: qo\n  }, {\n    no: 9,\n    name: \"dataset_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 10,\n    name: \"binary_data_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  fy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.DeleteTabularDataRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"delete_older_than_days\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }]),\n  Ry = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.DeleteTabularDataResponse\", () => [{\n    no: 1,\n    name: \"deleted_count\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  _y = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.DeleteBinaryDataByFilterRequest\", () => [{\n    no: 1,\n    name: \"filter\",\n    kind: \"message\",\n    T: $e\n  }, {\n    no: 2,\n    name: \"include_internal_data\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  Sy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.DeleteBinaryDataByFilterResponse\", () => [{\n    no: 1,\n    name: \"deleted_count\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  Iy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.DeleteBinaryDataByIDsRequest\", () => [{\n    no: 2,\n    name: \"binary_ids\",\n    kind: \"message\",\n    T: le,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"binary_data_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  My = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.DeleteBinaryDataByIDsResponse\", () => [{\n    no: 1,\n    name: \"deleted_count\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  by = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.AddTagsToBinaryDataByIDsRequest\", () => [{\n    no: 3,\n    name: \"binary_ids\",\n    kind: \"message\",\n    T: le,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"binary_data_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  wy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.AddTagsToBinaryDataByIDsResponse\", []),\n  Ey = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.AddTagsToBinaryDataByFilterRequest\", () => [{\n    no: 1,\n    name: \"filter\",\n    kind: \"message\",\n    T: $e\n  }, {\n    no: 2,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Oy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.AddTagsToBinaryDataByFilterResponse\", []),\n  Cy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.RemoveTagsFromBinaryDataByIDsRequest\", () => [{\n    no: 3,\n    name: \"binary_ids\",\n    kind: \"message\",\n    T: le,\n    repeated: !0\n  }, {\n    no: 4,\n    name: \"binary_data_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Ny = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.RemoveTagsFromBinaryDataByIDsResponse\", () => [{\n    no: 1,\n    name: \"deleted_count\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  Py = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.RemoveTagsFromBinaryDataByFilterRequest\", () => [{\n    no: 1,\n    name: \"filter\",\n    kind: \"message\",\n    T: $e\n  }, {\n    no: 2,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Ay = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.RemoveTagsFromBinaryDataByFilterResponse\", () => [{\n    no: 1,\n    name: \"deleted_count\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }]),\n  Dy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TagsByFilterRequest\", () => [{\n    no: 1,\n    name: \"filter\",\n    kind: \"message\",\n    T: $e\n  }]),\n  qy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.TagsByFilterResponse\", () => [{\n    no: 1,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Uy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.AddBoundingBoxToImageByIDRequest\", () => [{\n    no: 7,\n    name: \"binary_id\",\n    kind: \"message\",\n    T: le\n  }, {\n    no: 8,\n    name: \"binary_data_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"label\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"x_min_normalized\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 4,\n    name: \"y_min_normalized\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 5,\n    name: \"x_max_normalized\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }, {\n    no: 6,\n    name: \"y_max_normalized\",\n    kind: \"scalar\",\n    T: 1\n    /* ScalarType.DOUBLE */\n  }]),\n  Gy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.AddBoundingBoxToImageByIDResponse\", () => [{\n    no: 1,\n    name: \"bbox_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Ly = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.RemoveBoundingBoxFromImageByIDRequest\", () => [{\n    no: 3,\n    name: \"binary_id\",\n    kind: \"message\",\n    T: le\n  }, {\n    no: 4,\n    name: \"binary_data_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"bbox_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  By = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.RemoveBoundingBoxFromImageByIDResponse\", []),\n  xy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.UpdateBoundingBoxRequest\", () => [{\n    no: 1,\n    name: \"binary_id\",\n    kind: \"message\",\n    T: le\n  }, {\n    no: 8,\n    name: \"binary_data_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"bbox_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"label\",\n    kind: \"scalar\",\n    T: 9,\n    opt: !0\n  }, {\n    no: 4,\n    name: \"x_min_normalized\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 5,\n    name: \"y_min_normalized\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 6,\n    name: \"x_max_normalized\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }, {\n    no: 7,\n    name: \"y_max_normalized\",\n    kind: \"scalar\",\n    T: 1,\n    opt: !0\n  }]),\n  Fy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.UpdateBoundingBoxResponse\", []),\n  Jy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BoundingBoxLabelsByFilterRequest\", () => [{\n    no: 1,\n    name: \"filter\",\n    kind: \"message\",\n    T: $e\n  }]),\n  zy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.BoundingBoxLabelsByFilterResponse\", () => [{\n    no: 1,\n    name: \"labels\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Yy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.ConfigureDatabaseUserRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"password\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  $y = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.ConfigureDatabaseUserResponse\", []),\n  Vy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.GetDatabaseConnectionRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Wy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.GetDatabaseConnectionResponse\", () => [{\n    no: 1,\n    name: \"hostname\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"mongodb_uri\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"has_database_user\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }]),\n  jy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.AddBinaryDataToDatasetByIDsRequest\", () => [{\n    no: 1,\n    name: \"binary_ids\",\n    kind: \"message\",\n    T: le,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"binary_data_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"dataset_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Hy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.AddBinaryDataToDatasetByIDsResponse\", []),\n  Ky = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.RemoveBinaryDataFromDatasetByIDsRequest\", () => [{\n    no: 1,\n    name: \"binary_ids\",\n    kind: \"message\",\n    T: le,\n    repeated: !0\n  }, {\n    no: 3,\n    name: \"binary_data_ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }, {\n    no: 2,\n    name: \"dataset_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Xy = /* @__PURE__ */s.makeMessageType(\"viam.app.data.v1.RemoveBinaryDataFromDatasetByIDsResponse\", []),\n  c_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    AddBinaryDataToDatasetByIDsRequest: jy,\n    AddBinaryDataToDatasetByIDsResponse: Hy,\n    AddBoundingBoxToImageByIDRequest: Uy,\n    AddBoundingBoxToImageByIDResponse: Gy,\n    AddTagsToBinaryDataByFilterRequest: Ey,\n    AddTagsToBinaryDataByFilterResponse: Oy,\n    AddTagsToBinaryDataByIDsRequest: by,\n    AddTagsToBinaryDataByIDsResponse: wy,\n    Annotations: qo,\n    BinaryData: Do,\n    BinaryDataByFilterRequest: uy,\n    BinaryDataByFilterResponse: gy,\n    BinaryDataByIDsRequest: Ty,\n    BinaryDataByIDsResponse: ky,\n    BinaryID: le,\n    BinaryMetadata: hy,\n    BoundingBox: yy,\n    BoundingBoxLabelsByFilterRequest: Jy,\n    BoundingBoxLabelsByFilterResponse: zy,\n    CaptureInterval: bn,\n    CaptureMetadata: Ea,\n    Classification: vy,\n    ConfigureDatabaseUserRequest: Yy,\n    ConfigureDatabaseUserResponse: $y,\n    DataRequest: Po,\n    DeleteBinaryDataByFilterRequest: _y,\n    DeleteBinaryDataByFilterResponse: Sy,\n    DeleteBinaryDataByIDsRequest: Iy,\n    DeleteBinaryDataByIDsResponse: My,\n    DeleteTabularDataRequest: fy,\n    DeleteTabularDataResponse: Ry,\n    ExportTabularDataRequest: cy,\n    ExportTabularDataResponse: ly,\n    Filter: $e,\n    GetDatabaseConnectionRequest: Vy,\n    GetDatabaseConnectionResponse: Wy,\n    GetLatestTabularDataRequest: dy,\n    GetLatestTabularDataResponse: py,\n    Order: Qk,\n    RemoveBinaryDataFromDatasetByIDsRequest: Ky,\n    RemoveBinaryDataFromDatasetByIDsResponse: Xy,\n    RemoveBoundingBoxFromImageByIDRequest: Ly,\n    RemoveBoundingBoxFromImageByIDResponse: By,\n    RemoveTagsFromBinaryDataByFilterRequest: Py,\n    RemoveTagsFromBinaryDataByFilterResponse: Ay,\n    RemoveTagsFromBinaryDataByIDsRequest: Cy,\n    RemoveTagsFromBinaryDataByIDsResponse: Ny,\n    TabularData: ty,\n    TabularDataByFilterRequest: ny,\n    TabularDataByFilterResponse: ay,\n    TabularDataByMQLRequest: ry,\n    TabularDataByMQLResponse: my,\n    TabularDataBySQLRequest: sy,\n    TabularDataBySQLResponse: oy,\n    TabularDataSource: iy,\n    TabularDataSourceType: ey,\n    TagsByFilterRequest: Dy,\n    TagsByFilterResponse: qy,\n    TagsFilter: Ao,\n    TagsFilterType: Zk,\n    UpdateBoundingBoxRequest: xy,\n    UpdateBoundingBoxResponse: Fy\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  l1 = {\n    typeName: \"viam.app.data.v1.DataService\",\n    methods: {\n      /**\n       * TabularDataByFilter queries tabular data and metadata based on given filters.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.TabularDataByFilter\n       * @deprecated\n       */\n      tabularDataByFilter: {\n        name: \"TabularDataByFilter\",\n        I: ny,\n        O: ay,\n        kind: m.Unary\n      },\n      /**\n       * TabularDataBySQL queries tabular data with a SQL query.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.TabularDataBySQL\n       */\n      tabularDataBySQL: {\n        name: \"TabularDataBySQL\",\n        I: sy,\n        O: oy,\n        kind: m.Unary\n      },\n      /**\n       * TabularDataByMQL queries tabular data with an MQL (MongoDB Query Language) query.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.TabularDataByMQL\n       */\n      tabularDataByMQL: {\n        name: \"TabularDataByMQL\",\n        I: ry,\n        O: my,\n        kind: m.Unary\n      },\n      /**\n       * ExportTabularData queries tabular data from the specified data source.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.ExportTabularData\n       */\n      exportTabularData: {\n        name: \"ExportTabularData\",\n        I: cy,\n        O: ly,\n        kind: m.ServerStreaming\n      },\n      /**\n       * GetLatestTabularData gets the most recent tabular data captured from the specified data source.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.GetLatestTabularData\n       */\n      getLatestTabularData: {\n        name: \"GetLatestTabularData\",\n        I: dy,\n        O: py,\n        kind: m.Unary\n      },\n      /**\n       * BinaryDataByFilter queries binary data and metadata based on given filters.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.BinaryDataByFilter\n       */\n      binaryDataByFilter: {\n        name: \"BinaryDataByFilter\",\n        I: uy,\n        O: gy,\n        kind: m.Unary\n      },\n      /**\n       * BinaryDataByIDs queries binary data and metadata based on given IDs.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.BinaryDataByIDs\n       */\n      binaryDataByIDs: {\n        name: \"BinaryDataByIDs\",\n        I: Ty,\n        O: ky,\n        kind: m.Unary\n      },\n      /**\n       * DeleteTabularData deletes tabular data older than a number of days, based on the given organization ID.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.DeleteTabularData\n       */\n      deleteTabularData: {\n        name: \"DeleteTabularData\",\n        I: fy,\n        O: Ry,\n        kind: m.Unary\n      },\n      /**\n       * DeleteBinaryDataByFilter deletes binary data based on given filters.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.DeleteBinaryDataByFilter\n       */\n      deleteBinaryDataByFilter: {\n        name: \"DeleteBinaryDataByFilter\",\n        I: _y,\n        O: Sy,\n        kind: m.Unary\n      },\n      /**\n       * DeleteBinaryDataByIDs deletes binary data based on given IDs.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.DeleteBinaryDataByIDs\n       */\n      deleteBinaryDataByIDs: {\n        name: \"DeleteBinaryDataByIDs\",\n        I: Iy,\n        O: My,\n        kind: m.Unary\n      },\n      /**\n       * AddTagsToBinaryDataByIDs adds string tags, unless the tags are already present, to binary data based on given IDs.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.AddTagsToBinaryDataByIDs\n       */\n      addTagsToBinaryDataByIDs: {\n        name: \"AddTagsToBinaryDataByIDs\",\n        I: by,\n        O: wy,\n        kind: m.Unary\n      },\n      /**\n       * AddTagsToBinaryDataByFilter adds string tags, unless the tags are already present, to binary data based on the given filter.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.AddTagsToBinaryDataByFilter\n       */\n      addTagsToBinaryDataByFilter: {\n        name: \"AddTagsToBinaryDataByFilter\",\n        I: Ey,\n        O: Oy,\n        kind: m.Unary\n      },\n      /**\n       * RemoveTagsToBinaryDataByIDs removes string tags from binary data based on given IDs.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.RemoveTagsFromBinaryDataByIDs\n       */\n      removeTagsFromBinaryDataByIDs: {\n        name: \"RemoveTagsFromBinaryDataByIDs\",\n        I: Cy,\n        O: Ny,\n        kind: m.Unary\n      },\n      /**\n       * RemoveTagsToBinaryDataByFilter removes string tags from binary data based on the given filter.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.RemoveTagsFromBinaryDataByFilter\n       */\n      removeTagsFromBinaryDataByFilter: {\n        name: \"RemoveTagsFromBinaryDataByFilter\",\n        I: Py,\n        O: Ay,\n        kind: m.Unary\n      },\n      /**\n       * TagsByFilter gets all unique tags from data based on given filter.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.TagsByFilter\n       */\n      tagsByFilter: {\n        name: \"TagsByFilter\",\n        I: Dy,\n        O: qy,\n        kind: m.Unary\n      },\n      /**\n       * AddBoundingBoxToImageByID adds a bounding box to an image with the given ID.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.AddBoundingBoxToImageByID\n       */\n      addBoundingBoxToImageByID: {\n        name: \"AddBoundingBoxToImageByID\",\n        I: Uy,\n        O: Gy,\n        kind: m.Unary\n      },\n      /**\n       * RemoveBoundingBoxFromImageByID removes a bounding box from an image with the given ID.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.RemoveBoundingBoxFromImageByID\n       */\n      removeBoundingBoxFromImageByID: {\n        name: \"RemoveBoundingBoxFromImageByID\",\n        I: Ly,\n        O: By,\n        kind: m.Unary\n      },\n      /**\n       * BoundingBoxLabelsByFilter gets all string labels for bounding boxes from data based on given filter.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.BoundingBoxLabelsByFilter\n       */\n      boundingBoxLabelsByFilter: {\n        name: \"BoundingBoxLabelsByFilter\",\n        I: Jy,\n        O: zy,\n        kind: m.Unary\n      },\n      /**\n       * UpdateBoundingBox updates the bounding box associated with a given binary ID and bounding box ID.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.UpdateBoundingBox\n       */\n      updateBoundingBox: {\n        name: \"UpdateBoundingBox\",\n        I: xy,\n        O: Fy,\n        kind: m.Unary\n      },\n      /**\n       * GetDatabaseConnection gets a connection to access a MongoDB Atlas Data Federation instance. It\n       * returns the hostname of the federated database.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.GetDatabaseConnection\n       */\n      getDatabaseConnection: {\n        name: \"GetDatabaseConnection\",\n        I: Vy,\n        O: Wy,\n        kind: m.Unary\n      },\n      /**\n       * ConfigureDatabaseUser configures a database user for the Viam organization's MongoDB Atlas Data\n       * Federation instance. It can also be used to reset the password of the existing database user.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.ConfigureDatabaseUser\n       */\n      configureDatabaseUser: {\n        name: \"ConfigureDatabaseUser\",\n        I: Yy,\n        O: $y,\n        kind: m.Unary\n      },\n      /**\n       * AddBinaryDataToDatasetByIDs adds the binary data with the given binary IDs to the dataset.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.AddBinaryDataToDatasetByIDs\n       */\n      addBinaryDataToDatasetByIDs: {\n        name: \"AddBinaryDataToDatasetByIDs\",\n        I: jy,\n        O: Hy,\n        kind: m.Unary\n      },\n      /**\n       * RemoveBinaryDataFromDatasetByIDs removes the binary data with the given binary IDs from the dataset.\n       *\n       * @generated from rpc viam.app.data.v1.DataService.RemoveBinaryDataFromDatasetByIDs\n       */\n      removeBinaryDataFromDatasetByIDs: {\n        name: \"RemoveBinaryDataFromDatasetByIDs\",\n        I: Ky,\n        O: Xy,\n        kind: m.Unary\n      }\n    }\n  },\n  Qy = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.Dataset\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"time_created\",\n    kind: \"message\",\n    T: _\n  }]),\n  d1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.CreateDatasetRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  p1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.CreateDatasetResponse\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  u1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.DeleteDatasetRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  g1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.DeleteDatasetResponse\", []),\n  T1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.RenameDatasetRequest\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  k1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.RenameDatasetResponse\", []),\n  y1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.ListDatasetsByOrganizationIDRequest\", () => [{\n    no: 1,\n    name: \"organization_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  v1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.ListDatasetsByOrganizationIDResponse\", () => [{\n    no: 1,\n    name: \"datasets\",\n    kind: \"message\",\n    T: Qy,\n    repeated: !0\n  }]),\n  h1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.ListDatasetsByIDsRequest\", () => [{\n    no: 1,\n    name: \"ids\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  f1 = /* @__PURE__ */s.makeMessageType(\"viam.app.dataset.v1.ListDatasetsByIDsResponse\", () => [{\n    no: 1,\n    name: \"datasets\",\n    kind: \"message\",\n    T: Qy,\n    repeated: !0\n  }]),\n  R1 = {\n    typeName: \"viam.app.dataset.v1.DatasetService\",\n    methods: {\n      /**\n       * CreateDataset makes a new dataset.\n       *\n       * @generated from rpc viam.app.dataset.v1.DatasetService.CreateDataset\n       */\n      createDataset: {\n        name: \"CreateDataset\",\n        I: d1,\n        O: p1,\n        kind: m.Unary\n      },\n      /**\n       * DeleteDatasets deletes an existing dataset.\n       *\n       * @generated from rpc viam.app.dataset.v1.DatasetService.DeleteDataset\n       */\n      deleteDataset: {\n        name: \"DeleteDataset\",\n        I: u1,\n        O: g1,\n        kind: m.Unary\n      },\n      /**\n       * RenameDataset modifies the name of an existing dataset.\n       *\n       * @generated from rpc viam.app.dataset.v1.DatasetService.RenameDataset\n       */\n      renameDataset: {\n        name: \"RenameDataset\",\n        I: T1,\n        O: k1,\n        kind: m.Unary\n      },\n      /**\n       * ListDatasetsByOrganizationID lists all of the datasets for an organization.\n       *\n       * @generated from rpc viam.app.dataset.v1.DatasetService.ListDatasetsByOrganizationID\n       */\n      listDatasetsByOrganizationID: {\n        name: \"ListDatasetsByOrganizationID\",\n        I: y1,\n        O: v1,\n        kind: m.Unary\n      },\n      /**\n       * ListDatasetsByIDs lists all of the datasets specified by the given dataset IDs.\n       *\n       * @generated from rpc viam.app.dataset.v1.DatasetService.ListDatasetsByIDs\n       */\n      listDatasetsByIDs: {\n        name: \"ListDatasetsByIDs\",\n        I: h1,\n        O: f1,\n        kind: m.Unary\n      }\n    }\n  },\n  _1 = /* @__PURE__ */s.makeEnum(\"viam.app.datasync.v1.MimeType\", [{\n    no: 0,\n    name: \"MIME_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"MIME_TYPE_IMAGE_JPEG\",\n    localName: \"IMAGE_JPEG\"\n  }, {\n    no: 2,\n    name: \"MIME_TYPE_IMAGE_PNG\",\n    localName: \"IMAGE_PNG\"\n  }, {\n    no: 3,\n    name: \"MIME_TYPE_APPLICATION_PCD\",\n    localName: \"APPLICATION_PCD\"\n  }]),\n  Qa = /* @__PURE__ */s.makeEnum(\"viam.app.datasync.v1.DataType\", [{\n    no: 0,\n    name: \"DATA_TYPE_UNSPECIFIED\",\n    localName: \"UNSPECIFIED\"\n  }, {\n    no: 1,\n    name: \"DATA_TYPE_BINARY_SENSOR\",\n    localName: \"BINARY_SENSOR\"\n  }, {\n    no: 2,\n    name: \"DATA_TYPE_TABULAR_SENSOR\",\n    localName: \"TABULAR_SENSOR\"\n  }, {\n    no: 3,\n    name: \"DATA_TYPE_FILE\",\n    localName: \"FILE\"\n  }]),\n  Za = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.DataCaptureUploadRequest\", () => [{\n    no: 1,\n    name: \"metadata\",\n    kind: \"message\",\n    T: wn\n  }, {\n    no: 2,\n    name: \"sensor_contents\",\n    kind: \"message\",\n    T: et,\n    repeated: !0\n  }]),\n  S1 = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.DataCaptureUploadResponse\", () => [{\n    no: 1,\n    name: \"file_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"binary_data_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  I1 = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.FileUploadRequest\", () => [{\n    no: 1,\n    name: \"metadata\",\n    kind: \"message\",\n    T: wn,\n    oneof: \"upload_packet\"\n  }, {\n    no: 2,\n    name: \"file_contents\",\n    kind: \"message\",\n    T: E1,\n    oneof: \"upload_packet\"\n  }]),\n  M1 = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.FileUploadResponse\", () => [{\n    no: 1,\n    name: \"file_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"binary_data_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  b1 = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.StreamingDataCaptureUploadRequest\", () => [{\n    no: 1,\n    name: \"metadata\",\n    kind: \"message\",\n    T: O1,\n    oneof: \"upload_packet\"\n  }, {\n    no: 2,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 12,\n    oneof: \"upload_packet\"\n  }]),\n  w1 = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.StreamingDataCaptureUploadResponse\", () => [{\n    no: 1,\n    name: \"file_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"binary_data_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Uo = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.SensorMetadata\", () => [{\n    no: 1,\n    name: \"time_requested\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 2,\n    name: \"time_received\",\n    kind: \"message\",\n    T: _\n  }, {\n    no: 3,\n    name: \"mime_type\",\n    kind: \"enum\",\n    T: s.getEnumType(_1)\n  }, {\n    no: 4,\n    name: \"annotations\",\n    kind: \"message\",\n    T: qo\n  }]),\n  et = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.SensorData\", () => [{\n    no: 1,\n    name: \"metadata\",\n    kind: \"message\",\n    T: Uo\n  }, {\n    no: 2,\n    name: \"struct\",\n    kind: \"message\",\n    T: l,\n    oneof: \"data\"\n  }, {\n    no: 3,\n    name: \"binary\",\n    kind: \"scalar\",\n    T: 12,\n    oneof: \"data\"\n  }]),\n  E1 = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.FileData\", () => [{\n    no: 1,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }]),\n  wn = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.UploadMetadata\", () => [{\n    no: 1,\n    name: \"part_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"component_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"component_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 5,\n    name: \"method_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 6,\n    name: \"type\",\n    kind: \"enum\",\n    T: s.getEnumType(Qa)\n  }, {\n    no: 7,\n    name: \"file_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 8,\n    name: \"method_parameters\",\n    kind: \"map\",\n    K: 9,\n    V: {\n      kind: \"message\",\n      T: j\n    }\n  }, {\n    no: 9,\n    name: \"file_extension\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 10,\n    name: \"tags\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  O1 = /* @__PURE__ */s.makeMessageType(\"viam.app.datasync.v1.DataCaptureUploadMetadata\", () => [{\n    no: 1,\n    name: \"upload_metadata\",\n    kind: \"message\",\n    T: wn\n  }, {\n    no: 2,\n    name: \"sensor_metadata\",\n    kind: \"message\",\n    T: Uo\n  }]),\n  C1 = {\n    typeName: \"viam.app.datasync.v1.DataSyncService\",\n    methods: {\n      /**\n       * DataCaptureUpload uploads the contents and metadata for tabular data.\n       *\n       * @generated from rpc viam.app.datasync.v1.DataSyncService.DataCaptureUpload\n       */\n      dataCaptureUpload: {\n        name: \"DataCaptureUpload\",\n        I: Za,\n        O: S1,\n        kind: m.Unary\n      },\n      /**\n       * FileUpload uploads the contents and metadata for binary (image + file) data,\n       * where the first packet must be the UploadMetadata.\n       *\n       * @generated from rpc viam.app.datasync.v1.DataSyncService.FileUpload\n       */\n      fileUpload: {\n        name: \"FileUpload\",\n        I: I1,\n        O: M1,\n        kind: m.ClientStreaming\n      },\n      /**\n       * StreamingDataCaptureUpload uploads the streaming contents and metadata for streaming binary (image + file) data,\n       * where the first packet must be the UploadMetadata.\n       *\n       * @generated from rpc viam.app.datasync.v1.DataSyncService.StreamingDataCaptureUpload\n       */\n      streamingDataCaptureUpload: {\n        name: \"StreamingDataCaptureUpload\",\n        I: b1,\n        O: w1,\n        kind: m.ClientStreaming\n      }\n    }\n  },\n  Le = () => {\n    console.warn(\"The BinaryID type is deprecated and will be removed in a future release. Please migrate to the BinaryDataId field instead.\");\n  };\nclass N1 {\n  dataClient;\n  datasetClient;\n  dataSyncClient;\n  constructor(e) {\n    this.dataClient = P(l1, e), this.datasetClient = P(R1, e), this.dataSyncClient = P(C1, e);\n  }\n  /**\n   * Obtain unified tabular data and metadata from the specified data source.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.exportTabularData(\n   *   '123abc45-1234-5678-90ab-cdef12345678',\n   *   'my-sensor',\n   *   'rdk:component:sensor',\n   *   'Readings',\n   *   new Date('2025-03-25'),\n   *   new Date('2024-03-27')\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#exporttabulardata).\n   *\n   * @param partId The ID of the part that owns the data\n   * @param resourceName The name of the requested resource that captured the\n   *   data\n   * @param resourceSubtype The subtype of the requested resource that captured\n   *   the data\n   * @param methodName The data capture method name\n   * @param startTime Optional start time (`Date` object) for requesting a\n   *   specific range of data\n   * @param endTime Optional end time (`Date` object) for requesting a specific\n   *   range of data\n   * @returns An array of unified tabular data and metadata.\n   */\n  async exportTabularData(e, n, t, o, i, r) {\n    const c = new bn();\n    i && (c.start = _.fromDate(i)), r && (c.end = _.fromDate(r));\n    const p = {\n        partId: e,\n        resourceName: n,\n        resourceSubtype: t,\n        methodName: o,\n        interval: c\n      },\n      d = this.dataClient.exportTabularData(p),\n      T = [];\n    for await (const f of d) T.push({\n      partId: f.partId,\n      resourceName: f.resourceName,\n      resourceSubtype: f.resourceSubtype,\n      methodName: f.methodName,\n      timeCaptured: f.timeCaptured.toDate(),\n      // eslint-disable-line @typescript-eslint/no-non-null-assertion\n      organizationId: f.organizationId,\n      locationId: f.locationId,\n      robotName: f.robotName,\n      robotId: f.robotId,\n      partName: f.partName,\n      methodParameters: f.methodParameters.toJson(),\n      // eslint-disable-line @typescript-eslint/no-non-null-assertion\n      tags: f.tags,\n      payload: f.payload.toJson()\n      // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    });\n    return T;\n  }\n  /**\n   * Obtain unified tabular data and metadata, queried with SQL.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.tabularDataBySQL(\n   *   '123abc45-1234-5678-90ab-cdef12345678',\n   *   'SELECT * FROM readings LIMIT 5'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#exporttabulardata).\n   *\n   * @param organizationId The ID of the organization that owns the data\n   * @param query The SQL query to run\n   * @returns An array of data objects\n   */\n  async tabularDataBySQL(e, n) {\n    return (await this.dataClient.tabularDataBySQL({\n      organizationId: e,\n      sqlQuery: n\n    })).rawData.map(o => Ga.deserialize(o));\n  }\n  /**\n   * Obtain unified tabular data and metadata, queried with MQL.\n   *\n   * @example\n   *\n   * ```ts\n   * type JsonValue =\n   *   | string\n   *   | number\n   *   | boolean\n   *   | null\n   *   | JsonValue[]\n   *   | { [key: string]: JsonValue };\n   * const mqlQuery: Record<string, JsonValue>[] = [\n   *   {\n   *     $match: {\n   *       component_name: 'sensor-1',\n   *     },\n   *   },\n   *   {\n   *     $limit: 5,\n   *   },\n   * ];\n   *\n   * const data = await dataClient.tabularDataByMQL(\n   *   '123abc45-1234-5678-90ab-cdef12345678',\n   *   mqlQuery\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#tabulardatabymql).\n   *\n   * @param organizationId The ID of the organization that owns the data\n   * @param query The MQL query to run as a list of BSON documents\n   * @param useRecentData Whether to query blob storage or your recent data\n   *   store. Defaults to false\n   * @returns An array of data objects\n   */\n  async tabularDataByMQL(e, n, t) {\n    const o = n[0] instanceof Uint8Array ? n : n.map(r => Ga.serialize(r));\n    return (await this.dataClient.tabularDataByMQL({\n      organizationId: e,\n      mqlBinary: o,\n      useRecentData: t\n    })).rawData.map(r => Ga.deserialize(r));\n  }\n  /**\n   * Filter and get a page of tabular data. The returned metadata might be empty\n   * if the metadata index of the data is out of the bounds of the returned\n   * metadata list. The data will be paginated into pages of `limit` items, and\n   * the pagination ID will be included in the returned tuple.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.tabularDataByFilter(\n   *   {\n   *     componentName: 'sensor-1',\n   *     componentType: 'rdk:component:sensor',\n   *   } as Filter,\n   *   5\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#tabulardatabyfilter).\n   *\n   * @param filter Optional `pb.Filter` specifying tabular data to retrieve. No\n   *   `filter` implies all tabular data.\n   * @param limit The maximum number of entries to include in a page. Defaults\n   *   to 50 if unspecfied\n   * @param sortOrder The desired sort order of the data\n   * @param last Optional string indicating the ID of the last-returned data. If\n   *   provided, the server will return the next data entries after the `last`\n   *   ID.\n   * @param countOnly Whether to return only the total count of entries\n   * @param includeInternalData Whether to retun internal data. Internal data is\n   *   used for Viam-specific data ingestion, like cloud SLAM. Defaults to\n   *   `false`.\n   * @returns An array of data objects, the count (number of entries), and the\n   *   last-returned page ID.\n   */\n  async tabularDataByFilter(e, n, t, o = \"\", i = !1, r = !1) {\n    const p = {\n        dataRequest: {\n          filter: e,\n          limit: n === void 0 ? void 0 : BigInt(n),\n          sortOrder: t,\n          last: o\n        },\n        countOnly: i,\n        includeInternalData: r\n      },\n      d = await this.dataClient.tabularDataByFilter(p),\n      T = d.metadata.length,\n      f = [];\n    return f.push(...d.data.map(S => {\n      const R = S.metadataIndex,\n        I = T !== 0 && R >= T ? new Ea() : d.metadata[R];\n      return {\n        data: S.data?.toJson(),\n        metadata: I,\n        timeRequested: S.timeRequested?.toDate(),\n        timeReceived: S.timeRequested?.toDate()\n      };\n    })), {\n      data: f,\n      count: d.count,\n      last: d.last\n    };\n  }\n  /**\n   * Filter and get a page of binary data. The returned metadata might be empty\n   * if the metadata index of the data is out of the bounds of the returned\n   * metadata list. The data will be paginated into pages of `limit` items, and\n   * the pagination ID will be included in the returned tuple.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.binaryDataByFilter(\n   *   {\n   *     componentName: 'camera-1',\n   *     componentType: 'rdk:component:camera',\n   *   } as Filter,\n   *   1\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#binarydatabyfilter).\n   *\n   * @param filter Optional `pb.Filter` specifying binary data to retrieve. No\n   *   `filter` implies all binary data.\n   * @param limit The maximum number of entries to include in a page. Defaults\n   *   to 50 if unspecfied\n   * @param sortOrder The desired sort order of the data\n   * @param last Optional string indicating the ID of the last-returned data. If\n   *   provided, the server will return the next data entries after the `last`\n   *   ID.\n   * @param includeBinary Whether to include binary file data with each\n   *   retrieved file\n   * @param countOnly Whether to return only the total count of entries\n   * @param includeInternalData Whether to retun internal data. Internal data is\n   *   used for Viam-specific data ingestion, like cloud SLAM. Defaults to\n   *   `false`.\n   * @returns An array of data objects, the count (number of entries), and the\n   *   last-returned page ID.\n   */\n  async binaryDataByFilter(e, n, t, o = \"\", i = !0, r = !1, c = !1) {\n    const d = {\n        dataRequest: {\n          filter: e,\n          limit: n === void 0 ? void 0 : BigInt(n),\n          sortOrder: t,\n          last: o\n        },\n        includeBinary: i,\n        countOnly: r,\n        includeInternalData: c\n      },\n      T = await this.dataClient.binaryDataByFilter(d);\n    return {\n      data: T.data,\n      count: T.count,\n      last: T.last\n    };\n  }\n  /**\n   * Get binary data using the binary data ID.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.binaryDataByIds([\n   *   'ccb74b53-1235-4328-a4b9-91dff1915a50/x5vur1fmps/YAEzj5I1kTwtYsDdf4a7ctaJpGgKRHmnM9bJNVyblk52UpqmrnMVTITaBKZctKEh',\n   * ]);\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#binarydatabyids).\n   *\n   * @param ids The IDs of the requested binary data\n   * @returns An array of data objects\n   */\n  async binaryDataByIds(e) {\n    return Array.isArray(e) && typeof e[0] == \"string\" ? (await this.dataClient.binaryDataByIDs({\n      binaryDataIds: e,\n      includeBinary: !0\n    })).data : (Le(), (await this.dataClient.binaryDataByIDs({\n      binaryIds: e,\n      includeBinary: !0\n    })).data);\n  }\n  /**\n   * Delete tabular data older than a specified number of days.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.deleteTabularData(\n   *   '123abc45-1234-5678-90ab-cdef12345678',\n   *   10\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#deletetabulardata).\n   *\n   * @param organizationId The ID of organization to delete data from\n   * @param deleteOlderThanDays Delete data that was captured more than this\n   *   many days ago. For example if `deleteOlderThanDays` is 10, this deletes\n   *   any data that was captured more than 10 days ago. If it is 0, all\n   *   existing data is deleted.\n   * @returns The number of items deleted\n   */\n  async deleteTabularData(e, n) {\n    return (await this.dataClient.deleteTabularData({\n      organizationId: e,\n      deleteOlderThanDays: n\n    })).deletedCount;\n  }\n  /**\n   * Filter and delete binary data.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.deleteBinaryDataByFilter({\n   *   componentName: 'camera-1',\n   *   componentType: 'rdk:component:camera',\n   *   organizationIds: ['123abc45-1234-5678-90ab-cdef12345678'],\n   *   startTime: new Date('2025-03-19'),\n   *   endTime: new Date('2025-03-20'),\n   * } as Filter);\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#deletebinarydatabyfilter).\n   *\n   * @param filter Optional `pb.Filter` specifying binary data to delete. No\n   *   `filter` implies all binary data.\n   * @param includeInternalData Whether or not to delete internal data. Default\n   *   is true\n   * @returns The number of items deleted\n   */\n  async deleteBinaryDataByFilter(e, n = !0) {\n    return (await this.dataClient.deleteBinaryDataByFilter({\n      filter: e,\n      includeInternalData: n\n    })).deletedCount;\n  }\n  /**\n   * Delete binary data, specified by ID.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.deleteBinaryDataByIds([\n   *   'ccb74b53-1235-4328-a4b9-91dff1915a50/x5vur1fmps/YAEzj5I1kTwtYsDdf4a7ctaJpGgKRHmnM9bJNVyblk52UpqmrnMVTITaBKZctKEh',\n   * ]);\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#deletebinarydatabyids).\n   *\n   * @param ids The IDs of the data to be deleted. Must be non-empty.\n   * @returns The number of items deleted\n   */\n  async deleteBinaryDataByIds(e) {\n    return Array.isArray(e) && typeof e[0] == \"string\" ? (await this.dataClient.deleteBinaryDataByIDs({\n      binaryDataIds: e\n    })).deletedCount : (Le(), (await this.dataClient.deleteBinaryDataByIDs({\n      binaryIds: e\n    })).deletedCount);\n  }\n  /**\n   * Add tags to binary data, specified by ID.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.addTagsToBinaryDataByIds(\n   *   ['tag1', 'tag2'],\n   *   [\n   *     'ccb74b53-1235-4328-a4b9-91dff1915a50/x5vur1fmps/YAEzj5I1kTwtYsDdf4a7ctaJpGgKRHmnM9bJNVyblk52UpqmrnMVTITaBKZctKEh',\n   *   ]\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#addtagstobinarydatabyids).\n   *\n   * @param tags The list of tags to add to specified binary data. Must be\n   *   non-empty.\n   * @param ids The IDs of the data to be tagged. Must be non-empty.\n   */\n  async addTagsToBinaryDataByIds(e, n) {\n    if (Array.isArray(n) && typeof n[0] == \"string\") {\n      await this.dataClient.addTagsToBinaryDataByIDs({\n        tags: e,\n        binaryDataIds: n\n      });\n      return;\n    }\n    Le(), await this.dataClient.addTagsToBinaryDataByIDs({\n      tags: e,\n      binaryIds: n\n    });\n  }\n  /**\n   * Add tags to binary data, specified by filter.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.addTagsToBinaryDataByFilter(\n   *   ['tag1', 'tag2'],\n   *   [\n   *     {\n   *       componentName: 'camera-1',\n   *     } as Filter,\n   *   ]\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#addtagstobinarydatabyfilter).\n   *\n   * @param tags The tags to add to the data\n   * @param filter Optional `pb.Filter` specifying binary data to add tags to.\n   *   No `filter` implies all binary data.\n   */\n  async addTagsToBinaryDataByFilter(e, n) {\n    await this.dataClient.addTagsToBinaryDataByFilter({\n      tags: e,\n      filter: n\n    });\n  }\n  /**\n   * Remove tags from binary data, specified by ID.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.removeTagsFromBinaryDataByIds(\n   *   ['tag1', 'tag2'],\n   *   [\n   *     'ccb74b53-1235-4328-a4b9-91dff1915a50/x5vur1fmps/YAEzj5I1kTwtYsDdf4a7ctaJpGgKRHmnM9bJNVyblk52UpqmrnMVTITaBKZctKEh',\n   *   ]\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#removetagsfrombinarydatabyids).\n   *\n   * @param tags List of tags to remove from specified binary data. Must be\n   *   non-empty.\n   * @param ids The IDs of the data to be edited. Must be non-empty.\n   * @returns The number of items deleted\n   */\n  async removeTagsFromBinaryDataByIds(e, n) {\n    return Array.isArray(n) && typeof n[0] == \"string\" ? (await this.dataClient.removeTagsFromBinaryDataByIDs({\n      tags: e,\n      binaryDataIds: n\n    })).deletedCount : (Le(), (await this.dataClient.removeTagsFromBinaryDataByIDs({\n      tags: e,\n      binaryIds: n\n    })).deletedCount);\n  }\n  /**\n   * Remove tags from binary data, specified by filter.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.removeTagsFromBinaryDataByFilter(\n   *   ['tag1', 'tag2'],\n   *   {\n   *     componentName: 'camera-1',\n   *     componentType: 'rdk:component:camera',\n   *     organizationIds: ['123abc45-1234-5678-90ab-cdef12345678'],\n   *     startTime: new Date('2025-03-19'),\n   *     endTime: new Date('2025-03-20'),\n   *   } as Filter\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#removetagsfrombinarydatabyfilter).\n   *\n   * @param tags List of tags to remove from specified binary data. Must be\n   *   non-empty.\n   * @param filter Optional `pb.Filter` specifying binary data to add tags to.\n   *   No `filter` implies all binary data.\n   * @returns The number of items deleted\n   */\n  async removeTagsFromBinaryDataByFilter(e, n) {\n    return (await this.dataClient.removeTagsFromBinaryDataByFilter({\n      tags: e,\n      filter: n\n    })).deletedCount;\n  }\n  /**\n   * Get a list of tags using a filter.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.tagsByFilter({\n   *   componentName: 'camera-1',\n   * } as Filter);\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#tagsbyfilter).\n   *\n   * @param filter Optional `pb.Filter` specifying what data to get tags from.\n   *   No `filter` implies all data.\n   * @returns The list of tags\n   */\n  async tagsByFilter(e) {\n    return (await this.dataClient.tagsByFilter({\n      filter: e\n    })).tags;\n  }\n  /**\n   * Add bounding box to an image.\n   *\n   * @example\n   *\n   * ```ts\n   * const bboxId = await dataClient.addBoundingBoxToImageById(\n   *   'ccb74b53-1235-4328-a4b9-91dff1915a50/x5vur1fmps/YAEzj5I1kTwtYsDdf4a7ctaJpGgKRHmnM9bJNVyblk52UpqmrnMVTITaBKZctKEh',\n   *   'label1',\n   *   0.3,\n   *   0.3,\n   *   0.6,\n   *   0.6\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#addboundingboxtoimagebyid).\n   *\n   * @param binaryId The ID of the image to add the bounding box to\n   * @param label A label for the bounding box\n   * @param xMinNormalized The min X value of the bounding box normalized from 0\n   *   to 1\n   * @param yMinNormalized The min Y value of the bounding box normalized from 0\n   *   to 1\n   * @param xMaxNormalized The max X value of the bounding box normalized from 0\n   *   to 1\n   * @param yMaxNormalized The max Y value of the bounding box normalized from 0\n   *   to 1\n   * @returns The bounding box ID\n   */\n  async addBoundingBoxToImageById(e, n, t, o, i, r) {\n    return typeof e == \"string\" ? (await this.dataClient.addBoundingBoxToImageByID({\n      binaryDataId: e,\n      label: n,\n      xMinNormalized: t,\n      yMinNormalized: o,\n      xMaxNormalized: i,\n      yMaxNormalized: r\n    })).bboxId : (Le(), (await this.dataClient.addBoundingBoxToImageByID({\n      binaryId: e,\n      label: n,\n      xMinNormalized: t,\n      yMinNormalized: o,\n      xMaxNormalized: i,\n      yMaxNormalized: r\n    })).bboxId);\n  }\n  /**\n   * Remove a bounding box from an image.\n   *\n   * @example\n   *\n   * ```ts\n   * await dataClient.removeBoundingBoxFromImageById(\n   *   'ccb74b53-1235-4328-a4b9-91dff1915a50/x5vur1fmps/YAEzj5I1kTwtYsDdf4a7ctaJpGgKRHmnM9bJNVyblk52UpqmrnMVTITaBKZctKEh',\n   *   '5Z9ryhkW7ULaXROjJO6ghPYulNllnH20QImda1iZFroZpQbjahK6igQ1WbYigXED'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#removeboundingboxfromimagebyid).\n   *\n   * @param binId The ID of the image to remove the bounding box from\n   * @param bboxId The ID of the bounding box to remove\n   */\n  async removeBoundingBoxFromImageById(e, n) {\n    if (typeof e == \"string\") {\n      await this.dataClient.removeBoundingBoxFromImageByID({\n        binaryDataId: e,\n        bboxId: n\n      });\n      return;\n    }\n    Le(), await this.dataClient.removeBoundingBoxFromImageByID({\n      binaryId: e,\n      bboxId: n\n    });\n  }\n  /**\n   * Get a list of bounding box labels using a Filter.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.boundingBoxLabelsByFilter({\n   *   componentName: 'camera-1',\n   * } as Filter);\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#boundingboxlabelsbyfilter).\n   *\n   * @param filter Optional `pb.Filter` specifying what data to get tags from.\n   *   No `filter` implies all labels.\n   * @returns The list of bounding box labels\n   */\n  async boundingBoxLabelsByFilter(e) {\n    return (await this.dataClient.boundingBoxLabelsByFilter({\n      filter: e\n    })).labels;\n  }\n  /**\n   * Configure a database user for the Viam organization's MongoDB Atlas Data\n   * Federation instance. It can also be used to reset the password of the\n   * existing database user.\n   *\n   * @example\n   *\n   * ```ts\n   * await dataClient.configureDatabaseUser(\n   *   '123abc45-1234-5678-90ab-cdef12345678',\n   *   'Password01!'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#configuredatabaseuser).\n   *\n   * @param organizationId The ID of the organization\n   * @param password The password of the user\n   */\n  async configureDatabaseUser(e, n) {\n    await this.dataClient.configureDatabaseUser({\n      organizationId: e,\n      password: n\n    });\n  }\n  /**\n   * Get a connection to access a MongoDB Atlas Data federation instance.\n   *\n   * @example\n   *\n   * ```ts\n   * const hostname = await dataClient.getDatabaseConnection(\n   *   '123abc45-1234-5678-90ab-cdef12345678'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#getdatabaseconnection).\n   *\n   * @param organizationId Organization to retrieve connection for\n   * @returns Hostname of the federated database\n   */\n  async getDatabaseConnection(e) {\n    return (await this.dataClient.getDatabaseConnection({\n      organizationId: e\n    })).hostname;\n  }\n  /**\n   * Add BinaryData to the provided dataset.\n   *\n   * @example\n   *\n   * ```ts\n   * await dataClient.addBinaryDataToDatasetByIds(\n   *   [\n   *     'ccb74b53-1235-4328-a4b9-91dff1915a50/x5vur1fmps/YAEzj5I1kTwtYsDdf4a7ctaJpGgKRHmnM9bJNVyblk52UpqmrnMVTITaBKZctKEh',\n   *   ],\n   *   '12ab3de4f56a7bcd89ef0ab1'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#addbinarydatatodatasetbyids).\n   *\n   * @param ids The IDs of binary data to add to dataset\n   * @param datasetId The ID of the dataset to be added to\n   */\n  async addBinaryDataToDatasetByIds(e, n) {\n    if (Array.isArray(e) && typeof e[0] == \"string\") {\n      await this.dataClient.addBinaryDataToDatasetByIDs({\n        binaryDataIds: e,\n        datasetId: n\n      });\n      return;\n    }\n    Le(), await this.dataClient.addBinaryDataToDatasetByIDs({\n      binaryIds: e,\n      datasetId: n\n    });\n  }\n  /**\n   * Remove BinaryData from the provided dataset.\n   *\n   * @example\n   *\n   * ```ts\n   * await dataClient.removeBinaryDataFromDatasetByIds(\n   *   [\n   *     'ccb74b53-1235-4328-a4b9-91dff1915a50/x5vur1fmps/YAEzj5I1kTwtYsDdf4a7ctaJpGgKRHmnM9bJNVyblk52UpqmrnMVTITaBKZctKEh',\n   *   ],\n   *   '12ab3de4f56a7bcd89ef0ab1'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#removebinarydatafromdatasetbyids).\n   *\n   * @param ids The IDs of the binary data to remove from dataset\n   * @param datasetId The ID of the dataset to be removed from\n   */\n  async removeBinaryDataFromDatasetByIds(e, n) {\n    if (Array.isArray(e) && typeof e[0] == \"string\") {\n      await this.dataClient.removeBinaryDataFromDatasetByIDs({\n        binaryDataIds: e,\n        datasetId: n\n      });\n      return;\n    }\n    Le(), await this.dataClient.removeBinaryDataFromDatasetByIDs({\n      binaryIds: e,\n      datasetId: n\n    });\n  }\n  /**\n   * Create a new dataset.\n   *\n   * @example\n   *\n   * ```ts\n   * const datasetId = await dataClient.createDataset(\n   *   'my-new-dataset',\n   *   '123abc45-1234-5678-90ab-cdef12345678'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#createdataset).\n   *\n   * @param name The name of the new dataset\n   * @param organizationId The ID of the organization the dataset is being\n   *   created in\n   * @returns The ID of the dataset\n   */\n  async createDataset(e, n) {\n    return (await this.datasetClient.createDataset({\n      name: e,\n      organizationId: n\n    })).id;\n  }\n  /**\n   * Delete a dataset.\n   *\n   * @example\n   *\n   * ```ts\n   * await dataClient.deleteDataset('12ab3de4f56a7bcd89ef0ab1');\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#deletedataset).\n   *\n   * @param id The ID of the dataset.\n   */\n  async deleteDataset(e) {\n    await this.datasetClient.deleteDataset({\n      id: e\n    });\n  }\n  /**\n   * Rename a dataset.\n   *\n   * @example\n   *\n   * ```ts\n   * await dataClient.renameDataset(\n   *   '12ab3de4f56a7bcd89ef0ab1',\n   *   'my-new-dataset'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#renamedataset).\n   *\n   * @param id The ID of the dataset\n   * @param name The new name of the dataset\n   */\n  async renameDataset(e, n) {\n    await this.datasetClient.renameDataset({\n      id: e,\n      name: n\n    });\n  }\n  /**\n   * List all of the datasets for an organization.\n   *\n   * @example\n   *\n   * ```ts\n   * const datasets = await dataClient.listDatasetsByOrganizationID(\n   *   '123abc45-1234-5678-90ab-cdef12345678'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#listdatasetsbyorganizationid).\n   *\n   * @param organizationId The ID of the organization\n   * @returns The list of datasets in the organization\n   */\n  async listDatasetsByOrganizationID(e) {\n    return (await this.datasetClient.listDatasetsByOrganizationID({\n      organizationId: e\n    })).datasets.map(t => ({\n      created: t.timeCreated?.toDate(),\n      ...t\n    }));\n  }\n  /**\n   * List all of the datasets specified by the given dataset IDs.\n   *\n   * @example\n   *\n   * ```ts\n   * const datasets = await dataClient.listDatasetsByIds([\n   *   '12ab3de4f56a7bcd89ef0ab1',\n   * ]);\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#listdatasetsbyids).\n   *\n   * @param ids The list of IDs of the datasets\n   * @returns The list of datasets\n   */\n  async listDatasetsByIds(e) {\n    return (await this.datasetClient.listDatasetsByIDs({\n      ids: e\n    })).datasets.map(t => ({\n      created: t.timeCreated?.toDate(),\n      ...t\n    }));\n  }\n  /**\n   * Uploads the content and metadata for tabular data.\n   *\n   * Upload tabular data collected on a robot through a specific component (for\n   * example, a motor) along with the relevant metadata to app.viam.com. Tabular\n   * data can be found under the \"Sensors\" subtab of the Data tab on\n   * app.viam.com.\n   *\n   * @example\n   *\n   * ```ts\n   * const fileId = await dataClient.tabularDataCaptureUpload(\n   *   [\n   *     {\n   *       timestamp: '2025-03-26T10:00:00Z',\n   *       value: 10,\n   *     },\n   *   ],\n   *   '123abc45-1234-5678-90ab-cdef12345678',\n   *   'rdk:component:sensor',\n   *   'my-sensor',\n   *   'Readings',\n   *   [\n   *     [\n   *       new Date('2025-03-26T10:00:00Z'),\n   *       new Date('2025-03-26T10:00:00Z'),\n   *     ],\n   *   ]\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#tabulardatacaptureupload).\n   *\n   * @param tabularData The list of data to be uploaded, represented tabularly\n   *   as an array.\n   * @param partId The part ID of the component used to capture the data\n   * @param componentType The type of the component used to capture the data\n   *   (for example, \"movementSensor\")\n   * @param componentName The name of the component used to capture the data\n   * @param methodName The name of the method used to capture the data.\n   * @param tags The list of tags to allow for tag-based filtering when\n   *   retrieving data\n   * @param dataRequestTimes Array of Date tuples, each containing two `Date`\n   *   objects denoting the times this data was requested[0] by the robot and\n   *   received[1] from the appropriate sensor. Passing a list of tabular data\n   *   and Timestamps with length n > 1 will result in n datapoints being\n   *   uploaded, all tied to the same metadata.\n   * @returns The file ID of the uploaded data\n   */\n  async tabularDataCaptureUpload(e, n, t, o, i, r, c) {\n    if (r.length !== e.length) throw new Error(\"dataRequestTimes and data lengths must be equal.\");\n    const p = new wn({\n        partId: n,\n        componentType: t,\n        componentName: o,\n        methodName: i,\n        type: Qa.TABULAR_SENSOR,\n        tags: c\n      }),\n      d = [];\n    for (const [S, R] of e.entries()) {\n      const I = new Uo(),\n        O = r[S];\n      O && (I.timeRequested = _.fromDate(O[0]), I.timeReceived = _.fromDate(O[1])), d.push(new et({\n        metadata: I,\n        data: {\n          case: \"struct\",\n          value: l.fromJson(R)\n        }\n      }));\n    }\n    const T = new Za({\n      metadata: p,\n      sensorContents: d\n    });\n    return (await this.dataSyncClient.dataCaptureUpload(T)).fileId;\n  }\n  /**\n   * Uploads the content and metadata for binary data.\n   *\n   * Upload binary data collected on a robot through a specific component (for\n   * example, a motor) along with the relevant metadata to app.viam.com. binary\n   * data can be found under the \"Sensors\" subtab of the Data tab on\n   * app.viam.com.\n   *\n   * @example\n   *\n   * ```ts\n   * const binaryDataId = await dataClient.binaryDataCaptureUpload(\n   *   binaryData,\n   *   '123abc45-1234-5678-90ab-cdef12345678',\n   *   'rdk:component:camera',\n   *   'my-camera',\n   *   'ReadImage',\n   *   '.jpg',\n   *   [new Date('2025-03-19'), new Date('2025-03-19')]\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#binarydatacaptureupload).\n   *\n   * @param binaryData The data to be uploaded, represented in bytes\n   * @param partId The part ID of the component used to capture the data\n   * @param componentType The type of the component used to capture the data\n   *   (for example, \"movementSensor\")\n   * @param componentName The name of the component used to capture the data\n   * @param methodName The name of the method used to capture the data.\n   * @param fileExtension The file extension of binary data including the\n   *   period, for example .jpg, .png, or .pcd. The backend will route the\n   *   binary to its corresponding mime type based on this extension. Files with\n   *   a .jpeg, .jpg, or .png extension will be saved to the images tab.\n   * @param tags The list of tags to allow for tag-based filtering when\n   *   retrieving data\n   * @param dataRequestTimes Tuple containing `Date` objects denoting the times\n   *   this data was requested[0] by the robot and received[1] from the\n   *   appropriate sensor.\n   * @returns The binary data ID of the uploaded data\n   */\n  async binaryDataCaptureUpload(e, n, t, o, i, r, c, p) {\n    const d = new wn({\n        partId: n,\n        componentType: t,\n        componentName: o,\n        methodName: i,\n        type: Qa.BINARY_SENSOR,\n        tags: p,\n        fileExtension: r\n      }),\n      T = new et({\n        metadata: {\n          timeRequested: _.fromDate(c[0]),\n          timeReceived: _.fromDate(c[1])\n        },\n        data: {\n          case: \"binary\",\n          value: e\n        }\n      }),\n      f = new Za({\n        metadata: d,\n        sensorContents: [T]\n      });\n    return (await this.dataSyncClient.dataCaptureUpload(f)).binaryDataId;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  createFilter(e) {\n    const n = new $e(e);\n    if (e.startTime ?? e.endTime) {\n      const o = new bn();\n      e.startTime && (o.start = _.fromDate(e.startTime)), e.endTime && (o.end = _.fromDate(e.endTime)), n.interval = o;\n    }\n    const t = new Ao();\n    return e.tags && (t.tags = e.tags, n.tagsFilter = t), n;\n  }\n  /**\n   * Gets the most recent tabular data captured from the specified data source,\n   * as long as it was synced within the last year.\n   *\n   * @example\n   *\n   * ```ts\n   * const data = await dataClient.getLatestTabularData(\n   *   '123abc45-1234-5678-90ab-cdef12345678',\n   *   'my-sensor',\n   *   'rdk:component:sensor',\n   *   'Readings'\n   * );\n   * ```\n   *\n   * For more information, see [Data\n   * API](https://docs.viam.com/dev/reference/apis/data-client/#getlatesttabulardata).\n   *\n   * @param partId The ID of the part that owns the data\n   * @param resourceName The name of the requested resource that captured the\n   *   data. Ex: \"my-sensor\"\n   * @param resourceSubtype The subtype of the requested resource that captured\n   *   the data. Ex: \"rdk:component:sensor\"\n   * @param methodName The data capture method name. Ex: \"Readings\"\n   * @returns A tuple containing [timeCaptured, timeSynced, payload] or null if\n   *   no data has been synced for the specified resource OR the most recently\n   *   captured data was over a year ago\n   */\n  async getLatestTabularData(e, n, t, o) {\n    const i = await this.dataClient.getLatestTabularData({\n      partId: e,\n      resourceName: n,\n      resourceSubtype: t,\n      methodName: o\n    });\n    return !i.payload || !i.timeCaptured || !i.timeSynced ? null : [i.timeCaptured.toDate(), i.timeSynced.toDate(), i.payload.toJson()];\n  }\n}\nconst P1 = {\n  typeName: \"viam.app.mltraining.v1.MLTrainingService\",\n  methods: {\n    /**\n     * SubmitTrainingJob submits a training job request.\n     *\n     * @generated from rpc viam.app.mltraining.v1.MLTrainingService.SubmitTrainingJob\n     */\n    submitTrainingJob: {\n      name: \"SubmitTrainingJob\",\n      I: Bd,\n      O: xd,\n      kind: m.Unary\n    },\n    /**\n     * SubmitCustomTrainingJob submits a custom training job request.\n     *\n     * @generated from rpc viam.app.mltraining.v1.MLTrainingService.SubmitCustomTrainingJob\n     */\n    submitCustomTrainingJob: {\n      name: \"SubmitCustomTrainingJob\",\n      I: Fd,\n      O: Jd,\n      kind: m.Unary\n    },\n    /**\n     * GetTrainingJob retrieves a training job by its ID.\n     *\n     * @generated from rpc viam.app.mltraining.v1.MLTrainingService.GetTrainingJob\n     */\n    getTrainingJob: {\n      name: \"GetTrainingJob\",\n      I: zd,\n      O: Yd,\n      kind: m.Unary\n    },\n    /**\n     * ListTrainingJobs lists training jobs for a given organization ID and training status.\n     *\n     * @generated from rpc viam.app.mltraining.v1.MLTrainingService.ListTrainingJobs\n     */\n    listTrainingJobs: {\n      name: \"ListTrainingJobs\",\n      I: $d,\n      O: Vd,\n      kind: m.Unary\n    },\n    /**\n     * CancelTrainingJob cancels a training job that has not yet completed.\n     *\n     * @generated from rpc viam.app.mltraining.v1.MLTrainingService.CancelTrainingJob\n     */\n    cancelTrainingJob: {\n      name: \"CancelTrainingJob\",\n      I: Wd,\n      O: jd,\n      kind: m.Unary\n    },\n    /**\n     * DeleteCompletedTrainingJob removes a completed training job from the database, whether the job succeeded or failed.\n     *\n     * @generated from rpc viam.app.mltraining.v1.MLTrainingService.DeleteCompletedTrainingJob\n     */\n    deleteCompletedTrainingJob: {\n      name: \"DeleteCompletedTrainingJob\",\n      I: Hd,\n      O: Kd,\n      kind: m.Unary\n    },\n    /**\n     * GetTrainingJobLogs gets the logs for a given custom training job.\n     *\n     * @generated from rpc viam.app.mltraining.v1.MLTrainingService.GetTrainingJobLogs\n     */\n    getTrainingJobLogs: {\n      name: \"GetTrainingJobLogs\",\n      I: Qd,\n      O: Zd,\n      kind: m.Unary\n    }\n  }\n};\nclass A1 {\n  client;\n  constructor(e) {\n    this.client = P(P1, e);\n  }\n  /**\n   * Submit a training job.\n   *\n   * @example\n   *\n   * ```ts\n   * await mlTrainingClient.submitTrainingJob(\n   *   '<organization-id>',\n   *   '<dataset-id>',\n   *   '<your-model-name>',\n   *   '1.0.0',\n   *   ModelType.SINGLE_LABEL_CLASSIFICATION,\n   *   ['tag1', 'tag2']\n   * );\n   * ```\n   *\n   * For more information, see [ML Training\n   * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#submittrainingjob).\n   *\n   * @param organizationId - The organization ID.\n   * @param datasetId - The dataset ID.\n   * @param modelName - The model name.\n   * @param modelVersion - The model version.\n   * @param modelType - The model type.\n   * @param tags - The tags.\n   */\n  async submitTrainingJob(e, n, t, o, i, r) {\n    return (await this.client.submitTrainingJob({\n      organizationId: e,\n      datasetId: n,\n      modelName: t,\n      modelVersion: o,\n      modelType: i,\n      tags: r\n    })).id;\n  }\n  /**\n   * Submit a training job from a custom training script.\n   *\n   * @example\n   *\n   * ```ts\n   * await mlTrainingClient.submitCustomTrainingJob(\n   *   '<organization-id>',\n   *   '<dataset-id>',\n   *   'viam:classification-tflite',\n   *   '1.0.0',\n   *   '<your-model-name>',\n   *   '1.0.0'\n   * );\n   * ```\n   *\n   * For more information, see [ML Training\n   * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#submitcustomtrainingjob).\n   *\n   * @param organizationId - The organization ID.\n   * @param datasetId - The dataset ID.\n   * @param registryItemId - The registry item ID.\n   * @param registryItemVersion - The registry item version.\n   * @param modelName - The model name.\n   * @param modelVersion - The model version.\n   */\n  async submitCustomTrainingJob(e, n, t, o, i, r) {\n    return (await this.client.submitCustomTrainingJob({\n      organizationId: e,\n      datasetId: n,\n      registryItemId: t,\n      registryItemVersion: o,\n      modelName: i,\n      modelVersion: r\n    })).id;\n  }\n  /**\n   * Get a training job metadata.\n   *\n   * @example\n   *\n   * ```ts\n   * const job = await mlTrainingClient.getTrainingJob('<training-job-id>');\n   * ```\n   *\n   * For more information, see [ML Training\n   * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#gettrainingjob).\n   *\n   * @param id - The training job ID.\n   */\n  async getTrainingJob(e) {\n    return (await this.client.getTrainingJob({\n      id: e\n    })).metadata;\n  }\n  /**\n   * List training jobs.\n   *\n   * @example\n   *\n   * ```ts\n   * const jobs = await mlTrainingClient.listTrainingJobs(\n   *   '<organization-id>',\n   *   TrainingStatus.RUNNING\n   * );\n   * ```\n   *\n   * For more information, see [ML Training\n   * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#listtrainingjobs).\n   *\n   * @param organizationId - The organization ID.\n   * @param status - The training job status.\n   */\n  async listTrainingJobs(e, n) {\n    return (await this.client.listTrainingJobs({\n      organizationId: e,\n      status: n\n    })).jobs;\n  }\n  /**\n   * Cancel a training job.\n   *\n   * @example\n   *\n   * ```ts\n   * await mlTrainingClient.cancelTrainingJob('<training-job-id>');\n   * ```\n   *\n   * For more information, see [ML Training\n   * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#canceltrainingjob).\n   *\n   * @param id - The training job ID.\n   */\n  async cancelTrainingJob(e) {\n    return await this.client.cancelTrainingJob({\n      id: e\n    }), null;\n  }\n  /**\n   * Delete a completed training job.\n   *\n   * @example\n   *\n   * ```ts\n   * await mlTrainingClient.deleteCompletedTrainingJob('<training-job-id>');\n   * ```\n   *\n   * For more information, see [ML Training\n   * API](https://docs.viam.com/dev/reference/apis/ml-training-client/#deletecompletedtrainingjob).\n   *\n   * @param id - The training job ID.\n   */\n  async deleteCompletedTrainingJob(e) {\n    return await this.client.deleteCompletedTrainingJob({\n      id: e\n    }), null;\n  }\n}\nconst Zy = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.GetSmartMachineStatusRequest\", []),\n  ev = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.GetSmartMachineStatusResponse\", () => [{\n    no: 1,\n    name: \"provisioning_info\",\n    kind: \"message\",\n    T: rv\n  }, {\n    no: 2,\n    name: \"has_smart_machine_credentials\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 3,\n    name: \"is_online\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 4,\n    name: \"latest_connection_attempt\",\n    kind: \"message\",\n    T: Go\n  }, {\n    no: 5,\n    name: \"errors\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  nv = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.SetNetworkCredentialsRequest\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"ssid\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"psk\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  av = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.SetNetworkCredentialsResponse\", []),\n  tv = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.SetSmartMachineCredentialsRequest\", () => [{\n    no: 1,\n    name: \"cloud\",\n    kind: \"message\",\n    T: mv\n  }]),\n  sv = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.SetSmartMachineCredentialsResponse\", []),\n  ov = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.GetNetworkListRequest\", []),\n  iv = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.GetNetworkListResponse\", () => [{\n    no: 1,\n    name: \"networks\",\n    kind: \"message\",\n    T: Go,\n    repeated: !0\n  }]),\n  rv = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.ProvisioningInfo\", () => [{\n    no: 1,\n    name: \"fragment_id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"model\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"manufacturer\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Go = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.NetworkInfo\", () => [{\n    no: 1,\n    name: \"type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"ssid\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"security\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 4,\n    name: \"signal\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 5,\n    name: \"connected\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  }, {\n    no: 6,\n    name: \"last_error\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  mv = /* @__PURE__ */s.makeMessageType(\"viam.provisioning.v1.CloudConfig\", () => [{\n    no: 1,\n    name: \"id\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"secret\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 3,\n    name: \"app_address\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  l_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    CloudConfig: mv,\n    GetNetworkListRequest: ov,\n    GetNetworkListResponse: iv,\n    GetSmartMachineStatusRequest: Zy,\n    GetSmartMachineStatusResponse: ev,\n    NetworkInfo: Go,\n    ProvisioningInfo: rv,\n    SetNetworkCredentialsRequest: nv,\n    SetNetworkCredentialsResponse: av,\n    SetSmartMachineCredentialsRequest: tv,\n    SetSmartMachineCredentialsResponse: sv\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  D1 = {\n    typeName: \"viam.provisioning.v1.ProvisioningService\",\n    methods: {\n      /**\n       * GetSmartMachineStatus is for retrieving the status of the smart machine including networking.\n       *\n       * @generated from rpc viam.provisioning.v1.ProvisioningService.GetSmartMachineStatus\n       */\n      getSmartMachineStatus: {\n        name: \"GetSmartMachineStatus\",\n        I: Zy,\n        O: ev,\n        kind: m.Unary\n      },\n      /**\n       * SetNetworkCredentials is to set the wifi credentials.\n       *\n       * @generated from rpc viam.provisioning.v1.ProvisioningService.SetNetworkCredentials\n       */\n      setNetworkCredentials: {\n        name: \"SetNetworkCredentials\",\n        I: nv,\n        O: av,\n        kind: m.Unary\n      },\n      /**\n       * SetSmartMachineCredentials is to set the smart machine credentials.\n       *\n       * @generated from rpc viam.provisioning.v1.ProvisioningService.SetSmartMachineCredentials\n       */\n      setSmartMachineCredentials: {\n        name: \"SetSmartMachineCredentials\",\n        I: tv,\n        O: sv,\n        kind: m.Unary\n      },\n      /**\n       * GetNetworkList is to retrieve the list of networks that are visible to the smart machine.\n       *\n       * @generated from rpc viam.provisioning.v1.ProvisioningService.GetNetworkList\n       */\n      getNetworkList: {\n        name: \"GetNetworkList\",\n        I: ov,\n        O: iv,\n        kind: m.Unary\n      }\n    }\n  };\nclass q1 {\n  client;\n  constructor(e) {\n    this.client = P(D1, e);\n  }\n  /**\n   * Get the status of the Smart Machine.\n   *\n   * @returns The Smart Machine status\n   */\n  async getSmartMachineStatus() {\n    return this.client.getSmartMachineStatus({});\n  }\n  /**\n   * Set the network credentials of the Smart Machine, so it can connect to the\n   * internet.\n   *\n   * @param type - The type of network\n   * @param ssid - The SSID of the network\n   * @param psk - The network's passkey\n   */\n  async setNetworkCredentials(e, n, t) {\n    await this.client.setNetworkCredentials({\n      type: e,\n      ssid: n,\n      psk: t\n    });\n  }\n  /**\n   * Set the Viam credentials of the smart machine credentials, so it connect to\n   * the Cloud.\n   *\n   * @param cloud - The configuration of the Cloud\n   */\n  async setSmartMachineCredentials(e) {\n    await this.client.setSmartMachineCredentials({\n      cloud: e\n    });\n  }\n  /**\n   * Get the networks that are visible to the Smart Machine.\n   *\n   * @returns A list of networks\n   */\n  async getNetworkList() {\n    return (await this.client.getNetworkList({})).networks;\n  }\n}\nconst d_ = async ({\n  serviceHost: a = \"https://app.viam.com\",\n  credentials: e\n}) => {\n  const n = await eR(a, e);\n  return new U1(n, e);\n};\nclass U1 {\n  transport;\n  credentials;\n  dataClient;\n  appClient;\n  mlTrainingClient;\n  provisioningClient;\n  billingClient;\n  constructor(e, n) {\n    this.transport = e, this.credentials = n, this.dataClient = new N1(this.transport), this.appClient = new o1(this.transport), this.mlTrainingClient = new A1(this.transport), this.provisioningClient = new q1(this.transport), this.billingClient = new r1(this.transport);\n  }\n  async connectToMachine({\n    host: e = void 0,\n    id: n = void 0\n  }) {\n    if (e === void 0 && n === void 0) throw new Error(\"Either a machine address or ID must be provided\");\n    let t = e,\n      o;\n    if (n !== void 0 && e === void 0) {\n      const c = (await this.appClient.getRobotParts(n)).find(p => p.mainPart);\n      if (!c) throw new Error(`Could not find a main part for the machine with UUID: ${n}`);\n      t = c.fqdn, o = c.locationId;\n    }\n    if (t === void 0 || t === \"\") throw new Error(\"Host was not provided and could not be obtained from the machine ID\");\n    let i = this.credentials;\n    if (!Cn(i)) {\n      if (o === void 0) {\n        const c = t.split(\".viam.\")[0]?.split(\".\");\n        c !== void 0 && (o = c.at(-1));\n      }\n      o !== void 0 && (i = {\n        type: \"robot-location-secret\",\n        payload: (await this.appClient.getLocation(o))?.auth?.secrets.find(\n        // eslint-disable-next-line camelcase\n        p => p.state === Io.ENABLED)?.secret,\n        authEntity: t\n      });\n    }\n    return a1({\n      host: t,\n      credentials: i,\n      signalingAddress: \"https://app.viam.com:443\",\n      reconnectMaxAttempts: 1\n    });\n  }\n}\nconst {\n  JointPositions: p_\n} = aR;\nclass u_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(qr), this.name = n, this.options = t;\n  }\n  async getEndPosition(e = {}, n = this.callOptions) {\n    const t = new gt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const i = (await this.client.getEndPosition(t, n)).pose;\n    if (!i) throw new Error(\"no pose\");\n    return i;\n  }\n  async getGeometries(e = {}, n = this.callOptions) {\n    const t = new J({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return (await this.client.getGeometries(t, n)).geometries;\n  }\n  async moveToPosition(e, n = {}, t = this.callOptions) {\n    const o = new kt({\n      name: this.name,\n      to: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.moveToPosition(o, t);\n  }\n  async moveToJointPositions(e, n = {}, t = this.callOptions) {\n    const o = new mn({\n        values: e\n      }),\n      i = new yt({\n        name: this.name,\n        positions: o,\n        extra: l.fromJson(n)\n      });\n    this.options.requestLogger?.(i), await this.client.moveToJointPositions(i, t);\n  }\n  async getJointPositions(e = {}, n = this.callOptions) {\n    const t = new Tt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const i = (await this.client.getJointPositions(t, n)).positions;\n    if (!i) throw new Error(\"no pose\");\n    return i;\n  }\n  async stop(e = {}, n = this.callOptions) {\n    const t = new vt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.stop(t, n);\n  }\n  async isMoving(e = this.callOptions) {\n    const n = new ht({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), (await this.client.isMoving(n, e)).isMoving;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst {\n  GetPropertiesResponse: g_\n} = tR;\nclass T_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(zr), this.name = n, this.options = t;\n  }\n  async getGeometries(e = {}, n = this.callOptions) {\n    const t = new J({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return (await this.client.getGeometries(t, n)).geometries;\n  }\n  async moveStraight(e, n, t = {}, o = this.callOptions) {\n    const i = new ft({\n      name: this.name,\n      mmPerSec: n,\n      distanceMm: e ? BigInt(e) : void 0,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.moveStraight(i, o);\n  }\n  async spin(e, n, t = {}, o = this.callOptions) {\n    const i = new Rt({\n      name: this.name,\n      angleDeg: e,\n      degsPerSec: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.spin(i, o);\n  }\n  async setPower(e, n, t = {}, o = this.callOptions) {\n    const i = new St({\n      name: this.name,\n      linear: e,\n      angular: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.setPower(i, o);\n  }\n  async setVelocity(e, n, t = {}, o = this.callOptions) {\n    const i = new It({\n      name: this.name,\n      linear: e,\n      angular: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.setVelocity(i, o);\n  }\n  async stop(e = {}, n = this.callOptions) {\n    const t = new _t({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.stop(t, n);\n  }\n  async isMoving(e = this.callOptions) {\n    const n = new Mt({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), (await this.client.isMoving(n, e)).isMoving;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n  async getProperties(e = {}, n = this.callOptions) {\n    const t = new Ta({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), this.client.getProperties(t, n);\n  }\n}\nconst {\n  ReadAnalogReaderResponse: k_,\n  PowerMode: y_\n} = oR;\nclass v_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(am), this.name = n, this.options = t;\n  }\n  async setGPIO(e, n, t = {}, o = this.callOptions) {\n    const i = new bt({\n      name: this.name,\n      pin: e,\n      high: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.setGPIO(i, o);\n  }\n  async getGPIO(e, n = {}, t = this.callOptions) {\n    const o = new wt({\n      name: this.name,\n      pin: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), (await this.client.getGPIO(o, t)).high;\n  }\n  async getPWM(e, n = {}, t = this.callOptions) {\n    const o = new Et({\n      name: this.name,\n      pin: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), (await this.client.pWM(o, t)).dutyCyclePct;\n  }\n  async setPWM(e, n, t = {}, o = this.callOptions) {\n    const i = new Ot({\n      name: this.name,\n      pin: e,\n      dutyCyclePct: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.setPWM(i, o);\n  }\n  async getPWMFrequency(e, n = {}, t = this.callOptions) {\n    const o = new Ct({\n      name: this.name,\n      pin: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o);\n    const i = await this.client.pWMFrequency(o, t);\n    return Number(i.frequencyHz);\n  }\n  async setPWMFrequency(e, n, t = {}, o = this.callOptions) {\n    const i = new Nt({\n      name: this.name,\n      pin: e,\n      frequencyHz: n ? BigInt(n) : void 0,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.setPWMFrequency(i, o);\n  }\n  async readAnalogReader(e, n = {}, t = this.callOptions) {\n    const o = new Pt({\n      boardName: this.name,\n      analogReaderName: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), this.client.readAnalogReader(o, t);\n  }\n  async writeAnalog(e, n, t = {}, o = this.callOptions) {\n    const i = new At({\n      name: this.name,\n      pin: e,\n      value: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.writeAnalog(i, o);\n  }\n  async getDigitalInterruptValue(e, n = {}, t = this.callOptions) {\n    const o = new Dt({\n      boardName: this.name,\n      digitalInterruptName: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o);\n    const i = await this.client.getDigitalInterruptValue(o, t);\n    return Number(i.value);\n  }\n  async streamTicks(e, n, t = {}, o = this.callOptions) {\n    const i = new qt({\n      name: this.name,\n      pinNames: e,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i);\n    const r = this.client.streamTicks(i, o);\n    for await (const c of r) n.push({\n      pinName: c.pinName,\n      high: c.high,\n      time: c.time ? Number(c.time) : 0\n    });\n  }\n  async setPowerMode(e, n, t = {}, o = this.callOptions) {\n    const i = new Ut({\n      name: this.name,\n      powerMode: e,\n      duration: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.setPowerMode(i, o);\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst Lo = /* @__PURE__ */s.makeMessageType(\"viam.component.button.v1.PushRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  cv = /* @__PURE__ */s.makeMessageType(\"viam.component.button.v1.PushResponse\", []),\n  h_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    PushRequest: Lo,\n    PushResponse: cv\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  G1 = {\n    typeName: \"viam.component.button.v1.ButtonService\",\n    methods: {\n      /**\n       * Pushes a button\n       *\n       * @generated from rpc viam.component.button.v1.ButtonService.Push\n       */\n      push: {\n        name: \"Push\",\n        I: Lo,\n        O: cv,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.button.v1.ButtonService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  };\nclass f_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(G1), this.name = n, this.options = t;\n  }\n  async push(e = {}, n = this.callOptions) {\n    const t = new Lo({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.push(t, n);\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst L1 = /* @__PURE__ */s.makeMessageType(\"google.api.HttpBody\", () => [{\n    no: 1,\n    name: \"content_type\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"data\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }, {\n    no: 3,\n    name: \"extensions\",\n    kind: \"message\",\n    T: j,\n    repeated: !0\n  }]),\n  B1 = {\n    typeName: \"viam.component.camera.v1.CameraService\",\n    methods: {\n      /**\n       * GetImage returns a frame from a camera of the underlying robot. A specific MIME type\n       * can be requested but may not necessarily be the same one returned.\n       *\n       * @generated from rpc viam.component.camera.v1.CameraService.GetImage\n       */\n      getImage: {\n        name: \"GetImage\",\n        I: ro,\n        O: yd,\n        kind: m.Unary\n      },\n      /**\n       * @generated from rpc viam.component.camera.v1.CameraService.GetImages\n       */\n      getImages: {\n        name: \"GetImages\",\n        I: vd,\n        O: hd,\n        kind: m.Unary\n      },\n      /**\n       * RenderFrame renders a frame from a camera of the underlying robot to an HTTP response. A specific MIME type\n       * can be requested but may not necessarily be the same one returned.\n       *\n       * @generated from rpc viam.component.camera.v1.CameraService.RenderFrame\n       */\n      renderFrame: {\n        name: \"RenderFrame\",\n        I: co,\n        O: L1,\n        kind: m.Unary\n      },\n      /**\n       * GetPointCloud returns a point cloud from a camera of the underlying robot. A specific MIME type\n       * can be requested but may not necessarily be the same one returned.\n       *\n       * @generated from rpc viam.component.camera.v1.CameraService.GetPointCloud\n       */\n      getPointCloud: {\n        name: \"GetPointCloud\",\n        I: lo,\n        O: fd,\n        kind: m.Unary\n      },\n      /**\n       * GetProperties returns the camera intrinsic parameters and camera distortion parameters from a camera of the underlying robot, if available.\n       *\n       * @generated from rpc viam.component.camera.v1.CameraService.GetProperties\n       */\n      getProperties: {\n        name: \"GetProperties\",\n        I: Rd,\n        O: _d,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.camera.v1.CameraService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.camera.v1.CameraService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  x1 = \"pointcloud/pcd\";\nclass R_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(B1), this.name = n, this.options = t;\n  }\n  async getGeometries(e = {}, n = this.callOptions) {\n    const t = new J({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return (await this.client.getGeometries(t, n)).geometries;\n  }\n  async getImage(e = \"\", n = {}, t = this.callOptions) {\n    const o = new ro({\n      name: this.name,\n      mimeType: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), (await this.client.getImage(o, t)).image;\n  }\n  async renderFrame(e = \"\", n = {}, t = this.callOptions) {\n    const o = new co({\n      name: this.name,\n      mimeType: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o);\n    const i = await this.client.renderFrame(o, t);\n    return new Blob([i.data], {\n      type: e\n    });\n  }\n  async getPointCloud(e = {}, n = this.callOptions) {\n    const t = new lo({\n      name: this.name,\n      mimeType: x1,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getPointCloud(t, n)).pointCloud;\n  }\n  async getProperties(e = this.callOptions) {\n    const n = new Ta({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), this.client.getProperties(n, e);\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nclass __ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Ol), this.name = n, this.options = t;\n  }\n  async discoverResources(e = {}, n = this.callOptions) {\n    const t = new Ls({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.discoverResources(t, n)).discoveries;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst {\n  GetPropertiesResponse: S_,\n  PositionType: F1\n} = iR;\nclass I_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(im), this.name = n, this.options = t;\n  }\n  async resetPosition(e = {}, n = this.callOptions) {\n    const t = new Bt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.resetPosition(t, n);\n  }\n  async getProperties(e = {}, n = this.callOptions) {\n    const t = new xt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), this.client.getProperties(t, n);\n  }\n  async getPosition(e = F1.UNSPECIFIED, n = {}, t = this.callOptions) {\n    const o = new Lt({\n      name: this.name,\n      positionType: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o);\n    const i = await this.client.getPosition(o, t);\n    return [i.value, i.positionType];\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nclass M_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(um), this.name = n, this.options = t;\n  }\n  async getGeometries(e = {}, n = this.callOptions) {\n    const t = new J({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return (await this.client.getGeometries(t, n)).geometries;\n  }\n  async getPosition(e = {}, n = this.callOptions) {\n    const t = new Ft({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getPosition(t, n)).positionsMm;\n  }\n  async moveToPosition(e, n, t = {}, o = this.callOptions) {\n    const i = new Jt({\n      name: this.name,\n      positionsMm: e,\n      speedsMmPerSec: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.moveToPosition(i, o);\n  }\n  async home(e = {}, n = this.callOptions) {\n    const t = new zt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.home(t, n)).homed;\n  }\n  async getLengths(e = {}, n = this.callOptions) {\n    const t = new Yt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getLengths(t, n)).lengthsMm;\n  }\n  async stop(e = {}, n = this.callOptions) {\n    const t = new $t({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.stop(t, n);\n  }\n  async isMoving(e = this.callOptions) {\n    const n = new Vt({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), (await this.client.isMoving(n, e)).isMoving;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst {\n    Capsule: b_,\n    GeoGeometry: w_,\n    GeoPoint: E_,\n    GeometriesInFrame: O_,\n    Geometry: C_,\n    Orientation: N_,\n    Pose: P_,\n    PoseInFrame: A_,\n    RectangularPrism: D_,\n    ResourceName: q_,\n    Sphere: U_,\n    Transform: G_,\n    Vector3: L_,\n    WorldState: B_\n  } = Ir,\n  J1 = a => {\n    const {\n      latitude: e,\n      longitude: n\n    } = a;\n    return !(typeof e != \"number\" || typeof n != \"number\" || Number.isNaN(e) || Number.isNaN(n));\n  };\nclass x_ {\n  client;\n  options;\n  name;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Ld), this.name = n, this.options = t;\n  }\n  async metadata(e = {}, n = this.callOptions) {\n    const t = new Ud({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), this.client.metadata(t, n);\n  }\n  async infer(e, n = {}, t = this.callOptions) {\n    const o = new qd({\n      name: this.name,\n      inputTensors: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), this.client.infer(o, t);\n  }\n}\nclass F_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Gm), this.name = n, this.options = t;\n  }\n  async setPower(e, n = {}, t = this.callOptions) {\n    const o = new es({\n      name: this.name,\n      powerPct: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.setPower(o, t);\n  }\n  async goFor(e, n, t = {}, o = this.callOptions) {\n    const i = new ns({\n      name: this.name,\n      rpm: e,\n      revolutions: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.goFor(i, o);\n  }\n  async goTo(e, n, t = {}, o = this.callOptions) {\n    const i = new as({\n      name: this.name,\n      rpm: e,\n      positionRevolutions: n,\n      extra: l.fromJson(t)\n    });\n    this.options.requestLogger?.(i), await this.client.goTo(i, o);\n  }\n  async setRPM(e, n = {}, t = this.callOptions) {\n    const o = new ts({\n      name: this.name,\n      rpm: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.setRPM(o, t);\n  }\n  async resetZeroPosition(e, n = {}, t = this.callOptions) {\n    const o = new ss({\n      name: this.name,\n      offset: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.resetZeroPosition(o, t);\n  }\n  async stop(e = {}, n = this.callOptions) {\n    const t = new is({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.stop(t, n);\n  }\n  async getProperties(e = {}, n = this.callOptions) {\n    const t = new ms({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), {\n      positionReporting: (await this.client.getProperties(t, n)).positionReporting\n    };\n  }\n  async getPosition(e = {}, n = this.callOptions) {\n    const t = new os({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getPosition(t, n)).position;\n  }\n  async isPowered(e = {}, n = this.callOptions) {\n    const t = new rs({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const o = await this.client.isPowered(t, n);\n    return [o.isOn, o.powerPct];\n  }\n  async isMoving(e = this.callOptions) {\n    const n = new cs({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), (await this.client.isMoving(n, e)).isMoving;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nclass J_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Vm), this.name = n, this.options = t;\n  }\n  async getLinearVelocity(e = {}, n = this.callOptions) {\n    const t = new ls({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const i = (await this.client.getLinearVelocity(t, n)).linearVelocity;\n    if (!i) throw new Error(\"no linear velocity\");\n    return i;\n  }\n  async getAngularVelocity(e = {}, n = this.callOptions) {\n    const t = new ds({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const i = (await this.client.getAngularVelocity(t, n)).angularVelocity;\n    if (!i) throw new Error(\"no angular velocity\");\n    return i;\n  }\n  async getCompassHeading(e = {}, n = this.callOptions) {\n    const t = new ps({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getCompassHeading(t, n)).value;\n  }\n  async getOrientation(e = {}, n = this.callOptions) {\n    const t = new us({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const i = (await this.client.getOrientation(t, n)).orientation;\n    if (!i) throw new Error(\"no orientation\");\n    return i;\n  }\n  async getPosition(e = {}, n = this.callOptions) {\n    const t = new gs({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), this.client.getPosition(t, n);\n  }\n  async getProperties(e = {}, n = this.callOptions) {\n    const t = new Ts({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), this.client.getProperties(t, n);\n  }\n  async getAccuracy(e = {}, n = this.callOptions) {\n    const t = new ks({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), this.client.getAccuracy(t, n);\n  }\n  async getLinearAcceleration(e = {}, n = this.callOptions) {\n    const t = new ys({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const i = (await this.client.getLinearAcceleration(t, n)).linearAcceleration;\n    if (!i) throw new Error(\"no linear acceleration\");\n    return i;\n  }\n  async getReadings(e = {}, n = this.callOptions) {\n    const t = new Ke({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const o = await this.client.getReadings(t, n),\n      i = {};\n    for (const r of Object.keys(o.readings)) {\n      const c = o.readings[r];\n      c && (i[r] = c.toJson());\n    }\n    return i;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst {\n  GetAccuracyResponse: z_,\n  GetPositionResponse: Y_,\n  GetPropertiesResponse: $_\n} = dR;\nclass V_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Km), this.name = n, this.options = t;\n  }\n  async getVoltage(e = {}, n = this.callOptions) {\n    const t = new vs({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const o = await this.client.getVoltage(t, n);\n    return [o.volts, o.isAc];\n  }\n  async getCurrent(e = {}, n = this.callOptions) {\n    const t = new hs({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const o = await this.client.getCurrent(t, n);\n    return [o.amperes, o.isAc];\n  }\n  async getPower(e = {}, n = this.callOptions) {\n    const t = new fs({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getPower(t, n)).watts;\n  }\n  async getReadings(e = {}, n = this.callOptions) {\n    const t = new Ke({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const o = await this.client.getReadings(t, n),\n      i = {};\n    for (const r of Object.keys(o.readings)) {\n      const c = o.readings[r];\n      c && (i[r] = c.toJson());\n    }\n    return i;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst lv = {\n    typeName: \"viam.component.sensor.v1.SensorService\",\n    methods: {\n      /**\n       * GetReadings returns the readings of a sensor of the underlying robot.\n       *\n       * @generated from rpc viam.component.sensor.v1.SensorService.GetReadings\n       */\n      getReadings: {\n        name: \"GetReadings\",\n        I: Ke,\n        O: ga,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.sensor.v1.SensorService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      },\n      /**\n       * GetGeometries returns the geometries of the component in their current configuration\n       *\n       * @generated from rpc viam.component.sensor.v1.SensorService.GetGeometries\n       */\n      getGeometries: {\n        name: \"GetGeometries\",\n        I: J,\n        O: K,\n        kind: m.Unary\n      }\n    }\n  },\n  W_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    SensorService: lv\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nclass j_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(lv), this.name = n, this.options = t;\n  }\n  async getReadings(e = {}, n = this.callOptions) {\n    const t = new Ke({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const o = await this.client.getReadings(t, n),\n      i = {};\n    for (const r of Object.keys(o.readings)) {\n      const c = o.readings[r];\n      c && (i[r] = c.toJson());\n    }\n    return i;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst dv = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.ListStreamsRequest\", []),\n  pv = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.ListStreamsResponse\", () => [{\n    no: 1,\n    name: \"names\",\n    kind: \"scalar\",\n    T: 9,\n    repeated: !0\n  }]),\n  Bo = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.AddStreamRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  uv = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.AddStreamResponse\", []),\n  xo = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.RemoveStreamRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  gv = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.RemoveStreamResponse\", []),\n  Fo = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.Resolution\", () => [{\n    no: 1,\n    name: \"width\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }, {\n    no: 2,\n    name: \"height\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  }]),\n  Jo = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.GetStreamOptionsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }]),\n  Tv = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.GetStreamOptionsResponse\", () => [{\n    no: 1,\n    name: \"resolutions\",\n    kind: \"message\",\n    T: Fo,\n    repeated: !0\n  }]),\n  ca = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.SetStreamOptionsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"resolution\",\n    kind: \"message\",\n    T: Fo\n  }]),\n  kv = /* @__PURE__ */s.makeMessageType(\"proto.stream.v1.SetStreamOptionsResponse\", []),\n  H_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    AddStreamRequest: Bo,\n    AddStreamResponse: uv,\n    GetStreamOptionsRequest: Jo,\n    GetStreamOptionsResponse: Tv,\n    ListStreamsRequest: dv,\n    ListStreamsResponse: pv,\n    RemoveStreamRequest: xo,\n    RemoveStreamResponse: gv,\n    Resolution: Fo,\n    SetStreamOptionsRequest: ca,\n    SetStreamOptionsResponse: kv\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  z1 = {\n    typeName: \"proto.stream.v1.StreamService\",\n    methods: {\n      /**\n       * ListStreams returns all streams registered.\n       *\n       * @generated from rpc proto.stream.v1.StreamService.ListStreams\n       */\n      listStreams: {\n        name: \"ListStreams\",\n        I: dv,\n        O: pv,\n        kind: m.Unary\n      },\n      /**\n       * AddStream requests a particular stream be added.\n       *\n       * @generated from rpc proto.stream.v1.StreamService.AddStream\n       */\n      addStream: {\n        name: \"AddStream\",\n        I: Bo,\n        O: uv,\n        kind: m.Unary\n      },\n      /**\n       * GetStreamOptions returns the options for a particular stream.\n       *\n       * @generated from rpc proto.stream.v1.StreamService.GetStreamOptions\n       */\n      getStreamOptions: {\n        name: \"GetStreamOptions\",\n        I: Jo,\n        O: Tv,\n        kind: m.Unary\n      },\n      /**\n       * SetStreamOptions sets the options for a particular stream.\n       *\n       * @generated from rpc proto.stream.v1.StreamService.SetStreamOptions\n       */\n      setStreamOptions: {\n        name: \"SetStreamOptions\",\n        I: ca,\n        O: kv,\n        kind: m.Unary\n      },\n      /**\n       * RemoveStream requests a particular stream be removed. If the calling client\n       * is the last to be receiving the stream, it will attempt to be stopped to\n       * conserve resources.\n       *\n       * @generated from rpc proto.stream.v1.StreamService.RemoveStream\n       */\n      removeStream: {\n        name: \"RemoveStream\",\n        I: xo,\n        O: gv,\n        kind: m.Unary\n      }\n    }\n  },\n  un = a => a.replaceAll(\":\", \"+\");\nclass K_ extends Mr {\n  client;\n  options;\n  streams;\n  constructor(e, n = {}) {\n    super(), this.client = e.createServiceClient(z1), this.options = n, this.streams = /* @__PURE__ */new Set(), e.on(\"track\", t => {\n      this.emit(\"track\", t);\n    }), e.on(ae.CONNECTED, () => {\n      for (const t of this.streams.values()) this.add(t);\n    });\n  }\n  async add(e) {\n    const n = new Bo({\n      name: un(e)\n    });\n    this.options.requestLogger?.(n);\n    try {\n      await this.client.addStream(n), this.streams.add(e);\n    } catch {\n      n.name = e, this.options.requestLogger?.(n), await this.client.addStream(n), this.streams.add(e);\n    }\n  }\n  async remove(e) {\n    const n = new xo({\n      name: un(e)\n    });\n    this.options.requestLogger?.(n);\n    try {\n      await this.client.removeStream(n), this.streams.delete(e);\n    } catch {\n      n.name = e, this.options.requestLogger?.(n), await this.client.removeStream(n), this.streams.delete(e);\n    }\n  }\n  /**\n   * Get the available livestream resolutions for a camera component. If the\n   * stream client cannot find any available resolutions, an empty list will be\n   * returned.\n   *\n   * @param resourceName - The name of a camera component.\n   * @returns A list of available resolutions for livestreaming.\n   */\n  async getOptions(e) {\n    const n = async i => {\n        const r = new Jo({\n          name: i\n        });\n        this.options.requestLogger?.(r);\n        try {\n          return (await this.client.getStreamOptions(r)).resolutions;\n        } catch {\n          return [];\n        }\n      },\n      t = un(e);\n    let o = await n(t);\n    return o.length > 0 || (o = await n(e)), o;\n  }\n  /**\n   * Set the livestream options for a camera component. This will change the\n   * resolution of the stream to the specified width and height.\n   *\n   * @param name - The name of a camera component.\n   * @param width - The width of the resolution.\n   * @param height - The height of the resolution.\n   */\n  async setOptions(e, n, t) {\n    const o = new ca({\n      name: un(e),\n      resolution: {\n        width: n,\n        height: t\n      }\n    });\n    this.options.requestLogger?.(o);\n    try {\n      await this.client.setStreamOptions(o);\n    } catch {\n      o.name = e, this.options.requestLogger?.(o), await this.client.setStreamOptions(o);\n    }\n  }\n  /**\n   * Reset the livestream options for a camera component. This will reset the\n   * resolution to the default component attributes.\n   *\n   * @param name - The name of a camera component.\n   */\n  async resetOptions(e) {\n    const n = new ca({\n      name: un(e)\n    });\n    this.options.requestLogger?.(n);\n    try {\n      await this.client.setStreamOptions(n);\n    } catch {\n      n.name = e, this.options.requestLogger?.(n), await this.client.setStreamOptions(n);\n    }\n  }\n  STREAM_TIMEOUT = 5e3;\n  /**\n   * Get a stream by name from a StreamClient. Will time out if stream is not\n   * received within 5 seconds.\n   *\n   * @param name - The name of a camera component.\n   */\n  getStream = async e => {\n    const n = new Promise((t, o) => {\n      const i = r => {\n        const [c] = r.streams;\n        c ? c.id === e && (this.off(\"track\", i), t(c)) : (this.off(\"track\", i), o(new Error(\"Received track event with no streams\")));\n      };\n      this.on(\"track\", i), setTimeout(() => {\n        this.off(\"track\", i), o(new Error(`Did not receive a stream after ${this.STREAM_TIMEOUT} ms`));\n      }, this.STREAM_TIMEOUT);\n    });\n    return await this.add(e), n;\n  };\n}\nconst zo = /* @__PURE__ */s.makeMessageType(\"viam.component.switch.v1.SetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 2,\n    name: \"position\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  yv = /* @__PURE__ */s.makeMessageType(\"viam.component.switch.v1.SetPositionResponse\", []),\n  Yo = /* @__PURE__ */s.makeMessageType(\"viam.component.switch.v1.GetPositionRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  vv = /* @__PURE__ */s.makeMessageType(\"viam.component.switch.v1.GetPositionResponse\", () => [{\n    no: 1,\n    name: \"position\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }]),\n  $o = /* @__PURE__ */s.makeMessageType(\"viam.component.switch.v1.GetNumberOfPositionsRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  hv = /* @__PURE__ */s.makeMessageType(\"viam.component.switch.v1.GetNumberOfPositionsResponse\", () => [{\n    no: 1,\n    name: \"number_of_positions\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }]),\n  X_ = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GetNumberOfPositionsRequest: $o,\n    GetNumberOfPositionsResponse: hv,\n    GetPositionRequest: Yo,\n    GetPositionResponse: vv,\n    SetPositionRequest: zo,\n    SetPositionResponse: yv\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  Y1 = {\n    typeName: \"viam.component.switch.v1.SwitchService\",\n    methods: {\n      /**\n       * Set the position of the switch\n       *\n       * @generated from rpc viam.component.switch.v1.SwitchService.SetPosition\n       */\n      setPosition: {\n        name: \"SetPosition\",\n        I: zo,\n        O: yv,\n        kind: m.Unary\n      },\n      /**\n       * Get the position of the switch\n       *\n       * @generated from rpc viam.component.switch.v1.SwitchService.GetPosition\n       */\n      getPosition: {\n        name: \"GetPosition\",\n        I: Yo,\n        O: vv,\n        kind: m.Unary\n      },\n      /**\n       * Get the number of positions that the switch supports\n       *\n       * @generated from rpc viam.component.switch.v1.SwitchService.GetNumberOfPositions\n       */\n      getNumberOfPositions: {\n        name: \"GetNumberOfPositions\",\n        I: $o,\n        O: hv,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.component.switch.v1.SwitchService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  };\nclass Q_ {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Y1), this.name = n, this.options = t;\n  }\n  async setPosition(e, n = {}, t = this.callOptions) {\n    const o = new zo({\n      name: this.name,\n      position: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.setPosition(o, t);\n  }\n  async getPosition(e = {}, n = this.callOptions) {\n    const t = new Yo({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getPosition(t, n)).position;\n  }\n  async getNumberOfPositions(e = {}, n = this.callOptions) {\n    const t = new $o({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getNumberOfPositions(t, n)).numberOfPositions;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nlet Z_ = class {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Wt), this.name = n, this.options = t;\n  }\n  async getGeometries(e = {}, n = this.callOptions) {\n    const t = new J({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return (await this.client.getGeometries(t, n)).geometries;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n};\nclass nS {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(vm), this.name = n, this.options = t;\n  }\n  async getGeometries(e = {}, n = this.callOptions) {\n    const t = new J({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return (await this.client.getGeometries(t, n)).geometries;\n  }\n  async open(e = {}, n = this.callOptions) {\n    const t = new jt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.open(t, n);\n  }\n  async grab(e = {}, n = this.callOptions) {\n    const t = new Ht({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.grab(t, n);\n  }\n  async stop(e = {}, n = this.callOptions) {\n    const t = new Kt({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.stop(t, n);\n  }\n  async isMoving(e = this.callOptions) {\n    const n = new Xt({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), (await this.client.isMoving(n, e)).isMoving;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nclass aS {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(bm), this.name = n, this.options = t;\n  }\n  async getEvents(e = {}, n = this.callOptions) {\n    const t = new Qt({\n      controller: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getEvents(t, n)).events;\n  }\n  async triggerEvent(e, n = {}, t = this.callOptions) {\n    const o = new Zt({\n      controller: this.name,\n      event: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.triggerEvent(o, t);\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst {\n    Event: tS\n  } = cR,\n  {\n    CollisionSpecification: sS,\n    Constraints: oS,\n    GetPlanResponse: iS,\n    LinearConstraint: rS,\n    ListPlanStatusesResponse: mS,\n    MotionConfiguration: cS,\n    ObstacleDetector: lS,\n    OrientationConstraint: dS,\n    PlanState: pS\n  } = RR;\nclass uS {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(jl), this.name = n, this.options = t;\n  }\n  async move(e, n, t, o, i = {}, r = this.callOptions) {\n    const c = new Bs({\n      name: this.name,\n      destination: e,\n      componentName: n,\n      worldState: t,\n      constraints: o,\n      extra: l.fromJson(i)\n    });\n    return this.options.requestLogger?.(c), (await this.client.move(c, r)).success;\n  }\n  async moveOnMap(e, n, t, o, i, r = {}, c = this.callOptions) {\n    const p = new xs({\n      name: this.name,\n      destination: e,\n      componentName: n,\n      slamServiceName: t,\n      motionConfiguration: o,\n      obstacles: i,\n      extra: l.fromJson(r)\n    });\n    return this.options.requestLogger?.(p), (await this.client.moveOnMap(p, c)).executionId;\n  }\n  async moveOnGlobe(e, n, t, o, i, r, c, p = {}, d = this.callOptions) {\n    const T = new Js({\n      name: this.name,\n      destination: e,\n      componentName: n,\n      movementSensorName: t,\n      heading: o,\n      obstacles: i,\n      boundingRegions: c,\n      motionConfiguration: r,\n      extra: l.fromJson(p)\n    });\n    return this.options.requestLogger?.(T), (await this.client.moveOnGlobe(T, d)).executionId;\n  }\n  async stopPlan(e, n = {}, t = this.callOptions) {\n    const o = new Ys({\n      name: this.name,\n      componentName: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), await this.client.stopPlan(o, t), null;\n  }\n  async getPlan(e, n, t, o = {}, i = this.callOptions) {\n    const r = new Vs({\n      name: this.name,\n      componentName: e,\n      lastPlanOnly: n,\n      executionId: t,\n      extra: l.fromJson(o)\n    });\n    return this.options.requestLogger?.(r), this.client.getPlan(r, i);\n  }\n  async listPlanStatuses(e, n = {}, t = this.callOptions) {\n    const o = new $s({\n      name: this.name,\n      onlyActivePlans: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), this.client.listPlanStatuses(o, t);\n  }\n  async getPose(e, n, t, o = {}, i = this.callOptions) {\n    const r = new zs({\n      name: this.name,\n      componentName: e,\n      destinationFrame: n,\n      supplementalTransforms: t,\n      extra: l.fromJson(o)\n    });\n    this.options.requestLogger?.(r);\n    const p = (await this.client.getPose(r, i)).pose;\n    if (!p) throw new Error(\"no pose\");\n    return p;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst Vo = /* @__PURE__ */s.makeMessageType(\"viam.service.datamanager.v1.SyncRequest\", () => [{\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }, {\n    no: 99,\n    name: \"extra\",\n    kind: \"message\",\n    T: l\n  }]),\n  fv = /* @__PURE__ */s.makeMessageType(\"viam.service.datamanager.v1.SyncResponse\", []),\n  gS = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    SyncRequest: Vo,\n    SyncResponse: fv\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  $1 = {\n    typeName: \"viam.service.datamanager.v1.DataManagerService\",\n    methods: {\n      /**\n       * Sync performs a sync of the non-synced files for the specified service name,\n       *\n       * @generated from rpc viam.service.datamanager.v1.DataManagerService.Sync\n       */\n      sync: {\n        name: \"Sync\",\n        I: Vo,\n        O: fv,\n        kind: m.Unary\n      },\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.service.datamanager.v1.DataManagerService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  };\nclass TS {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient($1), this.name = n, this.options = t;\n  }\n  /**\n   * Sync data stored on the machine to the cloud.\n   *\n   * @example\n   *\n   * ```ts\n   * const dataManager = new VIAM.DataManagerClient(\n   *   machine,\n   *   'my_data_manager'\n   * );\n   * await dataManager.sync();\n   * ```\n   *\n   * For more information, see [Data Manager\n   * API](https://docs.viam.com/dev/reference/apis/services/data/#sync).\n   *\n   * @param extra - Extra arguments to pass to the sync request.\n   * @param callOptions - Call options for the sync request.\n   */\n  async sync(e = {}, n = this.callOptions) {\n    const t = new Vo({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.sync(t, n);\n  }\n  /**\n   * Do a command on the data manager.\n   *\n   * @example\n   *\n   * ```ts\n   * const dataManager = new VIAM.DataManagerClient(\n   *   machine,\n   *   'my_data_manager'\n   * );\n   * await dataManager.doCommand(new Struct({ cmd: 'test', data1: 500 }));\n   * ```\n   *\n   * For more information, see [Data Manager\n   * API](https://docs.viam.com/dev/reference/apis/services/data/#docommand).\n   *\n   * @param command - The command to do.\n   * @param callOptions - Call options for the command.\n   */\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nclass kS {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(rd), this.name = n, this.options = t;\n  }\n  async getMode(e = {}, n = this.callOptions) {\n    const t = new js({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getMode(t, n)).mode;\n  }\n  async setMode(e, n = {}, t = this.callOptions) {\n    const o = new Hs({\n      name: this.name,\n      mode: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.setMode(o, t);\n  }\n  async getLocation(e = {}, n = this.callOptions) {\n    const t = new Ks({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const o = await this.client.getLocation(t, n);\n    if (!o.location) throw new Error(\"no location\");\n    if (!J1(o.location)) throw new Error(\"invalid location\");\n    return o;\n  }\n  async getWayPoints(e = {}, n = this.callOptions) {\n    const t = new Xs({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getWaypoints(t, n)).waypoints;\n  }\n  async addWayPoint(e, n = {}, t = this.callOptions) {\n    const o = new Qs({\n      name: this.name,\n      location: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.addWaypoint(o, t);\n  }\n  async removeWayPoint(e, n = {}, t = this.callOptions) {\n    const o = new Zs({\n      name: this.name,\n      id: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.removeWaypoint(o, t);\n  }\n  async getObstacles(e = {}, n = this.callOptions) {\n    const t = new eo({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getObstacles(t, n)).obstacles;\n  }\n  async getPaths(e = {}, n = this.callOptions) {\n    const t = new no({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getPaths(t, n)).paths;\n  }\n  async getProperties(e = this.callOptions) {\n    const n = new ao({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), this.client.getProperties(n, e);\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst {\n  GetLocationResponse: yS,\n  GetPropertiesResponse: vS,\n  Mode: hS,\n  Path: fS,\n  Waypoint: RS\n} = _R;\nclass _S {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(nc), this.name = n, this.options = t;\n  }\n  async move(e, n = {}, t = this.callOptions) {\n    const o = new Rs({\n      name: this.name,\n      angleDeg: e,\n      extra: l.fromJson(n)\n    });\n    this.options.requestLogger?.(o), await this.client.move(o, t);\n  }\n  async getPosition(e = {}, n = this.callOptions) {\n    const t = new _s({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    return this.options.requestLogger?.(t), (await this.client.getPosition(t, n)).positionDeg;\n  }\n  async stop(e = {}, n = this.callOptions) {\n    const t = new Ss({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t), await this.client.stop(t, n);\n  }\n  async isMoving(e = this.callOptions) {\n    const n = new Is({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), (await this.client.isMoving(n, e)).isMoving;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nclass SS {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Td), this.name = n, this.options = t;\n  }\n  async getPosition(e = this.callOptions) {\n    const n = new to({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), this.client.getPosition(n, e);\n  }\n  getPointCloudMap = async (e, n = this.callOptions) => {\n    const t = new so({\n      name: this.name,\n      returnEditedMap: e\n    });\n    this.options.requestLogger?.(t);\n    const o = [],\n      i = this.client.getPointCloudMap(t, n);\n    for await (const r of i) o.push(r.pointCloudPcdChunk);\n    return Ii(o);\n  };\n  getInternalState = async (e = this.callOptions) => {\n    const n = new oo({\n      name: this.name\n    });\n    this.options.requestLogger?.(n);\n    const t = [],\n      o = this.client.getInternalState(n, e);\n    for await (const i of o) t.push(i.internalStateChunk);\n    return Ii(t);\n  };\n  async getProperties(e = this.callOptions) {\n    const n = new io({\n      name: this.name\n    });\n    return this.options.requestLogger?.(n), this.client.getProperties(n, e);\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst Ii = a => {\n    const e = a.reduce((o, i) => o + i.length, 0),\n      n = new Uint8Array(e);\n    let t = 0;\n    for (const o of a) n.set(o, t), t += o.length;\n    return n;\n  },\n  {\n    GetPositionResponse: IS,\n    GetPropertiesResponse: MS\n  } = SR;\nclass bS {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Dd), this.name = n, this.options = t;\n  }\n  async getDetectionsFromCamera(e, n = {}, t = this.callOptions) {\n    const o = new uo({\n      name: this.name,\n      cameraName: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), (await this.client.getDetectionsFromCamera(o, t)).detections;\n  }\n  async getDetections(e, n, t, o, i = {}, r = this.callOptions) {\n    const c = new po({\n      name: this.name,\n      image: e,\n      width: n ? BigInt(n) : void 0,\n      height: t ? BigInt(t) : void 0,\n      mimeType: o,\n      extra: l.fromJson(i)\n    });\n    return this.options.requestLogger?.(c), (await this.client.getDetections(c, r)).detections;\n  }\n  async getClassificationsFromCamera(e, n, t = {}, o = this.callOptions) {\n    const i = new To({\n      name: this.name,\n      cameraName: e,\n      n,\n      // eslint-disable-line id-length\n      extra: l.fromJson(t)\n    });\n    return this.options.requestLogger?.(i), (await this.client.getClassificationsFromCamera(i, o)).classifications;\n  }\n  async getClassifications(e, n, t, o, i, r = {}, c = this.callOptions) {\n    const p = new go({\n      name: this.name,\n      image: e,\n      width: n,\n      height: t,\n      mimeType: o,\n      n: i,\n      // eslint-disable-line id-length\n      extra: l.fromJson(r)\n    });\n    return this.options.requestLogger?.(p), (await this.client.getClassifications(p, c)).classifications;\n  }\n  async getObjectPointClouds(e, n = {}, t = this.callOptions) {\n    const o = new ko({\n      name: this.name,\n      cameraName: e,\n      extra: l.fromJson(n)\n    });\n    return this.options.requestLogger?.(o), (await this.client.getObjectPointClouds(o, t)).objects;\n  }\n  async getProperties(e = {}, n = this.callOptions) {\n    const t = new yo({\n      name: this.name,\n      extra: l.fromJson(e)\n    });\n    this.options.requestLogger?.(t);\n    const o = await this.client.getProperties(t, n);\n    return {\n      classificationsSupported: o.classificationsSupported,\n      detectionsSupported: o.detectionsSupported,\n      objectPointCloudsSupported: o.objectPointCloudsSupported\n    };\n  }\n  async captureAllFromCamera(e, {\n    returnImage: n,\n    returnClassifications: t,\n    returnDetections: o,\n    returnObjectPointClouds: i\n  }, r = {}, c = this.callOptions) {\n    const p = new vo({\n      name: this.name,\n      cameraName: e,\n      returnImage: n,\n      returnClassifications: t,\n      returnDetections: o,\n      returnObjectPointClouds: i,\n      extra: l.fromJson(r)\n    });\n    this.options.requestLogger?.(p);\n    const d = await this.client.captureAllFromCamera(p, c);\n    return {\n      image: d.image,\n      classifications: d.classifications,\n      detections: d.detections,\n      objectPointClouds: d.objects,\n      extra: d.extra\n    };\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst {\n    Classification: wS,\n    Detection: ES\n  } = MR,\n  {\n    PointCloudObject: OS\n  } = Ir,\n  Rv = {\n    typeName: \"viam.service.generic.v1.GenericService\",\n    methods: {\n      /**\n       * DoCommand sends/receives arbitrary commands\n       *\n       * @generated from rpc viam.service.generic.v1.GenericService.DoCommand\n       */\n      doCommand: {\n        name: \"DoCommand\",\n        I: q,\n        O: U,\n        kind: m.Unary\n      }\n    }\n  },\n  CS = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    GenericService: Rv\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nclass NS {\n  client;\n  name;\n  options;\n  callOptions = {\n    headers: {}\n  };\n  constructor(e, n, t = {}) {\n    this.client = e.createServiceClient(Rv), this.name = n, this.options = t;\n  }\n  async doCommand(e, n = this.callOptions) {\n    return G(this.client.doCommand, this.name, e, this.options, n);\n  }\n}\nconst PS = \"0.41.0\";\nexport { k_ as AnalogValue, u_ as ArmClient, p_ as ArmJointPositions, T_ as BaseClient, g_ as BaseProperties, v_ as BoardClient, f_ as ButtonClient, R_ as CameraClient, b_ as Capsule, wS as Classification, D as Client, mv as CloudConfig, E as Code, sS as CollisionSpecification, C as ConnectError, De as ConnectionClosedError, oS as Constraints, TS as DataManagerClient, ES as Detection, __ as DiscoveryClient, F as Duration, I_ as EncoderClient, F1 as EncoderPositionType, S_ as EncoderProperties, M_ as GantryClient, Z_ as GenericComponentClient, NS as GenericServiceClient, w_ as GeoGeometry, E_ as GeoPoint, O_ as GeometriesInFrame, C_ as Geometry, nS as GripperClient, aS as InputControllerClient, tS as InputControllerEvent, rS as LinearConstraint, mS as ListPlanStatusesResponse, x_ as MLModelClient, ae as MachineConnectionEvent, Xe as ModelType, uS as MotionClient, cS as MotionConfiguration, F_ as MotorClient, z_ as MovementSensorAccuracy, J_ as MovementSensorClient, Y_ as MovementSensorPosition, $_ as MovementSensorProperties, kS as NavigationClient, yS as NavigationPosition, vS as NavigationProperties, lS as ObstacleDetector, N_ as Orientation, dS as OrientationConstraint, fS as Path, OS as PointCloudObject, P_ as Pose, A_ as PoseInFrame, y_ as PowerMode, V_ as PowerSensorClient, D_ as RectangularPrism, q_ as ResourceName, D as RobotClient, j_ as SensorClient, _S as ServoClient, SS as SlamClient, IS as SlamPosition, MS as SlamProperties, U_ as Sphere, K_ as StreamClient, l as Struct, Q_ as SwitchClient, _ as Timestamp, ho as TrainingStatus, G_ as Transform, L_ as Vector3, bS as VisionClient, RS as Waypoint, B_ as WorldState, j1 as addMetadata, r_ as appApi, t_ as appRobotApi, aR as armApi, tR as baseApi, m_ as billingApi, oR as boardApi, h_ as buttonApi, o_ as cameraApi, Ir as commonApi, a1 as createRobotClient, d_ as createViamClient, c_ as dataApi, gS as dataManagerApi, H1 as deleteMetadata, W1 as disableDebugLogging, s_ as discoveryApi, G as doCommandFromClient, V1 as enableDebugLogging, iR as encoderApi, K1 as gantryApi, X1 as genericComponentApi, CS as genericServiceApi, Q1 as gripperApi, cR as inputControllerApi, J1 as isValidGeoPoint, i_ as mlTrainingApi, RR as motionApi, Z1 as motorApi, dR as movementSensorApi, _R as navigationApi, e_ as powerSensorApi, l_ as provisioningApi, a_ as robotApi, W_ as sensorApi, n_ as servoApi, SR as slamApi, H_ as streamApi, X_ as switchApi, PS as version, MR as visionApi };","map":null,"metadata":{},"sourceType":"module"}