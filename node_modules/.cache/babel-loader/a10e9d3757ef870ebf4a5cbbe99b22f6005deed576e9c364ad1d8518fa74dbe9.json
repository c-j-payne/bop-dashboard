{"ast":null,"code":"import * as VIAM from '@viamrobotics/sdk';\nexport const getRobotClient = async () => {\n  try {\n    console.log('Connecting to Viam robot...');\n    const host = 'bop2025-main.1qcq9pmop4.viam.cloud';\n    const client = await VIAM.createRobotClient({\n      host,\n      credentials: {\n        type: 'api-key',\n        payload: 'hxtk88rojiq2pzc7nasiiymnbfxr1dyc',\n        authEntity: '2597529f-b98b-4e62-8c94-7f99501b0a76'\n      },\n      signalingAddress: 'https://app.viam.com:443'\n    });\n    console.log('Connected successfully!');\n    return client;\n  } catch (error) {\n    console.error('Error connecting to robot:', error);\n    throw error;\n  }\n};\nexport const getCameraClient = (robotClient, cameraName) => {\n  console.log(`Creating camera client for: ${cameraName}`);\n  return new VIAM.CameraClient(robotClient, cameraName);\n};\nexport const getSensorClient = (robotClient, sensorName) => {\n  console.log(`Creating sensor client for: ${sensorName}`);\n  return new VIAM.SensorClient(robotClient, sensorName);\n};\nexport const getBoardClient = (robotClient, boardName) => {\n  console.log(`Creating board client for: ${boardName}`);\n  return new VIAM.BoardClient(robotClient, boardName);\n};","map":{"version":3,"names":["VIAM","getRobotClient","console","log","host","client","createRobotClient","credentials","type","payload","authEntity","signalingAddress","error","getCameraClient","robotClient","cameraName","CameraClient","getSensorClient","sensorName","SensorClient","getBoardClient","boardName","BoardClient"],"sources":["/home/cjp7591/dev/dashboard/src/client.js"],"sourcesContent":["import * as VIAM from '@viamrobotics/sdk';\n\nexport const getRobotClient = async () => {\n  try {\n    console.log('Connecting to Viam robot...');\n    const host = 'bop2025-main.1qcq9pmop4.viam.cloud';\n    const client = await VIAM.createRobotClient({\n      host,\n      credentials: {\n        type: 'api-key',\n        payload: 'hxtk88rojiq2pzc7nasiiymnbfxr1dyc',\n        authEntity: '2597529f-b98b-4e62-8c94-7f99501b0a76',\n      },\n      signalingAddress: 'https://app.viam.com:443',\n    });\n    \n    console.log('Connected successfully!');\n    return client;\n  } catch (error) {\n    console.error('Error connecting to robot:', error);\n    throw error;\n  }\n};\n\nexport const getCameraClient = (robotClient, cameraName) => {\n  console.log(`Creating camera client for: ${cameraName}`);\n  return new VIAM.CameraClient(robotClient, cameraName);\n};\n\nexport const getSensorClient = (robotClient, sensorName) => {\n  console.log(`Creating sensor client for: ${sensorName}`);\n  return new VIAM.SensorClient(robotClient, sensorName);\n};\n\nexport const getBoardClient = (robotClient, boardName) => {\n  console.log(`Creating board client for: ${boardName}`);\n  return new VIAM.BoardClient(robotClient, boardName);\n};"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,mBAAmB;AAEzC,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMC,IAAI,GAAG,oCAAoC;IACjD,MAAMC,MAAM,GAAG,MAAML,IAAI,CAACM,iBAAiB,CAAC;MAC1CF,IAAI;MACJG,WAAW,EAAE;QACXC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,kCAAkC;QAC3CC,UAAU,EAAE;MACd,CAAC;MACDC,gBAAgB,EAAE;IACpB,CAAC,CAAC;IAEFT,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,OAAOE,MAAM;EACf,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,WAAW,EAAEC,UAAU,KAAK;EAC1Db,OAAO,CAACC,GAAG,CAAC,+BAA+BY,UAAU,EAAE,CAAC;EACxD,OAAO,IAAIf,IAAI,CAACgB,YAAY,CAACF,WAAW,EAAEC,UAAU,CAAC;AACvD,CAAC;AAED,OAAO,MAAME,eAAe,GAAGA,CAACH,WAAW,EAAEI,UAAU,KAAK;EAC1DhB,OAAO,CAACC,GAAG,CAAC,+BAA+Be,UAAU,EAAE,CAAC;EACxD,OAAO,IAAIlB,IAAI,CAACmB,YAAY,CAACL,WAAW,EAAEI,UAAU,CAAC;AACvD,CAAC;AAED,OAAO,MAAME,cAAc,GAAGA,CAACN,WAAW,EAAEO,SAAS,KAAK;EACxDnB,OAAO,CAACC,GAAG,CAAC,8BAA8BkB,SAAS,EAAE,CAAC;EACtD,OAAO,IAAIrB,IAAI,CAACsB,WAAW,CAACR,WAAW,EAAEO,SAAS,CAAC;AACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}